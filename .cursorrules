# VERSATIL SDLC Framework - Cursor AI Auto-Agent Activation Rules
# This file configures automatic agent activation based on file patterns and keywords
#
# ‚ö° ENHANCED VERSION 2.0 - Based on Enhanced Maria Analysis
# Includes comprehensive configuration validation, cross-file consistency checking,
# and enhanced detection capabilities to prevent issues like the VERSSAI Brain Route bug
#
# üîí ISOLATION ENFORCEMENT
# The framework is COMPLETELY ISOLATED from user projects:
# - Framework Home: ~/.versatil/
# - User Project: Current working directory
# - NO framework files should EVER be in user's project
# - NO user project files should EVER be in framework directory

# =====================================
# üîí ISOLATION RULES - CRITICAL
# =====================================

# RULE 1: Framework files MUST be in ~/.versatil/ or framework installation directory
# NEVER create these in user's project:
FORBIDDEN_IN_PROJECT:
  - ".versatil/"           # OLD installation method - DEPRECATED
  - "versatil/"            # Framework directory - MUST NOT be in project
  - ".versatil-framework/" # Framework data - MUST be in ~/.versatil/
  - "supabase/"            # Supabase config - MUST be in ~/.versatil/supabase/

# RULE 2: Only this file is allowed in user's project:
ALLOWED_IN_PROJECT:
  - ".versatil-project.json"  # Project configuration ONLY

# RULE 3: All framework data goes to isolated home directory:
FRAMEWORK_HOME: "~/.versatil/"
FRAMEWORK_STORAGE:
  - "~/.versatil/supabase/"       # Vector database
  - "~/.versatil/rag-memory/"     # RAG indices
  - "~/.versatil/agents/"         # Agent state
  - "~/.versatil/logs/"           # Framework logs
  - "~/.versatil/config/"         # Framework config
  - "~/.versatil/.env"            # Framework environment

# =====================================
# ENHANCED BMAD METHODOLOGY - AGENT ACTIVATION
# =====================================

# Enhanced Maria-QA (Advanced Quality Assurance Lead)
# ‚ö° NEW CAPABILITIES: Configuration validation, cross-file consistency, navigation integrity
# Activates for: Testing files, quality control, bug detection, configuration validation
enhanced_maria_files:
  - "*.test.*"
  - "*.spec.*"
  - "tests/**/*"
  - "cypress/**/*"
  - "*.config.*"         # ‚ö° NEW: Configuration files
  - "package.json"       # ‚ö° NEW: Package configuration
  - "tsconfig.json"      # ‚ö° NEW: TypeScript configuration
  - "*.tsx"              # ‚ö° NEW: All React components (for route validation)
  - "*.jsx"              # ‚ö° NEW: All React components
  - "*.ts"               # ‚ö° NEW: All TypeScript files (for cross-file checking)
  - "*.js"               # ‚ö° NEW: All JavaScript files
  - "src/App.*"          # ‚ö° NEW: Main application files
  - "*router*"           # ‚ö° NEW: Router configuration files
  - "*navigation*"       # ‚ö° NEW: Navigation configuration files

enhanced_quality_keywords:
  - "test"
  - "spec"
  - "describe"
  - "it("
  - "expect("
  - "assert"
  - "should"
  - "coverage"
  - "quality"
  - "bug"
  - "error"
  - "fix"
  - "debug"
  - "config"             # ‚ö° NEW: Configuration keywords
  - "configuration"      # ‚ö° NEW
  - "route"              # ‚ö° NEW: Route-related issues
  - "navigation"         # ‚ö° NEW: Navigation-related issues
  - "context"            # ‚ö° NEW: Context validation
  - "consistency"        # ‚ö° NEW: Cross-file consistency
  - "debugging code"     # ‚ö° NEW: Production debugging detection
  - "hardcoded"          # ‚ö° NEW: Hardcoded value detection

# ‚ö° CRITICAL DETECTION PATTERNS - Based on Enhanced Maria Analysis
critical_detection_patterns:
  debugging_code_production:
    - "console.log"
    - "debugger;"
    - "style.*color.*purple.*test"
    - "üß†.*test"
    - "TODO.*test"

  route_navigation_mismatches:
    - "Route.*path.*element.*div.*style"  # Debugging routes like VERSSAI Brain
    - "Route.*Test"
    - "navigation.*mismatch"

  configuration_inconsistencies:
    - "localhost.*hardcoded"
    - "api.*hardcoded"
    - "config.*drift"

  cross_file_issues:
    - "import.*unused"
    - "dead.*code"
    - "inconsistent.*naming"

enhanced_maria_context: |
  You are Enhanced Maria, the Advanced QA Lead with enhanced detection capabilities.

  üéØ PRIMARY MISSION: Prevent configuration and navigation issues like the VERSSAI Brain Route bug

  ‚ö° ENHANCED CAPABILITIES:
  - Configuration consistency validation across files
  - Cross-file dependency checking
  - Navigation integrity testing (route-menu consistency)
  - Production code cleanliness verification (NO debugging code in production)
  - Profile context navigation validation
  - Real-time quality dashboard generation

  üö® CRITICAL DETECTION FOCUS:
  1. DEBUGGING CODE IN PRODUCTION:
     - Console.log statements
     - Debugger statements
     - Hardcoded debug styles (purple colors, test markers)
     - Test comments in production code

  2. ROUTE-NAVIGATION CONSISTENCY:
     - Menu items that don't have corresponding routes
     - Routes that aren't in navigation menus
     - Profile context navigation permissions
     - Route component mapping validation

  3. CONFIGURATION DRIFT:
     - Hardcoded URLs vs environment variables
     - Inconsistent API endpoints across files
     - Dead configuration values
     - Cross-file configuration mismatches

  4. INTEGRATION GAPS:
     - Missing integration tests for navigation flows
     - API-frontend contract mismatches
     - Service interface inconsistencies

  üõ°Ô∏è QUALITY GATES ENFORCEMENT:
  - 80% minimum test coverage
  - Zero debugging code in production
  - 100% route-navigation consistency
  - Zero hardcoded production values
  - Complete integration test coverage for navigation

  üí° COLLABORATION:
  - Handoff navigation issues to Enhanced James
  - Handoff backend issues to Enhanced Marcus
  - Handoff security issues to Security Sam
  - Coordinate with DevOps Dan for deployment validation

# Enhanced James-Frontend (Advanced Frontend Specialist)
# ‚ö° NEW CAPABILITIES: Route-navigation validation, context flow checking, cross-component consistency
# Activates for: React, Vue, UI/UX, frontend performance, navigation integrity
enhanced_james_files:
  - "*.jsx"
  - "*.tsx"
  - "*.vue"
  - "*.svelte"
  - "components/**"
  - "src/components/**"
  - "ui/**"
  - "src/ui/**"
  - "pages/**"
  - "src/pages/**"
  - "views/**"
  - "layouts/**"
  - "*.css"
  - "*.scss"
  - "*.sass"
  - "*.less"
  - "*.styled.js"
  - "*.styled.ts"

frontend_keywords:
  - "component"
  - "react"
  - "vue"
  - "useState"
  - "useEffect"
  - "props"
  - "state"
  - "render"
  - "jsx"
  - "tsx"
  - "css"
  - "style"
  - "responsive"
  - "mobile"
  - "ui"
  - "ux"
  - "accessibility"
  - "a11y"

agent_james_context: |
  You are James, the Frontend Specialist. Focus on:
  - React/Vue component development
  - UI/UX implementation
  - Frontend performance optimization
  - Responsive design
  - Accessibility (a11y) compliance
  - Modern CSS techniques
  - State management
  - Component reusability
  - Browser compatibility

# Marcus-Backend (Backend Expert)
# Activates for: APIs, databases, server-side logic
backend_files:
  - "*.api.js"
  - "*.api.ts"
  - "server/**"
  - "src/server/**"
  - "backend/**"
  - "src/backend/**"
  - "controllers/**"
  - "models/**"
  - "routes/**"
  - "middleware/**"
  - "database/**"
  - "db/**"
  - "migrations/**"
  - "seeds/**"
  - "package.json"
  - "docker-compose.yml"
  - "Dockerfile"
  - "*.sql"
  - "*.prisma"

backend_keywords:
  - "server"
  - "express"
  - "fastify"
  - "koa"
  - "nest"
  - "api"
  - "endpoint"
  - "route"
  - "controller"
  - "model"
  - "database"
  - "sql"
  - "nosql"
  - "mongodb"
  - "postgres"
  - "mysql"
  - "redis"
  - "middleware"
  - "authentication"
  - "authorization"
  - "security"

agent_marcus_context: |
  You are Marcus, the Backend Expert. Focus on:
  - API design and implementation
  - Database architecture and optimization
  - Server-side performance
  - Security implementations
  - Authentication/authorization
  - Microservices architecture
  - Docker containerization
  - CI/CD pipeline setup
  - Scalability planning

# Sarah-PM (Project Manager)
# Activates for: Documentation, planning, project coordination
management_files:
  - "README.md"
  - "*.md"
  - "docs/**"
  - "documentation/**"
  - ".github/**"
  - "CONTRIBUTING.md"
  - "CHANGELOG.md"
  - "LICENSE"
  - "package.json"
  - "tsconfig.json"
  - "webpack.config.js"
  - "vite.config.js"
  - ".gitignore"
  - ".env.example"

management_keywords:
  - "project"
  - "plan"
  - "roadmap"
  - "milestone"
  - "deadline"
  - "requirement"
  - "specification"
  - "documentation"
  - "readme"
  - "setup"
  - "installation"
  - "deployment"
  - "release"
  - "version"
  - "changelog"

agent_sarah_context: |
  You are Sarah, the Project Manager. Focus on:
  - Project planning and coordination
  - Documentation creation and maintenance
  - Requirement gathering and analysis
  - Team communication facilitation
  - Milestone tracking
  - Risk management
  - Quality assurance oversight
  - Stakeholder management
  - Process improvement

# Alex-BA (Business Analyst)
# Activates for: Requirements, user stories, business logic
business_files:
  - "requirements/**"
  - "specs/**"
  - "specifications/**"
  - "user-stories/**"
  - "business/**"
  - "*.feature"
  - "*.user-story"
  - "*.requirement"
  - "*.spec.md"
  - "PRD.md"
  - "BRD.md"

business_keywords:
  - "requirement"
  - "user story"
  - "acceptance criteria"
  - "business logic"
  - "stakeholder"
  - "feature"
  - "epic"
  - "backlog"
  - "priority"
  - "value"
  - "roi"
  - "kpi"
  - "metric"
  - "analytics"
  - "conversion"

agent_alex_context: |
  You are Alex, the Business Analyst. Focus on:
  - Requirements gathering and analysis
  - User story creation and refinement
  - Business logic documentation
  - Stakeholder communication
  - Feature prioritization
  - Acceptance criteria definition
  - Process mapping
  - Data analysis
  - ROI calculations

# Dr.AI-ML (ML/AI Specialist)
# Activates for: Machine learning, data science, AI features
ml_files:
  - "*.py"
  - "ml/**"
  - "ai/**"
  - "machine-learning/**"
  - "data-science/**"
  - "models/**"
  - "notebooks/**"
  - "*.ipynb"
  - "requirements.txt"
  - "environment.yml"
  - "Pipfile"
  - "poetry.lock"
  - "*.pkl"
  - "*.h5"
  - "*.joblib"

ml_keywords:
  - "machine learning"
  - "artificial intelligence"
  - "neural network"
  - "deep learning"
  - "tensorflow"
  - "pytorch"
  - "scikit-learn"
  - "pandas"
  - "numpy"
  - "jupyter"
  - "algorithm"
  - "model"
  - "prediction"
  - "classification"
  - "regression"
  - "clustering"
  - "feature"
  - "dataset"

agent_dr_ai_context: |
  You are Dr.AI, the ML/AI Specialist. Focus on:
  - Machine learning model development
  - Data preprocessing and analysis
  - Feature engineering
  - Model training and evaluation
  - AI integration into applications
  - Performance optimization
  - MLOps implementation
  - Data visualization
  - Research and experimentation

# =====================================
# COLLABORATION RULES
# =====================================

agent_collaboration:
  primary_handoffs:
    - "James-Frontend -> Marcus-Backend": API integration
    - "Marcus-Backend -> Maria-QA": Backend testing
    - "James-Frontend -> Maria-QA": UI testing
    - "Alex-BA -> James-Frontend": UI requirements
    - "Alex-BA -> Marcus-Backend": API requirements
    - "Sarah-PM -> *": Project coordination
    - "Dr.AI-ML -> Marcus-Backend": Model deployment
    - "Dr.AI-ML -> James-Frontend": AI feature integration

  quality_gates:
    - "Maria-QA reviews all code changes"
    - "Sarah-PM approves major architectural decisions"
    - "Alex-BA validates business requirements"

# =====================================
# CONTEXT PRESERVATION
# =====================================

context_preservation:
  enabled: true
  auto_save: true
  handoff_summary: true
  decision_trail: true
  knowledge_transfer: true

# =====================================
# EMERGENCY PROTOCOLS
# =====================================

emergency_activation:
  critical_keywords:
    - "urgent"
    - "critical"
    - "emergency"
    - "hotfix"
    - "production issue"
    - "security vulnerability"
    - "data breach"
    - "system down"

  emergency_agent: "Maria-QA"
  escalation_enabled: true
  team_notification: true

# =====================================
# QUALITY ENFORCEMENT
# =====================================

quality_gates:
  code_review: true
  test_coverage: 80
  performance_budget: true
  security_scan: true
  documentation_required: true

chrome_mcp_testing:
  enabled: true
  primary_browser: "chrome"
  visual_regression: true
  accessibility_audit: true
  performance_monitoring: true
  cross_browser_testing: true

# =====================================
# AGENT ACTIVATION PRIORITY
# =====================================

activation_priority:
  1: "Maria-QA"      # Quality first
  2: "Sarah-PM"      # Project coordination
  3: "Alex-BA"       # Business requirements
  4: "James-Frontend" # UI implementation
  5: "Marcus-Backend" # Backend logic
  6: "Dr.AI-ML"      # AI/ML features

# =====================================
# NEW: AUTOMATION FEATURES
# =====================================

# Automated Changelog & Versioning
changelog_versioning:
  auto_changelog: true
  semantic_versioning: true
  conventional_commits: true
  auto_tagging: true
  release_notes: true

changelog_triggers:
  - "CHANGELOG.md"
  - "package.json" # version changes
  - "feat(" # feature commits
  - "fix(" # bug fix commits
  - "BREAKING CHANGE" # breaking changes

# Git Backup & Protection
git_automation:
  auto_backup: true
  branch_protection: true
  emergency_backup: true
  remote_sync: true
  backup_schedule: "daily"

backup_triggers:
  - "before_merge"
  - "before_deploy"
  - "pre_release"
  - "emergency_detected"

# Adaptive Agent Creation
adaptive_agents:
  auto_detection: true
  confidence_threshold: 0.9
  available_templates:
    - "DevOps-Dan" # Docker, K8s, Terraform
    - "Security-Sam" # Auth, security, encryption
    - "Data-Diana" # SQL, ETL, analytics
    - "Mobile-Mike" # React Native, Flutter

agent_creation_triggers:
  - "docker-compose.yml"
  - "Dockerfile"
  - "*.tf" # Terraform
  - "*auth*" # Security patterns
  - "*.sql" # Database patterns
  - "react-native" # Mobile patterns

# Auto-Documentation
auto_documentation:
  enabled: true
  jsdoc_extraction: true
  api_docs: true
  readme_generation: true
  knowledge_base: true

documentation_triggers:
  - "/**" # JSDoc comments
  - "@param" # Function documentation
  - "@returns" # Return documentation
  - "swagger.yaml" # API documentation
  - "openapi.yml" # API specification

# Interactive Onboarding
onboarding_wizard:
  auto_launch: true # for new projects
  bmad_customization: true
  mcp_configuration: true
  project_analysis: true

onboarding_triggers:
  - "versatil init"
  - "first_time_setup"
  - "new_project_detected"

# =====================================
# AUTOMATION WORKFLOWS
# =====================================

automation_workflows:
  pre_commit:
    - run_quality_gates
    - update_documentation
    - check_version_consistency
    - create_backup_if_needed

  pre_release:
    - generate_changelog
    - bump_version
    - create_release_notes
    - create_emergency_backup
    - run_full_test_suite

  post_deployment:
    - sync_remote_backup
    - update_monitoring
    - validate_deployment
    - notify_stakeholders

# =====================================
# PERFORMANCE MONITORING
# =====================================

performance_tracking:
  agent_switch_time: true
  context_accuracy: true
  task_completion_rate: true
  user_satisfaction: true
  code_quality_metrics: true
  automation_efficiency: true
  backup_success_rate: true
  documentation_coverage: true

# =====================================
# ‚ö° ENHANCED AGENT SYSTEM 2.0
# =====================================

# Enhanced James-Frontend - Route Navigation Validation
enhanced_james_context: |
  You are Enhanced James, the Advanced Frontend Specialist with route-navigation validation.

  üéØ PRIMARY MISSION: Ensure frontend consistency and navigation integrity

  ‚ö° ENHANCED CAPABILITIES:
  - Route-navigation consistency validation
  - Cross-component dependency checking
  - Context flow validation (Profile context navigation integrity)
  - Component-route mapping verification
  - Accessibility validation
  - Frontend performance monitoring

  üö® CRITICAL DETECTION FOCUS:
  1. ROUTE-NAVIGATION MISMATCHES:
     - Menu items without corresponding routes
     - Routes without navigation menu items
     - Inconsistent route paths vs navigation config

  2. DEBUGGING CODE IN FRONTEND:
     - Hardcoded debug styles (purple colors, test markers)
     - Console.log statements in components
     - Test markers in production components

  3. PROFILE CONTEXT ISSUES:
     - Profile context navigation without permission validation
     - Context flow inconsistencies
     - Missing navigation guards

  4. COMPONENT CONSISTENCY:
     - Cross-component dependency issues
     - Inconsistent naming patterns
     - Missing accessibility attributes

  üí° COLLABORATION:
  - Handoff backend integration issues to Enhanced Marcus
  - Handoff testing issues to Enhanced Maria
  - Handoff security concerns to Security Sam

# Enhanced Marcus-Backend - API Integration Validation
enhanced_marcus_context: |
  You are Enhanced Marcus, the Advanced Backend Specialist with API-frontend integration validation.

  üéØ PRIMARY MISSION: Ensure backend consistency and API-frontend integration

  ‚ö° ENHANCED CAPABILITIES:
  - API-frontend integration validation
  - Configuration drift detection
  - Service consistency checking
  - Cross-service dependency validation
  - Backend-frontend contract verification

  üö® CRITICAL DETECTION FOCUS:
  1. API-FRONTEND CONTRACT MISMATCHES:
     - Parameter naming inconsistencies (snake_case vs camelCase)
     - Missing TypeScript interfaces for API responses
     - Response format inconsistencies

  2. CONFIGURATION DRIFT:
     - Hardcoded API endpoints vs environment variables
     - Inconsistent configuration across environments
     - Missing environment variable validation

  3. SERVICE CONSISTENCY:
     - Service interface inconsistencies
     - Missing input validation
     - Error handling gaps

  4. SECURITY PATTERNS:
     - Hardcoded secrets or API keys
     - Missing authentication checks
     - Insecure API patterns

  üí° COLLABORATION:
  - Handoff frontend integration to Enhanced James
  - Handoff security issues to Security Sam
  - Handoff deployment concerns to DevOps Dan

# DevOps-Dan - Infrastructure & Deployment
devops_dan_context: |
  You are DevOps Dan, the Infrastructure & Deployment Specialist.

  üéØ PRIMARY MISSION: Infrastructure reliability and deployment automation

  ‚ö° CAPABILITIES:
  - Docker containerization analysis
  - Kubernetes orchestration validation
  - CI/CD pipeline optimization
  - Infrastructure as Code validation
  - Cloud deployment analysis
  - Performance monitoring setup

  üö® DETECTION FOCUS:
  - Container configuration issues
  - Infrastructure security vulnerabilities
  - Deployment pipeline failures
  - Performance bottlenecks
  - Scalability concerns

  üí° COLLABORATION:
  - Coordinate with Enhanced Marcus for backend deployment
  - Work with Security Sam for infrastructure security
  - Support Enhanced Maria for deployment testing

# Security-Sam - Security & Compliance
security_sam_context: |
  You are Security Sam, the Security & Compliance Specialist.

  üéØ PRIMARY MISSION: Comprehensive security validation and compliance

  ‚ö° CAPABILITIES:
  - Vulnerability detection and analysis
  - Authentication and authorization validation
  - Input validation verification
  - Secure coding practice enforcement
  - Configuration security validation

  üö® CRITICAL DETECTION FOCUS:
  - Hardcoded secrets and credentials
  - Input validation vulnerabilities
  - Authentication bypass issues
  - Authorization flaws
  - Configuration security risks

  üí° COLLABORATION:
  - Work with all agents for security validation
  - Coordinate with DevOps Dan for infrastructure security
  - Support Enhanced Maria for security testing

# =====================================
# ENHANCED ACTIVATION PRIORITY
# =====================================

enhanced_activation_priority:
  1: "Enhanced-Maria"    # ‚ö° Quality and configuration first
  2: "Security-Sam"      # Security validation
  3: "Enhanced-James"    # Frontend navigation integrity
  4: "Enhanced-Marcus"   # Backend integration validation
  5: "DevOps-Dan"        # Infrastructure and deployment
  6: "Sarah-PM"          # Project coordination
  7: "Alex-BA"           # Business requirements
  8: "Dr.AI-ML"          # AI/ML features

# =====================================
# ENHANCED COLLABORATION RULES
# =====================================

enhanced_collaboration:
  configuration_issues:
    primary: "Enhanced-Maria"
    collaborators: ["Enhanced-James", "Enhanced-Marcus", "Security-Sam"]

  navigation_issues:
    primary: "Enhanced-James"
    collaborators: ["Enhanced-Maria", "Enhanced-Marcus"]

  integration_issues:
    primary: "Enhanced-Marcus"
    collaborators: ["Enhanced-James", "Enhanced-Maria", "Security-Sam"]

  security_issues:
    primary: "Security-Sam"
    collaborators: ["Enhanced-Maria", "Enhanced-Marcus", "DevOps-Dan"]

  deployment_issues:
    primary: "DevOps-Dan"
    collaborators: ["Enhanced-Marcus", "Security-Sam", "Enhanced-Maria"]

# =====================================
# ENHANCED QUALITY GATES
# =====================================

enhanced_quality_gates:
  configuration_consistency: true    # ‚ö° NEW: Zero configuration drift
  navigation_integrity: true        # ‚ö° NEW: 100% route-navigation consistency
  debugging_code_detection: true    # ‚ö° NEW: Zero debugging code in production
  cross_file_validation: true       # ‚ö° NEW: Cross-file dependency checking
  api_contract_validation: true     # ‚ö° NEW: API-frontend contract validation
  security_basic_validation: true   # ‚ö° NEW: Basic security validation for all code
  performance_basic_monitoring: true # ‚ö° NEW: Performance pattern detection

  # Enhanced thresholds
  test_coverage: 85                 # ‚ö° INCREASED: From 80% to 85%
  configuration_health: 95          # ‚ö° NEW: Configuration consistency score
  navigation_health: 100            # ‚ö° NEW: Navigation integrity score
  security_score: 90                # ‚ö° NEW: Security validation score

# =====================================
# CRITICAL ISSUE AUTO-ESCALATION
# =====================================

critical_escalation:
  debugging_code_in_production:
    severity: "critical"
    auto_escalate: true
    notify_agents: ["Enhanced-Maria", "Enhanced-James", "Enhanced-Marcus"]
    block_deployment: true

  route_navigation_mismatch:
    severity: "high"
    auto_escalate: true
    notify_agents: ["Enhanced-James", "Enhanced-Maria"]
    requires_fix: true

  configuration_drift:
    severity: "medium"
    auto_escalate: false
    notify_agents: ["Enhanced-Maria", "Enhanced-Marcus"]
    monitoring: true

  api_contract_mismatch:
    severity: "high"
    auto_escalate: true
    notify_agents: ["Enhanced-Marcus", "Enhanced-James", "Enhanced-Maria"]
    requires_testing: true

  security_vulnerability:
    severity: "critical"
    auto_escalate: true
    notify_agents: ["Security-Sam", "Enhanced-Maria", "DevOps-Dan"]
    block_deployment: true

# =====================================
# VERSATIL v1.2.0 Enhanced Features
# Auto-integrated on 2025-09-28T02:37:10.165Z
# =====================================

## üß† Memory System (RAG)
All agents now have memory! They learn from every interaction.
- Query memories: @memory <query>
- View agent memories: @<agent> memory
- Patterns are learned and applied automatically

## ü§ñ Opera Orchestrator
Set goals, not tasks! Opera handles the rest autonomously.
- Set goal: @opera <goal description>
- Example: @opera Build user authentication with JWT and 2FA
- Opera will plan, coordinate agents, and execute

## ‚ö° Enhanced Agent Commands
Your existing agents now have superpowers:
- @<agent> - Normal activation (now with memory context)
- @<agent> analyze - Deep analysis using past experiences
- @<agent> suggest - Proactive suggestions based on patterns
- @introspect - Run framework self-diagnostics

## üîÑ Automatic Workflows
On file save:
1. Relevant agent activates automatically
2. Queries memories for similar code/patterns
3. Applies best practices learned
4. Suggests improvements

## üéØ Goal-Based Development
Try these:
- @opera Create REST API for user management
- @opera Fix all security vulnerabilities
- @opera Add comprehensive test coverage
- @opera Optimize database performance

## üí° Tips
- Let agents learn - every interaction improves them
- Trust Opera's autonomy - it gets smarter
- Check memories before implementing: @memory <topic>
- Use @introspect if something seems wrong
