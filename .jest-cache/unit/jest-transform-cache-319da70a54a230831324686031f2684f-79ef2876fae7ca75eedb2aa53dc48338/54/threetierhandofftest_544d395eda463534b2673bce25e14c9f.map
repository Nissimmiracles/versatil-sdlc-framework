{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/tests/unit/contracts/three-tier-handoff.test.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/tests/unit/contracts/three-tier-handoff.test.ts"],"sourcesContent":["/**\n * Unit Tests: Three-Tier Handoff Helper\n *\n * Coverage Target: 85%+\n *\n * Test Coverage:\n * - ThreeTierHandoffBuilder construction and configuration\n * - API endpoint, database table, UI component addition\n * - Contract building and validation\n * - Work item generation for Dana, Marcus, James\n * - Integration checkpoints creation\n * - RLS policy generation\n * - Effort estimation\n * - Error handling\n */\n\nimport { describe, it, expect, beforeEach } from '@jest/globals';\nimport {\n  ThreeTierHandoffBuilder,\n  createThreeTierHandoff,\n  FeatureRequirements,\n  APIEndpoint,\n  DatabaseTable,\n  UIComponent\n} from '../../../src/agents/contracts/three-tier-handoff.js';\nimport {\n  ThreeTierHandoffContract,\n  MemorySnapshot\n} from '../../../src/agents/contracts/agent-handoff-contract.js';\n\ndescribe('ThreeTierHandoffBuilder', () => {\n  let requirements: FeatureRequirements;\n  let builder: ThreeTierHandoffBuilder;\n\n  beforeEach(() => {\n    requirements = {\n      name: 'User Authentication',\n      description: 'Implement secure user login and session management',\n      userStories: [\n        'As a user, I want to login with email and password',\n        'As a user, I want to stay logged in across sessions'\n      ],\n      goals: ['Secure authentication', 'Good UX'],\n      constraints: ['Must use JWT', 'Must be WCAG 2.1 AA compliant']\n    };\n\n    builder = new ThreeTierHandoffBuilder(requirements);\n  });\n\n  describe('Builder Construction', () => {\n    it('should create builder with requirements', () => {\n      expect(builder).toBeDefined();\n      expect(builder).toBeInstanceOf(ThreeTierHandoffBuilder);\n    });\n\n    it('should initialize with empty endpoints, tables, components', async () => {\n      const contract = await builder.build();\n\n      // Should have default structure even with no additions\n      expect(contract.apiContract).toBeDefined();\n      expect(contract.databaseSchema).toBeDefined();\n      expect(contract.uiRequirements).toBeDefined();\n    });\n  });\n\n  describe('Adding API Endpoints', () => {\n    it('should add API endpoint', async () => {\n      const endpoint: APIEndpoint = {\n        method: 'POST',\n        path: '/api/auth/login',\n        description: 'User login endpoint'\n      };\n\n      builder.addEndpoint(endpoint);\n      const contract = await builder.build();\n\n      expect(contract.apiContract.endpoints).toHaveLength(1);\n      expect(contract.apiContract.endpoints[0].method).toBe('POST');\n      expect(contract.apiContract.endpoints[0].path).toBe('/api/auth/login');\n    });\n\n    it('should add multiple endpoints', async () => {\n      builder\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        })\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/logout',\n          description: 'Logout'\n        })\n        .addEndpoint({\n          method: 'GET',\n          path: '/api/auth/me',\n          description: 'Get current user'\n        });\n\n      const contract = await builder.build();\n\n      expect(contract.apiContract.endpoints).toHaveLength(3);\n    });\n\n    it('should support endpoint with request/response schemas', async () => {\n      builder.addEndpoint({\n        method: 'POST',\n        path: '/api/auth/login',\n        description: 'Login',\n        requestSchema: {\n          email: 'string',\n          password: 'string'\n        },\n        responseSchema: {\n          token: 'string',\n          user: 'object'\n        },\n        authentication: false\n      });\n\n      const contract = await builder.build();\n\n      const endpoint = contract.apiContract.endpoints[0];\n      expect(endpoint.requestSchema).toEqual({\n        email: 'string',\n        password: 'string'\n      });\n      expect(endpoint.responseSchema).toEqual({\n        token: 'string',\n        user: 'object'\n      });\n      expect(endpoint.authentication).toBe(false);\n    });\n\n    it('should create work item for Marcus when endpoints added', async () => {\n      builder.addEndpoint({\n        method: 'POST',\n        path: '/api/auth/login',\n        description: 'Login'\n      });\n\n      const contract = await builder.build();\n\n      const marcusWork = contract.workItems.find(w =>\n        w.description.includes('API endpoints')\n      );\n\n      expect(marcusWork).toBeDefined();\n      expect(marcusWork?.estimatedEffort).toBe(2); // 2 hours per endpoint\n      expect(marcusWork?.acceptanceCriteria).toContain('All endpoints implemented');\n      expect(marcusWork?.acceptanceCriteria).toContain('OWASP security compliance');\n    });\n  });\n\n  describe('Adding Database Tables', () => {\n    it('should add database table', async () => {\n      const table: DatabaseTable = {\n        name: 'users',\n        columns: [\n          { name: 'id', type: 'uuid', nullable: false },\n          { name: 'email', type: 'text', nullable: false, unique: true }\n        ]\n      };\n\n      builder.addTable(table);\n      const contract = await builder.build();\n\n      expect(contract.databaseSchema.tables).toHaveLength(1);\n      expect(contract.databaseSchema.tables[0].name).toBe('users');\n      expect(contract.databaseSchema.tables[0].columns).toHaveLength(2);\n    });\n\n    it('should add multiple tables', async () => {\n      builder\n        .addTable({\n          name: 'users',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        })\n        .addTable({\n          name: 'sessions',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        });\n\n      const contract = await builder.build();\n\n      expect(contract.databaseSchema.tables).toHaveLength(2);\n    });\n\n    it('should support table with indexes', async () => {\n      builder.addTable({\n        name: 'users',\n        columns: [\n          { name: 'id', type: 'uuid', nullable: false },\n          { name: 'email', type: 'text', nullable: false }\n        ],\n        indexes: [\n          { columns: ['email'], unique: true }\n        ]\n      });\n\n      const contract = await builder.build();\n\n      const table = contract.databaseSchema.tables[0];\n      expect(table.indexes).toHaveLength(1);\n      expect(table.indexes![0].unique).toBe(true);\n    });\n\n    it('should support table with foreign keys', async () => {\n      builder.addTable({\n        name: 'sessions',\n        columns: [\n          { name: 'id', type: 'uuid', nullable: false },\n          { name: 'user_id', type: 'uuid', nullable: false }\n        ],\n        foreignKeys: [\n          {\n            column: 'user_id',\n            references: 'users.id',\n            onDelete: 'CASCADE'\n          }\n        ]\n      });\n\n      const contract = await builder.build();\n\n      const table = contract.databaseSchema.tables[0];\n      expect(table.foreignKeys).toHaveLength(1);\n      expect(table.foreignKeys![0].onDelete).toBe('CASCADE');\n    });\n\n    it('should create work item for Dana when tables added', async () => {\n      builder.addTable({\n        name: 'users',\n        columns: [{ name: 'id', type: 'uuid', nullable: false }]\n      });\n\n      const contract = await builder.build();\n\n      const danaWork = contract.workItems.find(w =>\n        w.description.includes('database schema')\n      );\n\n      expect(danaWork).toBeDefined();\n      expect(danaWork?.estimatedEffort).toBe(1.5); // 1.5 hours per table\n      expect(danaWork?.acceptanceCriteria).toContain('All tables created with correct schema');\n      expect(danaWork?.acceptanceCriteria).toContain('RLS policies implemented');\n    });\n\n    it('should generate RLS policies for tables', async () => {\n      builder.addTable({\n        name: 'users',\n        columns: [{ name: 'id', type: 'uuid', nullable: false }]\n      });\n\n      const contract = await builder.build();\n\n      expect(contract.databaseSchema.rlsPolicies).toBeDefined();\n      expect(contract.databaseSchema.rlsPolicies!.length).toBeGreaterThan(0);\n\n      // Should have policies for SELECT, INSERT, UPDATE, DELETE\n      const operations = contract.databaseSchema.rlsPolicies!.map(p => p.operation);\n      expect(operations).toContain('SELECT');\n      expect(operations).toContain('INSERT');\n      expect(operations).toContain('UPDATE');\n      expect(operations).toContain('DELETE');\n    });\n\n    it('should generate authentication check in RLS policies', async () => {\n      builder.addTable({\n        name: 'users',\n        columns: [{ name: 'id', type: 'uuid', nullable: false }]\n      });\n\n      const contract = await builder.build();\n\n      const selectPolicy = contract.databaseSchema.rlsPolicies!.find(\n        p => p.table === 'users' && p.operation === 'SELECT'\n      );\n\n      expect(selectPolicy?.using).toBe('auth.uid() IS NOT NULL');\n    });\n  });\n\n  describe('Adding UI Components', () => {\n    it('should add UI component', async () => {\n      const component: UIComponent = {\n        name: 'LoginForm',\n        type: 'component',\n        description: 'User login form with email and password'\n      };\n\n      builder.addComponent(component);\n      const contract = await builder.build();\n\n      expect(contract.uiRequirements.components).toHaveLength(1);\n      expect(contract.uiRequirements.components[0].name).toBe('LoginForm');\n    });\n\n    it('should add multiple components', async () => {\n      builder\n        .addComponent({\n          name: 'LoginForm',\n          type: 'component',\n          description: 'Login form'\n        })\n        .addComponent({\n          name: 'useAuth',\n          type: 'hook',\n          description: 'Authentication hook'\n        })\n        .addComponent({\n          name: 'LoginPage',\n          type: 'page',\n          description: 'Login page'\n        });\n\n      const contract = await builder.build();\n\n      expect(contract.uiRequirements.components).toHaveLength(3);\n    });\n\n    it('should support component with props', async () => {\n      builder.addComponent({\n        name: 'LoginForm',\n        type: 'component',\n        description: 'Login form',\n        props: {\n          onSubmit: 'function',\n          loading: 'boolean'\n        }\n      });\n\n      const contract = await builder.build();\n\n      const component = contract.uiRequirements.components[0];\n      expect(component.props).toEqual({\n        onSubmit: 'function',\n        loading: 'boolean'\n      });\n    });\n\n    it('should create work item for James when components added', async () => {\n      builder.addComponent({\n        name: 'LoginForm',\n        type: 'component',\n        description: 'Login form'\n      });\n\n      const contract = await builder.build();\n\n      const jamesWork = contract.workItems.find(w =>\n        w.description.includes('UI components')\n      );\n\n      expect(jamesWork).toBeDefined();\n      expect(jamesWork?.estimatedEffort).toBe(1.5); // 1.5 hours per component\n      expect(jamesWork?.acceptanceCriteria).toContain('All components implemented');\n      expect(jamesWork?.acceptanceCriteria).toContain('WCAG 2.1 AA accessibility');\n    });\n\n    it('should set accessibility requirement to AA', async () => {\n      const contract = await builder.build();\n\n      expect(contract.uiRequirements.accessibility).toBe('AA');\n    });\n\n    it('should set responsive breakpoints', async () => {\n      const contract = await builder.build();\n\n      expect(contract.uiRequirements.responsive).toEqual([\n        'mobile',\n        'tablet',\n        'desktop'\n      ]);\n    });\n  });\n\n  describe('Memory Snapshot', () => {\n    it('should create minimal snapshot by default', async () => {\n      const contract = await builder.build();\n\n      expect(contract.memorySnapshot).toBeDefined();\n      expect(contract.memorySnapshot.agentId).toBe('alex-ba');\n      expect(contract.memorySnapshot.contextSummary).toContain('User Authentication');\n    });\n\n    it('should use provided memory snapshot', async () => {\n      const customSnapshot: MemorySnapshot = {\n        agentId: 'alex-ba',\n        timestamp: new Date(),\n        memoryFiles: {\n          'requirements/auth.md': 'Authentication requirements'\n        },\n        criticalPatterns: [\n          {\n            category: 'security',\n            title: 'JWT pattern',\n            content: 'Use httpOnly cookies'\n          }\n        ],\n        contextSummary: 'Custom summary',\n        estimatedTokens: 3000\n      };\n\n      builder.setMemorySnapshot(customSnapshot);\n      const contract = await builder.build();\n\n      expect(contract.memorySnapshot.estimatedTokens).toBe(3000);\n      expect(contract.memorySnapshot.contextSummary).toBe('Custom summary');\n      expect(contract.memorySnapshot.memoryFiles['requirements/auth.md']).toBe(\n        'Authentication requirements'\n      );\n    });\n  });\n\n  describe('Work Item Dependencies', () => {\n    it('should make Marcus depend on Dana when both have work', async () => {\n      builder\n        .addTable({\n          name: 'users',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        })\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        });\n\n      const contract = await builder.build();\n\n      const marcusWork = contract.workItems.find(w =>\n        w.description.includes('API endpoints')\n      );\n\n      expect(marcusWork?.dependencies).toBeDefined();\n      expect(marcusWork?.dependencies!.length).toBeGreaterThan(0);\n    });\n\n    it('should make James depend on Marcus when both have work', async () => {\n      builder\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        })\n        .addComponent({\n          name: 'LoginForm',\n          type: 'component',\n          description: 'Login form'\n        });\n\n      const contract = await builder.build();\n\n      const jamesWork = contract.workItems.find(w =>\n        w.description.includes('UI components')\n      );\n\n      expect(jamesWork?.dependencies).toBeDefined();\n      expect(jamesWork?.dependencies!.length).toBeGreaterThan(0);\n    });\n  });\n\n  describe('Integration Checkpoints', () => {\n    it('should create integration checkpoints', async () => {\n      builder\n        .addTable({\n          name: 'users',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        })\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        })\n        .addComponent({\n          name: 'LoginForm',\n          type: 'component',\n          description: 'Login form'\n        });\n\n      const contract = await builder.build();\n\n      expect(contract.integrationCheckpoints).toHaveLength(3);\n    });\n\n    it('should create Database → API checkpoint', async () => {\n      builder\n        .addTable({\n          name: 'users',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        })\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        });\n\n      const contract = await builder.build();\n\n      const checkpoint = contract.integrationCheckpoints.find(c =>\n        c.name === 'Database → API Integration'\n      );\n\n      expect(checkpoint).toBeDefined();\n      expect(checkpoint?.participants).toContain('dana-database');\n      expect(checkpoint?.participants).toContain('marcus-backend');\n    });\n\n    it('should create API → Frontend checkpoint', async () => {\n      builder\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        })\n        .addComponent({\n          name: 'LoginForm',\n          type: 'component',\n          description: 'Login form'\n        });\n\n      const contract = await builder.build();\n\n      const checkpoint = contract.integrationCheckpoints.find(c =>\n        c.name === 'API → Frontend Integration'\n      );\n\n      expect(checkpoint).toBeDefined();\n      expect(checkpoint?.participants).toContain('marcus-backend');\n      expect(checkpoint?.participants).toContain('james-frontend');\n    });\n\n    it('should create End-to-End checkpoint', async () => {\n      const contract = await builder.build();\n\n      const checkpoint = contract.integrationCheckpoints.find(c =>\n        c.name === 'End-to-End Validation'\n      );\n\n      expect(checkpoint).toBeDefined();\n      expect(checkpoint?.participants).toContain('dana-database');\n      expect(checkpoint?.participants).toContain('marcus-backend');\n      expect(checkpoint?.participants).toContain('james-frontend');\n    });\n  });\n\n  describe('Contract Building', () => {\n    it('should build complete three-tier contract', async () => {\n      builder\n        .addTable({\n          name: 'users',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        })\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        })\n        .addComponent({\n          name: 'LoginForm',\n          type: 'component',\n          description: 'Login form'\n        });\n\n      const contract = await builder.build();\n\n      expect(contract.type).toBe('parallel');\n      expect(contract.receivers).toHaveLength(3);\n      expect(contract.workItems.length).toBeGreaterThan(0);\n      expect(contract.apiContract).toBeDefined();\n      expect(contract.databaseSchema).toBeDefined();\n      expect(contract.uiRequirements).toBeDefined();\n      expect(contract.integrationCheckpoints).toBeDefined();\n    });\n\n    it('should set correct receivers for three-tier', async () => {\n      const contract = await builder.build();\n\n      const receiverIds = contract.receivers.map(r => r.agentId);\n      expect(receiverIds).toContain('dana-database');\n      expect(receiverIds).toContain('marcus-backend');\n      expect(receiverIds).toContain('james-frontend');\n    });\n\n    it('should set receiver roles', async () => {\n      const contract = await builder.build();\n\n      const danaReceiver = contract.receivers.find(r => r.agentId === 'dana-database');\n      const marcusReceiver = contract.receivers.find(r => r.agentId === 'marcus-backend');\n      const jamesReceiver = contract.receivers.find(r => r.agentId === 'james-frontend');\n\n      expect(danaReceiver?.role).toBe('database');\n      expect(marcusReceiver?.role).toBe('api');\n      expect(jamesReceiver?.role).toBe('frontend');\n    });\n\n    it('should set contract expiration to 24 hours', async () => {\n      const contract = await builder.build();\n\n      expect(contract.expiresAt).toBeDefined();\n\n      const now = new Date();\n      const expiresAt = new Date(contract.expiresAt!);\n      const diffHours = (expiresAt.getTime() - now.getTime()) / (1000 * 60 * 60);\n\n      expect(diffHours).toBeCloseTo(24, 0);\n    });\n\n    it('should include feature context', async () => {\n      const contract = await builder.build();\n\n      expect(contract.context.feature?.name).toBe('User Authentication');\n      expect(contract.context.feature?.description).toBe(\n        'Implement secure user login and session management'\n      );\n      expect(contract.context.feature?.userStories).toHaveLength(2);\n    });\n\n    it('should include business context', async () => {\n      const contract = await builder.build();\n\n      expect(contract.context.business?.goals).toEqual(['Secure authentication', 'Good UX']);\n      expect(contract.context.business?.constraints).toEqual([\n        'Must use JWT',\n        'Must be WCAG 2.1 AA compliant'\n      ]);\n    });\n\n    it('should include technical context', async () => {\n      builder.addEndpoint({\n        method: 'POST',\n        path: '/api/auth/login',\n        description: 'Login'\n      });\n\n      const contract = await builder.build();\n\n      expect(contract.context.technical?.apiContract).toBeDefined();\n      expect(contract.context.technical?.databaseSchema).toBeDefined();\n    });\n  });\n\n  describe('Build and Validate', () => {\n    it('should build and validate contract', async () => {\n      builder\n        .addTable({\n          name: 'users',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        })\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        })\n        .addComponent({\n          name: 'LoginForm',\n          type: 'component',\n          description: 'Login form'\n        });\n\n      const result = await builder.buildAndValidate();\n\n      expect(result.contract).toBeDefined();\n      expect(result.validation).toBeDefined();\n      expect(result.validation.valid).toBe(true);\n    });\n\n    it('should throw error if validation fails', async () => {\n      // Don't add any components (will fail three-tier validation)\n      await expect(builder.buildAndValidate()).rejects.toThrow('Contract validation failed');\n    });\n  });\n\n  describe('Quick Helper Function', () => {\n    it('should create three-tier handoff using helper', async () => {\n      const contract = await createThreeTierHandoff(requirements, {\n        endpoints: [\n          {\n            method: 'POST',\n            path: '/api/auth/login',\n            description: 'Login'\n          }\n        ],\n        tables: [\n          {\n            name: 'users',\n            columns: [{ name: 'id', type: 'uuid', nullable: false }]\n          }\n        ],\n        components: [\n          {\n            name: 'LoginForm',\n            type: 'component',\n            description: 'Login form'\n          }\n        ]\n      });\n\n      expect(contract).toBeDefined();\n      expect(contract.type).toBe('parallel');\n      expect(contract.apiContract.endpoints).toHaveLength(1);\n      expect(contract.databaseSchema.tables).toHaveLength(1);\n      expect(contract.uiRequirements.components).toHaveLength(1);\n    });\n\n    it('should use provided memory snapshot in helper', async () => {\n      const customSnapshot: MemorySnapshot = {\n        agentId: 'alex-ba',\n        timestamp: new Date(),\n        memoryFiles: {},\n        criticalPatterns: [],\n        contextSummary: 'Custom',\n        estimatedTokens: 2000\n      };\n\n      const contract = await createThreeTierHandoff(requirements, {\n        endpoints: [\n          {\n            method: 'POST',\n            path: '/api/auth/login',\n            description: 'Login'\n          }\n        ],\n        tables: [\n          {\n            name: 'users',\n            columns: [{ name: 'id', type: 'uuid', nullable: false }]\n          }\n        ],\n        components: [\n          {\n            name: 'LoginForm',\n            type: 'component',\n            description: 'Login form'\n          }\n        ],\n        memorySnapshot: customSnapshot\n      });\n\n      expect(contract.memorySnapshot.estimatedTokens).toBe(2000);\n    });\n\n    it('should throw on validation failure in helper', async () => {\n      await expect(\n        createThreeTierHandoff(requirements, {\n          endpoints: [],\n          tables: [],\n          components: []\n        })\n      ).rejects.toThrow('Contract validation failed');\n    });\n  });\n\n  describe('Effort Estimation', () => {\n    it('should calculate total expected duration', async () => {\n      builder\n        .addTable({\n          name: 'users',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        })\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        })\n        .addComponent({\n          name: 'LoginForm',\n          type: 'component',\n          description: 'Login form'\n        });\n\n      const contract = await builder.build();\n\n      const totalEffort = contract.workItems.reduce(\n        (sum, item) => sum + (item.estimatedEffort || 0),\n        0\n      );\n\n      expect(contract.expectedOutput.expectedDuration).toBe(totalEffort);\n      expect(totalEffort).toBe(5); // 1.5 (Dana) + 2 (Marcus) + 1.5 (James)\n    });\n\n    it('should scale effort with number of endpoints', async () => {\n      builder\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'Login'\n        })\n        .addEndpoint({\n          method: 'POST',\n          path: '/api/auth/logout',\n          description: 'Logout'\n        });\n\n      const contract = await builder.build();\n\n      const marcusWork = contract.workItems.find(w =>\n        w.description.includes('API endpoints')\n      );\n\n      expect(marcusWork?.estimatedEffort).toBe(4); // 2 endpoints * 2 hours\n    });\n\n    it('should scale effort with number of tables', async () => {\n      builder\n        .addTable({\n          name: 'users',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        })\n        .addTable({\n          name: 'sessions',\n          columns: [{ name: 'id', type: 'uuid', nullable: false }]\n        });\n\n      const contract = await builder.build();\n\n      const danaWork = contract.workItems.find(w =>\n        w.description.includes('database schema')\n      );\n\n      expect(danaWork?.estimatedEffort).toBe(3); // 2 tables * 1.5 hours\n    });\n\n    it('should scale effort with number of components', async () => {\n      builder\n        .addComponent({\n          name: 'LoginForm',\n          type: 'component',\n          description: 'Login form'\n        })\n        .addComponent({\n          name: 'useAuth',\n          type: 'hook',\n          description: 'Auth hook'\n        });\n\n      const contract = await builder.build();\n\n      const jamesWork = contract.workItems.find(w =>\n        w.description.includes('UI components')\n      );\n\n      expect(jamesWork?.estimatedEffort).toBe(3); // 2 components * 1.5 hours\n    });\n  });\n});\n"],"version":3}