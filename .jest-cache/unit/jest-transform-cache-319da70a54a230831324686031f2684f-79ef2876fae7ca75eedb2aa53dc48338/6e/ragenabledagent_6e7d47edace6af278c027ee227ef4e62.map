{"version":3,"names":["cov_4j89b4zsv","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","base_agent_1","require","RAGEnabledAgent","BaseAgent","constructor","vectorStore","ragConfig","getDefaultRAGConfig","activate","context","patternAnalysis","runPatternAnalysis","ragContext","retrieveRelevantContext","enhancedResponse","generateRAGEnhancedResponse","enableLearning","storeNewPatterns","analysis","getEmptyRAGContext","retrievals","similarCode","previousSolutions","projectStandards","agentExpertise","retrieveSimilarCodePatterns","retrievePreviousSolutions","retrieveProjectStandards","retrieveAgentExpertise","error","console","warn","id","message","query","createSemanticQuery","content","filePath","queryType","agentId","topK","maxExamples","filters","tags","agentDomain","detectLanguage","contentTypes","result","queryMemories","documents","solutions","issue","patterns","suggestions","map","p","description","location","priority","severity","action","suggestion","enhanceSuggestionsWithRAG","handoffTo","generateDomainHandoffs","generateEnhancedMessage","calculatePriorityWithRAG","analysisScore","score","totalIssues","length","criticalIssues","filter","ragEnhanced","ragInsights","summarizeRAGInsights","generatedPrompt","generateRAGEnhancedPrompt","recommendations","summary","prompt","getBasePromptTemplate","forEach","pattern","index","metadata","join","Math","round","relevanceScore","slice","solutionEntries","Object","entries","_","issueType","solution","standard","JSON","stringify","response","language","patternDoc","Date","now","random","toString","substr","contentType","timestamp","fileType","split","pop","projectContext","framework","detectFramework","storeMemory","solutionDoc","lines","keywords","functionMatches","match","push","pathParts","part","includes","uniqueKeywords","Set","k","ext","toLowerCase","langMap","keys","similarPatterns","solutionTypes","expertise","hasCritical","some","hasHigh","basePriority","exports"],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/rag-enabled-agent.ts"],"sourcesContent":["/**\n * VERSATIL SDLC Framework - RAG-Enabled Agent Base Class\n *\n * Extends BaseAgent with direct RAG capabilities, allowing each agent to:\n * - Retrieve domain-specific context from vector memory\n * - Store successful patterns for future learning\n * - Generate context-aware prompts with historical knowledge\n */\n\nimport { BaseAgent, AgentResponse, AgentActivationContext } from './base-agent';\nimport { EnhancedVectorMemoryStore, MemoryDocument, RAGQuery } from '../rag/enhanced-vector-memory-store';\nimport { AnalysisResult } from '../intelligence/pattern-analyzer';\n\nexport interface RAGConfig {\n  maxExamples: number;\n  similarityThreshold: number;\n  agentDomain: string;\n  enableLearning: boolean;\n}\n\nexport interface AgentRAGContext {\n  similarCode: MemoryDocument[];\n  previousSolutions: { [issueType: string]: MemoryDocument[] };\n  projectStandards: MemoryDocument[];\n  agentExpertise: MemoryDocument[];\n  metadata?: {\n    [key: string]: any;\n  };\n}\n\nexport abstract class RAGEnabledAgent extends BaseAgent {\n  protected vectorStore?: EnhancedVectorMemoryStore;\n  protected ragConfig: RAGConfig;\n\n  constructor(vectorStore?: EnhancedVectorMemoryStore) {\n    super();\n    this.vectorStore = vectorStore;\n    this.ragConfig = this.getDefaultRAGConfig();\n  }\n\n  /**\n   * Override this in each agent to define domain-specific RAG configuration\n   */\n  protected abstract getDefaultRAGConfig(): RAGConfig;\n\n  /**\n   * Main analysis method with RAG enhancement\n   */\n  async activate(context: AgentActivationContext): Promise<AgentResponse> {\n    // Level 1: Standard pattern analysis\n    const patternAnalysis = await this.runPatternAnalysis(context);\n\n    // Level 2: RAG enhancement (if vector store available)\n    let ragContext: AgentRAGContext | undefined;\n    if (this.vectorStore) {\n      ragContext = await this.retrieveRelevantContext(context, patternAnalysis);\n    }\n\n    // Level 3: Generate enhanced response\n    const enhancedResponse = await this.generateRAGEnhancedResponse(\n      context,\n      patternAnalysis,\n      ragContext\n    );\n\n    // Level 4: Store successful patterns for learning\n    if (this.vectorStore && this.ragConfig.enableLearning) {\n      await this.storeNewPatterns(context, patternAnalysis, enhancedResponse);\n    }\n\n    return enhancedResponse;\n  }\n\n  /**\n   * Run domain-specific pattern analysis - to be implemented by each agent\n   */\n  protected abstract runPatternAnalysis(context: AgentActivationContext): Promise<AnalysisResult>;\n\n  /**\n   * Retrieve relevant context from vector memory\n   */\n  protected async retrieveRelevantContext(\n    context: AgentActivationContext,\n    analysis: AnalysisResult\n  ): Promise<AgentRAGContext> {\n    if (!this.vectorStore) {\n      return this.getEmptyRAGContext();\n    }\n\n    const retrievals: AgentRAGContext = {\n      similarCode: [],\n      previousSolutions: {},\n      projectStandards: [],\n      agentExpertise: []\n    };\n\n    try {\n      // 1. Find similar code patterns for this agent's domain\n      retrievals.similarCode = await this.retrieveSimilarCodePatterns(context);\n\n      // 2. Find previous solutions for similar issues\n      retrievals.previousSolutions = await this.retrievePreviousSolutions(analysis);\n\n      // 3. Get project-specific standards for this domain\n      retrievals.projectStandards = await this.retrieveProjectStandards(context);\n\n      // 4. Get agent-specific expertise\n      retrievals.agentExpertise = await this.retrieveAgentExpertise(context);\n\n    } catch (error) {\n      console.warn(`RAG retrieval failed for ${this.id}:`, error.message);\n    }\n\n    return retrievals;\n  }\n\n  /**\n   * Retrieve similar code patterns based on content and domain\n   */\n  protected async retrieveSimilarCodePatterns(context: AgentActivationContext): Promise<MemoryDocument[]> {\n    if (!this.vectorStore) return [];\n\n    const query: RAGQuery = {\n      query: this.createSemanticQuery(context.content, context.filePath),\n      queryType: 'semantic',\n      agentId: this.id,\n      topK: this.ragConfig.maxExamples,\n      filters: {\n        tags: [this.ragConfig.agentDomain, 'pattern', this.detectLanguage(context.filePath)],\n        contentTypes: ['code']\n      }\n    };\n\n    const result = await this.vectorStore.queryMemories(query);\n    return result.documents || [];\n  }\n\n  /**\n   * Retrieve previous solutions for similar issues\n   */\n  protected async retrievePreviousSolutions(analysis: AnalysisResult): Promise<{ [issueType: string]: MemoryDocument[] }> {\n    if (!this.vectorStore) return {};\n\n    const solutions: { [issueType: string]: MemoryDocument[] } = {};\n\n    for (const issue of analysis.patterns) {\n      const query: RAGQuery = {\n        query: `${issue.type} ${issue.message}`,\n        queryType: 'semantic',\n        agentId: this.id,\n        topK: 2,\n        filters: {\n          tags: [issue.type, 'solution', this.ragConfig.agentDomain],\n          contentTypes: ['text', 'code']\n        }\n      };\n\n      try {\n        const result = await this.vectorStore.queryMemories(query);\n        solutions[issue.type] = result.documents || [];\n      } catch (error) {\n        console.warn(`Failed to retrieve solutions for ${issue.type}:`, error.message);\n        solutions[issue.type] = [];\n      }\n    }\n\n    return solutions;\n  }\n\n  /**\n   * Retrieve project standards specific to this agent's domain\n   */\n  protected async retrieveProjectStandards(context: AgentActivationContext): Promise<MemoryDocument[]> {\n    if (!this.vectorStore) return [];\n\n    const query: RAGQuery = {\n      query: `${context.filePath} ${this.ragConfig.agentDomain} standards conventions`,\n      queryType: 'semantic',\n      agentId: this.id,\n      topK: 3,\n      filters: {\n        tags: [this.ragConfig.agentDomain, 'standard', 'convention'],\n        contentTypes: ['text']\n      }\n    };\n\n    const result = await this.vectorStore.queryMemories(query);\n    return result.documents || [];\n  }\n\n  /**\n   * Retrieve agent-specific expertise and insights\n   */\n  protected async retrieveAgentExpertise(context: AgentActivationContext): Promise<MemoryDocument[]> {\n    if (!this.vectorStore) return [];\n\n    const query: RAGQuery = {\n      query: this.createSemanticQuery(context.content, context.filePath),\n      queryType: 'semantic',\n      agentId: this.id,\n      topK: 3,\n      filters: {\n        tags: [this.id, 'expertise', this.ragConfig.agentDomain],\n        contentTypes: ['text', 'code']\n      }\n    };\n\n    const result = await this.vectorStore.queryMemories(query);\n    return result.documents || [];\n  }\n\n  /**\n   * Generate enhanced response with RAG context\n   */\n  protected async generateRAGEnhancedResponse(\n    context: AgentActivationContext,\n    analysis: AnalysisResult,\n    ragContext?: AgentRAGContext\n  ): Promise<AgentResponse> {\n    // Convert analysis to suggestions\n    const suggestions = analysis.patterns.map(p => ({\n      type: p.type,\n      description: p.message,\n      location: `${context.filePath}:${p.line}`,\n      priority: p.severity,\n      action: p.suggestion\n    }));\n\n    // Enhance suggestions with RAG context\n    if (ragContext) {\n      this.enhanceSuggestionsWithRAG(suggestions, ragContext);\n    }\n\n    // Generate domain-specific handoffs\n    const handoffTo = this.generateDomainHandoffs(analysis);\n\n    // Create enhanced message with RAG insights\n    const message = this.generateEnhancedMessage(analysis, ragContext);\n\n    return {\n      agentId: this.id,\n      message,\n      suggestions,\n      priority: this.calculatePriorityWithRAG(analysis, ragContext),\n      handoffTo,\n      context: {\n        analysisScore: analysis.score,\n        totalIssues: analysis.patterns.length,\n        criticalIssues: analysis.patterns.filter(p => p.severity === 'critical').length,\n        ragEnhanced: !!ragContext,\n        ragInsights: ragContext ? this.summarizeRAGInsights(ragContext) : undefined,\n        generatedPrompt: this.generateRAGEnhancedPrompt(context, analysis, ragContext),\n        recommendations: analysis.recommendations,\n        summary: analysis.summary\n      }\n    };\n  }\n\n  /**\n   * Generate RAG-enhanced prompt with retrieved context\n   */\n  protected generateRAGEnhancedPrompt(\n    context: AgentActivationContext,\n    analysis: AnalysisResult,\n    ragContext?: AgentRAGContext\n  ): string {\n    let prompt = this.getBasePromptTemplate();\n\n    if (ragContext) {\n      prompt += '\\n## Retrieved Context\\n\\n';\n\n      // Similar Code Patterns\n      if (ragContext.similarCode.length > 0) {\n        prompt += '### Similar Code Patterns From This Project:\\n';\n        ragContext.similarCode.forEach((pattern, index) => {\n          const tags = pattern.metadata?.tags?.join(', ') || 'N/A';\n          const score = Math.round((pattern.metadata?.relevanceScore || 0) * 100);\n          prompt += `Example ${index + 1} (${score}% relevance, tags: ${tags}):\\n`;\n          prompt += '```\\n' + pattern.content.slice(0, 200) + '...\\n```\\n\\n';\n        });\n      }\n\n      // Previous Solutions\n      const solutionEntries = Object.entries(ragContext.previousSolutions).filter(([_, solutions]) => solutions.length > 0);\n      if (solutionEntries.length > 0) {\n        prompt += '### Previous Solutions for Similar Issues:\\n';\n        solutionEntries.forEach(([issueType, solutions]) => {\n          prompt += `For ${issueType}:\\n`;\n          solutions.forEach(solution => {\n            prompt += `- ${solution.content.slice(0, 150)}...\\n`;\n          });\n          prompt += '\\n';\n        });\n      }\n\n      // Project Standards\n      if (ragContext.projectStandards.length > 0) {\n        prompt += '### Project Standards:\\n';\n        ragContext.projectStandards.forEach(standard => {\n          prompt += `- ${standard.content.slice(0, 100)}...\\n`;\n        });\n        prompt += '\\n';\n      }\n    }\n\n    // Current context\n    prompt += '## Current Context\\n';\n    prompt += `File: ${context.filePath}\\n`;\n    prompt += `Issues Found: ${JSON.stringify(analysis.patterns.map(p => ({ type: p.type, severity: p.severity, message: p.message })), null, 2)}\\n\\n`;\n\n    // Code to analyze\n    prompt += `## Code to Analyze\\n`;\n    prompt += '```' + this.detectLanguage(context.filePath) + '\\n';\n    prompt += context.content + '\\n';\n    prompt += '```\\n\\n';\n\n    prompt += 'Using the retrieved context above as reference, provide your analysis and recommendations.\\n';\n\n    return prompt;\n  }\n\n  /**\n   * Store successful patterns for future learning\n   */\n  protected async storeNewPatterns(\n    context: AgentActivationContext,\n    analysis: AnalysisResult,\n    response: AgentResponse\n  ): Promise<void> {\n    if (!this.vectorStore) return;\n\n    try {\n      const language = this.detectLanguage(context.filePath);\n\n      // Store high-quality code patterns (score >= 80)\n      if (analysis.score >= 80) {\n        const patternDoc: MemoryDocument = {\n          id: `pattern_${this.id}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          content: context.content,\n          contentType: 'code',\n          metadata: {\n            agentId: this.id,\n            timestamp: Date.now(),\n            fileType: context.filePath.split('.').pop() || '',\n            projectContext: 'VERSATIL Framework',\n            tags: [language, this.ragConfig.agentDomain, 'pattern', 'high-quality'],\n            relevanceScore: analysis.score / 100,\n            language,\n            framework: this.detectFramework(context.content)\n          }\n        };\n\n        await this.vectorStore.storeMemory(patternDoc);\n      }\n\n      // Store successful solutions for detected issues\n      for (const suggestion of response.suggestions) {\n        if (suggestion.priority !== 'low') {\n          const solutionDoc: MemoryDocument = {\n            id: `solution_${this.id}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n            content: suggestion.action,\n            contentType: 'text',\n            metadata: {\n              agentId: this.id,\n              timestamp: Date.now(),\n              projectContext: 'VERSATIL Framework',\n              tags: [language, this.ragConfig.agentDomain, suggestion.type, 'solution'],\n              relevanceScore: suggestion.priority === 'critical' ? 1.0 : suggestion.priority === 'high' ? 0.8 : 0.6,\n              language\n            }\n          };\n\n          await this.vectorStore.storeMemory(solutionDoc);\n        }\n      }\n    } catch (error) {\n      console.warn(`Failed to store patterns for ${this.id}:`, error.message);\n    }\n  }\n\n  // Helper methods\n\n  protected getEmptyRAGContext(): AgentRAGContext {\n    return {\n      similarCode: [],\n      previousSolutions: {},\n      projectStandards: [],\n      agentExpertise: []\n    };\n  }\n\n  protected createSemanticQuery(content: string, filePath: string): string {\n    // Extract key concepts and create semantic query\n    const lines = content.split('\\n');\n    const keywords: string[] = [];\n\n    // Extract function/class names\n    const functionMatches = content.match(/(?:function|class|const|let|var)\\s+(\\w+)/g);\n    if (functionMatches) {\n      keywords.push(...functionMatches.map(match => match.split(/\\s+/)[1]));\n    }\n\n    // Add file path context\n    const pathParts = filePath.split('/').filter(part => part && !part.includes('.'));\n    keywords.push(...pathParts);\n\n    // Create concise semantic query\n    const uniqueKeywords = [...new Set(keywords)].filter(k => k && k.length > 2).slice(0, 8);\n    return uniqueKeywords.join(' ') || content.slice(0, 150);\n  }\n\n  protected detectLanguage(filePath: string): string {\n    const ext = filePath.split('.').pop()?.toLowerCase() || '';\n    const langMap: Record<string, string> = {\n      'js': 'javascript', 'jsx': 'javascriptreact',\n      'ts': 'typescript', 'tsx': 'typescriptreact',\n      'py': 'python', 'vue': 'vue', 'svelte': 'svelte'\n    };\n    return langMap[ext] || 'plaintext';\n  }\n\n  protected detectFramework(content: string): string {\n    if (content.includes('react') || content.includes('useState')) return 'react';\n    if (content.includes('vue') || content.includes('Vue')) return 'vue';\n    if (content.includes('angular')) return 'angular';\n    if (content.includes('express') || content.includes('app.get')) return 'express';\n    return '';\n  }\n\n  protected enhanceSuggestionsWithRAG(suggestions: any[], ragContext: AgentRAGContext): void {\n    // Add RAG-derived suggestions\n    if (ragContext.similarCode.length > 0) {\n      suggestions.push({\n        type: 'rag-pattern',\n        description: `Found ${ragContext.similarCode.length} similar patterns in project history`,\n        location: 'RAG Context',\n        priority: 'info',\n        action: 'Review similar implementations for consistency and best practices'\n      });\n    }\n  }\n\n  protected generateEnhancedMessage(analysis: AnalysisResult, ragContext?: AgentRAGContext): string {\n    let message = `${this.ragConfig.agentDomain} Analysis Complete: Score ${analysis.score}/100. ${analysis.patterns.length} issues found.`;\n\n    if (ragContext) {\n      const ragInsights = [];\n      if (ragContext.similarCode.length > 0) ragInsights.push(`${ragContext.similarCode.length} similar patterns`);\n      if (Object.keys(ragContext.previousSolutions).length > 0) ragInsights.push(`solutions for ${Object.keys(ragContext.previousSolutions).length} issue types`);\n      if (ragContext.projectStandards.length > 0) ragInsights.push(`${ragContext.projectStandards.length} project standards`);\n\n      if (ragInsights.length > 0) {\n        message += ` RAG-Enhanced: ${ragInsights.join(', ')}.`;\n      }\n    }\n\n    return message;\n  }\n\n  protected summarizeRAGInsights(ragContext: AgentRAGContext): any {\n    return {\n      similarPatterns: ragContext.similarCode.length,\n      solutionTypes: Object.keys(ragContext.previousSolutions).length,\n      projectStandards: ragContext.projectStandards.length,\n      expertise: ragContext.agentExpertise.length\n    };\n  }\n\n  protected calculatePriorityWithRAG(analysis: AnalysisResult, ragContext?: AgentRAGContext): string {\n    // Check for critical severity issues first\n    const hasCritical = analysis.patterns.some(p => p.severity === 'critical');\n    if (hasCritical) return 'critical';\n\n    const hasHigh = analysis.patterns.some(p => p.severity === 'high');\n    if (hasHigh) return 'high';\n\n    // Fall back to score-based priority\n    let basePriority = analysis.score < 60 ? 'high' : analysis.score < 80 ? 'medium' : 'low';\n\n    // Boost priority if RAG context shows this is a recurring issue\n    if (ragContext && Object.keys(ragContext.previousSolutions).length > 2) {\n      if (basePriority === 'low') basePriority = 'medium';\n      if (basePriority === 'medium') basePriority = 'high';\n    }\n\n    return basePriority;\n  }\n\n  // Abstract methods to be implemented by specific agents\n  protected abstract getBasePromptTemplate(): string;\n  protected abstract generateDomainHandoffs(analysis: AnalysisResult): string[];\n}"],"mappings":"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","ignoreList":[]}