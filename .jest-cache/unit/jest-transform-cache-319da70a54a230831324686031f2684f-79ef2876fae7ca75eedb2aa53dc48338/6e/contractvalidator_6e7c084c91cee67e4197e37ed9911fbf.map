{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/contracts/contract-validator.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/contracts/contract-validator.ts"],"sourcesContent":["/**\n * Contract Validator\n *\n * Validates agent handoff contracts before transmission and after receipt\n * to ensure data integrity and completeness.\n *\n * Validation Levels:\n * - Schema: Required fields, types, structure\n * - Business: Work items, acceptance criteria, success criteria\n * - Memory: Snapshot completeness, token estimates\n * - Quality: Quality gates, expected outputs\n */\n\nimport {\n  AgentHandoffContract,\n  ThreeTierHandoffContract,\n  WorkItem,\n  MemorySnapshot,\n  HandoffType,\n  CONTRACT_VERSION\n} from './agent-handoff-contract.js';\n\n/**\n * Validation result\n */\nexport interface ValidationResult {\n  valid: boolean;\n  errors: ValidationError[];\n  warnings: ValidationWarning[];\n  score: number; // 0-100, quality score of contract\n}\n\n/**\n * Validation error (must fix)\n */\nexport interface ValidationError {\n  field: string;\n  message: string;\n  severity: 'critical' | 'high' | 'medium';\n  suggestion?: string;\n}\n\n/**\n * Validation warning (should fix)\n */\nexport interface ValidationWarning {\n  field: string;\n  message: string;\n  impact: 'low' | 'medium' | 'high';\n  recommendation?: string;\n}\n\n/**\n * Validation options\n */\nexport interface ValidationOptions {\n  /**\n   * Validate schema (required fields, types)\n   */\n  validateSchema?: boolean;\n\n  /**\n   * Validate business logic (work items, criteria)\n   */\n  validateBusiness?: boolean;\n\n  /**\n   * Validate memory snapshot\n   */\n  validateMemory?: boolean;\n\n  /**\n   * Validate quality gates\n   */\n  validateQuality?: boolean;\n\n  /**\n   * Strict mode (warnings become errors)\n   */\n  strictMode?: boolean;\n\n  /**\n   * Minimum quality score (0-100)\n   */\n  minQualityScore?: number;\n}\n\n/**\n * Default validation options\n */\nconst DEFAULT_OPTIONS: ValidationOptions = {\n  validateSchema: true,\n  validateBusiness: true,\n  validateMemory: true,\n  validateQuality: true,\n  strictMode: false,\n  minQualityScore: 70\n};\n\n/**\n * Contract Validator\n */\nexport class ContractValidator {\n  private options: ValidationOptions;\n\n  constructor(options: ValidationOptions = {}) {\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n  }\n\n  /**\n   * Validate contract before sending\n   */\n  async validateBeforeSend(contract: AgentHandoffContract): Promise<ValidationResult> {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationWarning[] = [];\n    let score = 100;\n\n    // Schema validation\n    if (this.options.validateSchema) {\n      const schemaResult = this.validateSchema(contract);\n      errors.push(...schemaResult.errors);\n      warnings.push(...schemaResult.warnings);\n      score -= schemaResult.errors.length * 15;\n      score -= schemaResult.warnings.length * 5;\n    }\n\n    // Business logic validation\n    if (this.options.validateBusiness) {\n      const businessResult = this.validateBusinessLogic(contract);\n      errors.push(...businessResult.errors);\n      warnings.push(...businessResult.warnings);\n      score -= businessResult.errors.length * 10;\n      score -= businessResult.warnings.length * 3;\n    }\n\n    // Memory snapshot validation\n    if (this.options.validateMemory) {\n      const memoryResult = this.validateMemorySnapshot(contract.memorySnapshot);\n      errors.push(...memoryResult.errors);\n      warnings.push(...memoryResult.warnings);\n      score -= memoryResult.errors.length * 12;\n      score -= memoryResult.warnings.length * 4;\n    }\n\n    // Quality gates validation\n    if (this.options.validateQuality) {\n      const qualityResult = this.validateQualityGates(contract);\n      errors.push(...qualityResult.errors);\n      warnings.push(...qualityResult.warnings);\n      score -= qualityResult.errors.length * 8;\n      score -= qualityResult.warnings.length * 2;\n    }\n\n    // Strict mode: warnings become errors\n    if (this.options.strictMode) {\n      warnings.forEach(warning => {\n        errors.push({\n          field: warning.field,\n          message: warning.message,\n          severity: 'medium',\n          suggestion: warning.recommendation\n        });\n      });\n      warnings.length = 0;\n    }\n\n    // Ensure score is within bounds\n    score = Math.max(0, Math.min(100, score));\n\n    // Check minimum quality score\n    if (this.options.minQualityScore && score < this.options.minQualityScore) {\n      errors.push({\n        field: 'overall',\n        message: `Contract quality score (${score}) below minimum (${this.options.minQualityScore})`,\n        severity: 'high',\n        suggestion: 'Address errors and warnings to improve score'\n      });\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      score\n    };\n  }\n\n  /**\n   * Validate contract after receiving\n   */\n  async validateAfterReceive(contract: AgentHandoffContract): Promise<ValidationResult> {\n    // Same as before send, plus check expiration\n    const result = await this.validateBeforeSend(contract);\n\n    // Check if contract has expired\n    if (contract.expiresAt && new Date() > contract.expiresAt) {\n      result.errors.push({\n        field: 'expiresAt',\n        message: `Contract expired at ${contract.expiresAt.toISOString()}`,\n        severity: 'critical',\n        suggestion: 'Request updated contract from sender'\n      });\n      result.valid = false;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate schema (required fields, types)\n   */\n  private validateSchema(contract: AgentHandoffContract): ValidationResult {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationWarning[] = [];\n\n    // Required fields\n    if (!contract.contractId) {\n      errors.push({\n        field: 'contractId',\n        message: 'Contract ID is required',\n        severity: 'critical'\n      });\n    }\n\n    if (!contract.version) {\n      errors.push({\n        field: 'version',\n        message: 'Contract version is required',\n        severity: 'high'\n      });\n    } else if (contract.version !== CONTRACT_VERSION) {\n      warnings.push({\n        field: 'version',\n        message: `Contract version (${contract.version}) differs from current (${CONTRACT_VERSION})`,\n        impact: 'medium',\n        recommendation: 'Update contract to current version'\n      });\n    }\n\n    if (!contract.sender?.agentId) {\n      errors.push({\n        field: 'sender.agentId',\n        message: 'Sender agent ID is required',\n        severity: 'critical'\n      });\n    }\n\n    if (!contract.receivers || contract.receivers.length === 0) {\n      errors.push({\n        field: 'receivers',\n        message: 'At least one receiver is required',\n        severity: 'critical'\n      });\n    }\n\n    if (!contract.type) {\n      errors.push({\n        field: 'type',\n        message: 'Handoff type is required',\n        severity: 'high'\n      });\n    }\n\n    if (!contract.workItems || contract.workItems.length === 0) {\n      errors.push({\n        field: 'workItems',\n        message: 'At least one work item is required',\n        severity: 'critical'\n      });\n    }\n\n    if (!contract.memorySnapshot) {\n      errors.push({\n        field: 'memorySnapshot',\n        message: 'Memory snapshot is required',\n        severity: 'high',\n        suggestion: 'Create snapshot before handoff'\n      });\n    }\n\n    return { valid: errors.length === 0, errors, warnings, score: 100 };\n  }\n\n  /**\n   * Validate business logic\n   */\n  private validateBusinessLogic(contract: AgentHandoffContract): ValidationResult {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationWarning[] = [];\n\n    // Validate work items\n    contract.workItems?.forEach((item, index) => {\n      if (!item.id) {\n        errors.push({\n          field: `workItems[${index}].id`,\n          message: 'Work item ID is required',\n          severity: 'high'\n        });\n      }\n\n      if (!item.description || item.description.trim().length === 0) {\n        errors.push({\n          field: `workItems[${index}].description`,\n          message: 'Work item description is required',\n          severity: 'medium'\n        });\n      }\n\n      if (!item.acceptanceCriteria || item.acceptanceCriteria.length === 0) {\n        warnings.push({\n          field: `workItems[${index}].acceptanceCriteria`,\n          message: 'Work item has no acceptance criteria',\n          impact: 'high',\n          recommendation: 'Define clear acceptance criteria'\n        });\n      }\n\n      // Check for circular dependencies\n      if (item.dependencies && item.dependencies.includes(item.id)) {\n        errors.push({\n          field: `workItems[${index}].dependencies`,\n          message: 'Work item cannot depend on itself',\n          severity: 'medium'\n        });\n      }\n    });\n\n    // Validate expected output\n    if (!contract.expectedOutput) {\n      warnings.push({\n        field: 'expectedOutput',\n        message: 'No expected output defined',\n        impact: 'high',\n        recommendation: 'Define expected artifacts and success criteria'\n      });\n    } else {\n      if (!contract.expectedOutput.artifacts || contract.expectedOutput.artifacts.length === 0) {\n        warnings.push({\n          field: 'expectedOutput.artifacts',\n          message: 'No expected artifacts defined',\n          impact: 'medium',\n          recommendation: 'Specify what should be produced'\n        });\n      }\n\n      if (!contract.expectedOutput.successCriteria || contract.expectedOutput.successCriteria.length === 0) {\n        warnings.push({\n          field: 'expectedOutput.successCriteria',\n          message: 'No success criteria defined',\n          impact: 'high',\n          recommendation: 'Define clear success criteria'\n        });\n      }\n    }\n\n    // Validate handoff type matches receivers\n    if (contract.type === 'sequential' && contract.receivers && contract.receivers.length > 1) {\n      warnings.push({\n        field: 'type',\n        message: 'Sequential handoff with multiple receivers',\n        impact: 'medium',\n        recommendation: 'Use \"parallel\" type for multiple receivers'\n      });\n    }\n\n    if (contract.type === 'parallel' && contract.receivers && contract.receivers.length === 1) {\n      warnings.push({\n        field: 'type',\n        message: 'Parallel handoff with single receiver',\n        impact: 'low',\n        recommendation: 'Use \"sequential\" type for single receiver'\n      });\n    }\n\n    return { valid: errors.length === 0, errors, warnings, score: 100 };\n  }\n\n  /**\n   * Validate memory snapshot\n   */\n  private validateMemorySnapshot(snapshot: MemorySnapshot): ValidationResult {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationWarning[] = [];\n\n    if (!snapshot) {\n      return { valid: false, errors: [{\n        field: 'memorySnapshot',\n        message: 'Memory snapshot is required',\n        severity: 'critical'\n      }], warnings: [], score: 0 };\n    }\n\n    if (!snapshot.agentId) {\n      errors.push({\n        field: 'memorySnapshot.agentId',\n        message: 'Snapshot agent ID is required',\n        severity: 'high'\n      });\n    }\n\n    if (!snapshot.timestamp) {\n      errors.push({\n        field: 'memorySnapshot.timestamp',\n        message: 'Snapshot timestamp is required',\n        severity: 'medium'\n      });\n    }\n\n    if (!snapshot.contextSummary || snapshot.contextSummary.trim().length === 0) {\n      warnings.push({\n        field: 'memorySnapshot.contextSummary',\n        message: 'Context summary is empty',\n        impact: 'high',\n        recommendation: 'Provide summary of current context'\n      });\n    }\n\n    if (!snapshot.memoryFiles || Object.keys(snapshot.memoryFiles).length === 0) {\n      warnings.push({\n        field: 'memorySnapshot.memoryFiles',\n        message: 'No memory files in snapshot',\n        impact: 'medium',\n        recommendation: 'Include relevant memory files'\n      });\n    }\n\n    if (!snapshot.criticalPatterns || snapshot.criticalPatterns.length === 0) {\n      warnings.push({\n        field: 'memorySnapshot.criticalPatterns',\n        message: 'No critical patterns identified',\n        impact: 'medium',\n        recommendation: 'Extract critical patterns from memory'\n      });\n    }\n\n    // Check token count\n    if (snapshot.estimatedTokens === 0) {\n      warnings.push({\n        field: 'memorySnapshot.estimatedTokens',\n        message: 'Token count not estimated',\n        impact: 'low',\n        recommendation: 'Estimate tokens for context management'\n      });\n    } else if (snapshot.estimatedTokens > 50000) {\n      warnings.push({\n        field: 'memorySnapshot.estimatedTokens',\n        message: `Large snapshot (${snapshot.estimatedTokens} tokens)`,\n        impact: 'medium',\n        recommendation: 'Consider reducing snapshot size'\n      });\n    }\n\n    return { valid: errors.length === 0, errors, warnings, score: 100 };\n  }\n\n  /**\n   * Validate quality gates\n   */\n  private validateQualityGates(contract: AgentHandoffContract): ValidationResult {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationWarning[] = [];\n\n    if (!contract.expectedOutput?.qualityGates) {\n      warnings.push({\n        field: 'expectedOutput.qualityGates',\n        message: 'No quality gates defined',\n        impact: 'high',\n        recommendation: 'Define quality gates for validation'\n      });\n      return { valid: true, errors, warnings, score: 100 };\n    }\n\n    contract.expectedOutput.qualityGates.forEach((gate, index) => {\n      if (!gate.name) {\n        errors.push({\n          field: `expectedOutput.qualityGates[${index}].name`,\n          message: 'Quality gate name is required',\n          severity: 'medium'\n        });\n      }\n\n      if (gate.threshold === undefined || gate.threshold === null) {\n        warnings.push({\n          field: `expectedOutput.qualityGates[${index}].threshold`,\n          message: 'Quality gate threshold not defined',\n          impact: 'high',\n          recommendation: 'Define measurable threshold'\n        });\n      }\n    });\n\n    return { valid: errors.length === 0, errors, warnings, score: 100 };\n  }\n\n  /**\n   * Validate three-tier contract (specialized)\n   */\n  validateThreeTier(contract: ThreeTierHandoffContract): ValidationResult {\n    // First, validate as normal contract\n    const baseResult = this.validateSchema(contract);\n\n    // Additional three-tier validations\n    if (!contract.apiContract || !contract.apiContract.endpoints || contract.apiContract.endpoints.length === 0) {\n      baseResult.errors.push({\n        field: 'apiContract.endpoints',\n        message: 'Three-tier contract requires API endpoints',\n        severity: 'critical',\n        suggestion: 'Define at least one API endpoint'\n      });\n    }\n\n    if (!contract.databaseSchema || !contract.databaseSchema.tables || contract.databaseSchema.tables.length === 0) {\n      baseResult.errors.push({\n        field: 'databaseSchema.tables',\n        message: 'Three-tier contract requires database schema',\n        severity: 'critical',\n        suggestion: 'Define at least one database table'\n      });\n    }\n\n    if (!contract.uiRequirements || !contract.uiRequirements.components || contract.uiRequirements.components.length === 0) {\n      baseResult.errors.push({\n        field: 'uiRequirements.components',\n        message: 'Three-tier contract requires UI components',\n        severity: 'critical',\n        suggestion: 'Define at least one UI component'\n      });\n    }\n\n    // Verify receivers match three-tier (Dana, Marcus, James)\n    const receiverIds = contract.receivers.map(r => r.agentId);\n    const requiredAgents = ['dana-database', 'marcus-backend', 'james-frontend'];\n\n    requiredAgents.forEach(agentId => {\n      if (!receiverIds.includes(agentId as any)) {\n        baseResult.warnings.push({\n          field: 'receivers',\n          message: `Three-tier handoff missing ${agentId}`,\n          impact: 'high',\n          recommendation: `Add ${agentId} to receivers`\n        });\n      }\n    });\n\n    baseResult.valid = baseResult.errors.length === 0;\n    return baseResult;\n  }\n}\n\n/**\n * Quick validation helper\n */\nexport async function validateContract(\n  contract: AgentHandoffContract,\n  options?: ValidationOptions\n): Promise<ValidationResult> {\n  const validator = new ContractValidator(options);\n  return validator.validateBeforeSend(contract);\n}\n"],"version":3}