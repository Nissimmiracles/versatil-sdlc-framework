521377680bb9fb7355ac04c26c87fb5b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.log = exports.VERSATILLogger = void 0;
class VERSATILLogger {
    constructor(component) {
        this.component = component;
    }
    static getInstance(component) {
        if (!VERSATILLogger.instance) {
            VERSATILLogger.instance = new VERSATILLogger(component);
        }
        return VERSATILLogger.instance;
    }
    info(message, context, component) {
        const logMessage = this.formatMessage('INFO', message, context, component);
        console.log(logMessage);
    }
    error(message, context, component) {
        const logMessage = this.formatMessage('ERROR', message, context, component);
        console.error(logMessage);
    }
    warn(message, context, component) {
        const logMessage = this.formatMessage('WARN', message, context, component);
        console.warn(logMessage);
    }
    warning(message, context, component) {
        this.warn(message, context, component);
    }
    debug(message, context, component) {
        const logMessage = this.formatMessage('DEBUG', message, context, component);
        console.log(logMessage);
    }
    formatMessage(level, message, context, component) {
        const comp = component || this.component || 'VERSATIL';
        let formatted = `[${comp}] ${level}: ${message}`;
        if (context && Object.keys(context).length > 0) {
            formatted += ` ${JSON.stringify(context)}`;
        }
        return formatted;
    }
}
exports.VERSATILLogger = VERSATILLogger;
exports.log = console;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL25pc3NpbW1lbmFzaGUvVkVSU0FUSUwgU0RMQyBGVy9zcmMvdXRpbHMvbG9nZ2VyLnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLE1BQWEsY0FBYztJQUd6QixZQUFvQixTQUFrQjtRQUFsQixjQUFTLEdBQVQsU0FBUyxDQUFTO0lBQUcsQ0FBQztJQUUxQyxNQUFNLENBQUMsV0FBVyxDQUFDLFNBQWtCO1FBQ25DLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDN0IsY0FBYyxDQUFDLFFBQVEsR0FBRyxJQUFJLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMxRCxDQUFDO1FBQ0QsT0FBTyxjQUFjLENBQUMsUUFBUSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxJQUFJLENBQUMsT0FBZSxFQUFFLE9BQWEsRUFBRSxTQUFrQjtRQUNyRCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzNFLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFlLEVBQUUsT0FBYSxFQUFFLFNBQWtCO1FBQ3RELE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDNUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBSSxDQUFDLE9BQWUsRUFBRSxPQUFhLEVBQUUsU0FBa0I7UUFDckQsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUMzRSxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxPQUFPLENBQUMsT0FBZSxFQUFFLE9BQWEsRUFBRSxTQUFrQjtRQUN4RCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFlLEVBQUUsT0FBYSxFQUFFLFNBQWtCO1FBQ3RELE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDNUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRU8sYUFBYSxDQUFDLEtBQWEsRUFBRSxPQUFlLEVBQUUsT0FBYSxFQUFFLFNBQWtCO1FBQ3JGLE1BQU0sSUFBSSxHQUFHLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxJQUFJLFVBQVUsQ0FBQztRQUN2RCxJQUFJLFNBQVMsR0FBRyxJQUFJLElBQUksS0FBSyxLQUFLLEtBQUssT0FBTyxFQUFFLENBQUM7UUFFakQsSUFBSSxPQUFPLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDL0MsU0FBUyxJQUFJLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQzdDLENBQUM7UUFFRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUE5Q0Qsd0NBOENDO0FBRVksUUFBQSxHQUFHLEdBQUcsT0FBTyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaXNzaW1tZW5hc2hlL1ZFUlNBVElMIFNETEMgRlcvc3JjL3V0aWxzL2xvZ2dlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVkVSU0FUSUxMb2dnZXIge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogVkVSU0FUSUxMb2dnZXI7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb21wb25lbnQ/OiBzdHJpbmcpIHt9XG5cbiAgc3RhdGljIGdldEluc3RhbmNlKGNvbXBvbmVudD86IHN0cmluZyk6IFZFUlNBVElMTG9nZ2VyIHtcbiAgICBpZiAoIVZFUlNBVElMTG9nZ2VyLmluc3RhbmNlKSB7XG4gICAgICBWRVJTQVRJTExvZ2dlci5pbnN0YW5jZSA9IG5ldyBWRVJTQVRJTExvZ2dlcihjb21wb25lbnQpO1xuICAgIH1cbiAgICByZXR1cm4gVkVSU0FUSUxMb2dnZXIuaW5zdGFuY2U7XG4gIH1cblxuICBpbmZvKG1lc3NhZ2U6IHN0cmluZywgY29udGV4dD86IGFueSwgY29tcG9uZW50Pzogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc3QgbG9nTWVzc2FnZSA9IHRoaXMuZm9ybWF0TWVzc2FnZSgnSU5GTycsIG1lc3NhZ2UsIGNvbnRleHQsIGNvbXBvbmVudCk7XG4gICAgY29uc29sZS5sb2cobG9nTWVzc2FnZSk7XG4gIH1cblxuICBlcnJvcihtZXNzYWdlOiBzdHJpbmcsIGNvbnRleHQ/OiBhbnksIGNvbXBvbmVudD86IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnN0IGxvZ01lc3NhZ2UgPSB0aGlzLmZvcm1hdE1lc3NhZ2UoJ0VSUk9SJywgbWVzc2FnZSwgY29udGV4dCwgY29tcG9uZW50KTtcbiAgICBjb25zb2xlLmVycm9yKGxvZ01lc3NhZ2UpO1xuICB9XG5cbiAgd2FybihtZXNzYWdlOiBzdHJpbmcsIGNvbnRleHQ/OiBhbnksIGNvbXBvbmVudD86IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnN0IGxvZ01lc3NhZ2UgPSB0aGlzLmZvcm1hdE1lc3NhZ2UoJ1dBUk4nLCBtZXNzYWdlLCBjb250ZXh0LCBjb21wb25lbnQpO1xuICAgIGNvbnNvbGUud2Fybihsb2dNZXNzYWdlKTtcbiAgfVxuXG4gIHdhcm5pbmcobWVzc2FnZTogc3RyaW5nLCBjb250ZXh0PzogYW55LCBjb21wb25lbnQ/OiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLndhcm4obWVzc2FnZSwgY29udGV4dCwgY29tcG9uZW50KTtcbiAgfVxuXG4gIGRlYnVnKG1lc3NhZ2U6IHN0cmluZywgY29udGV4dD86IGFueSwgY29tcG9uZW50Pzogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc3QgbG9nTWVzc2FnZSA9IHRoaXMuZm9ybWF0TWVzc2FnZSgnREVCVUcnLCBtZXNzYWdlLCBjb250ZXh0LCBjb21wb25lbnQpO1xuICAgIGNvbnNvbGUubG9nKGxvZ01lc3NhZ2UpO1xuICB9XG5cbiAgcHJpdmF0ZSBmb3JtYXRNZXNzYWdlKGxldmVsOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZywgY29udGV4dD86IGFueSwgY29tcG9uZW50Pzogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBjb21wID0gY29tcG9uZW50IHx8IHRoaXMuY29tcG9uZW50IHx8ICdWRVJTQVRJTCc7XG4gICAgbGV0IGZvcm1hdHRlZCA9IGBbJHtjb21wfV0gJHtsZXZlbH06ICR7bWVzc2FnZX1gO1xuXG4gICAgaWYgKGNvbnRleHQgJiYgT2JqZWN0LmtleXMoY29udGV4dCkubGVuZ3RoID4gMCkge1xuICAgICAgZm9ybWF0dGVkICs9IGAgJHtKU09OLnN0cmluZ2lmeShjb250ZXh0KX1gO1xuICAgIH1cblxuICAgIHJldHVybiBmb3JtYXR0ZWQ7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGxvZyA9IGNvbnNvbGU7XG4iXSwidmVyc2lvbiI6M30=