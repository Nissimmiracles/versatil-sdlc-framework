8190cf8891cb7c92bd50e060e6d84c6a
"use strict";

/* istanbul ignore next */
function cov_2rmdadc8yo() {
  var path = "/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/enhanced-marcus.ts";
  var hash = "f41dcc17b18869eca54b4861599e200c68b5dd11";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/enhanced-marcus.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 28
        },
        end: {
          line: 4,
          column: 58
        }
      },
      "3": {
        start: {
          line: 5,
          column: 27
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 37
        }
      },
      "6": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 36
        }
      },
      "7": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 84
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 153
        }
      },
      "9": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 54
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "11": {
        start: {
          line: 21,
          column: 47
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 25,
          column: 14
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 100
        }
      },
      "16": {
        start: {
          line: 50,
          column: 30
        },
        end: {
          line: 50,
          column: 93
        }
      },
      "17": {
        start: {
          line: 50,
          column: 60
        },
        end: {
          line: 50,
          column: 85
        }
      },
      "18": {
        start: {
          line: 51,
          column: 22
        },
        end: {
          line: 53,
          column: 131
        }
      },
      "19": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "20": {
        start: {
          line: 55,
          column: 32
        },
        end: {
          line: 55,
          column: 34
        }
      },
      "21": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 57,
          column: 86
        }
      },
      "22": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 86
        }
      },
      "23": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 59,
          column: 114
        }
      },
      "24": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 114
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 61,
          column: 92
        }
      },
      "26": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 92
        }
      },
      "27": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "28": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 71
        }
      },
      "29": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 23
        }
      },
      "30": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 114,
          column: 2
        }
      },
      "31": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 27
        }
      },
      "32": {
        start: {
          line: 121,
          column: 31
        },
        end: {
          line: 121,
          column: 87
        }
      },
      "33": {
        start: {
          line: 121,
          column: 61
        },
        end: {
          line: 121,
          column: 86
        }
      },
      "34": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "35": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 42
        }
      },
      "36": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "37": {
        start: {
          line: 125,
          column: 40
        },
        end: {
          line: 125,
          column: 103
        }
      },
      "38": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 40
        }
      },
      "39": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "40": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 44
        }
      },
      "41": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "42": {
        start: {
          line: 131,
          column: 40
        },
        end: {
          line: 131,
          column: 100
        }
      },
      "43": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 44
        }
      },
      "44": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 24
        }
      },
      "45": {
        start: {
          line: 140,
          column: 27
        },
        end: {
          line: 140,
          column: 81
        }
      },
      "46": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "47": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 235,
          column: 13
        }
      },
      "48": {
        start: {
          line: 145,
          column: 40
        },
        end: {
          line: 152,
          column: 34
        }
      },
      "49": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 224,
          column: 17
        }
      },
      "50": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 172,
          column: 22
        }
      },
      "51": {
        start: {
          line: 157,
          column: 78
        },
        end: {
          line: 171,
          column: 25
        }
      },
      "52": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 188,
          column: 22
        }
      },
      "53": {
        start: {
          line: 175,
          column: 83
        },
        end: {
          line: 187,
          column: 25
        }
      },
      "54": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 216,
          column: 22
        }
      },
      "55": {
        start: {
          line: 191,
          column: 86
        },
        end: {
          line: 203,
          column: 25
        }
      },
      "56": {
        start: {
          line: 204,
          column: 93
        },
        end: {
          line: 215,
          column: 25
        }
      },
      "57": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 223,
          column: 22
        }
      },
      "58": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 96
        }
      },
      "59": {
        start: {
          line: 229,
          column: 36
        },
        end: {
          line: 229,
          column: 75
        }
      },
      "60": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 85
        }
      },
      "61": {
        start: {
          line: 231,
          column: 41
        },
        end: {
          line: 231,
          column: 95
        }
      },
      "62": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 100
        }
      },
      "63": {
        start: {
          line: 233,
          column: 44
        },
        end: {
          line: 233,
          column: 91
        }
      },
      "64": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 99
        }
      },
      "65": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 26
        }
      },
      "66": {
        start: {
          line: 243,
          column: 26
        },
        end: {
          line: 243,
          column: 63
        }
      },
      "67": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 59
        }
      },
      "68": {
        start: {
          line: 245,
          column: 23
        },
        end: {
          line: 245,
          column: 63
        }
      },
      "69": {
        start: {
          line: 246,
          column: 25
        },
        end: {
          line: 246,
          column: 62
        }
      },
      "70": {
        start: {
          line: 248,
          column: 25
        },
        end: {
          line: 248,
          column: 69
        }
      },
      "71": {
        start: {
          line: 248,
          column: 52
        },
        end: {
          line: 248,
          column: 58
        }
      },
      "72": {
        start: {
          line: 249,
          column: 34
        },
        end: {
          line: 249,
          column: 88
        }
      },
      "73": {
        start: {
          line: 249,
          column: 62
        },
        end: {
          line: 249,
          column: 87
        }
      },
      "74": {
        start: {
          line: 250,
          column: 37
        },
        end: {
          line: 250,
          column: 94
        }
      },
      "75": {
        start: {
          line: 250,
          column: 65
        },
        end: {
          line: 250,
          column: 93
        }
      },
      "76": {
        start: {
          line: 251,
          column: 25
        },
        end: {
          line: 251,
          column: 63
        }
      },
      "77": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "78": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 80
        }
      },
      "79": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "80": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 81
        }
      },
      "81": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "82": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 38
        }
      },
      "83": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 43
        }
      },
      "84": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 268,
          column: 22
        }
      },
      "85": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 22
        }
      },
      "86": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 59
        }
      },
      "87": {
        start: {
          line: 270,
          column: 26
        },
        end: {
          line: 270,
          column: 63
        }
      },
      "88": {
        start: {
          line: 271,
          column: 22
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "89": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "90": {
        start: {
          line: 282,
          column: 27
        },
        end: {
          line: 282,
          column: 70
        }
      },
      "91": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 42
        }
      },
      "92": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 76
        }
      },
      "93": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 22
        }
      },
      "94": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 295,
          column: 22
        }
      },
      "95": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 22
        }
      },
      "96": {
        start: {
          line: 297,
          column: 31
        },
        end: {
          line: 297,
          column: 87
        }
      },
      "97": {
        start: {
          line: 297,
          column: 61
        },
        end: {
          line: 297,
          column: 86
        }
      },
      "98": {
        start: {
          line: 298,
          column: 30
        },
        end: {
          line: 298,
          column: 79
        }
      },
      "99": {
        start: {
          line: 298,
          column: 58
        },
        end: {
          line: 298,
          column: 68
        }
      },
      "100": {
        start: {
          line: 299,
          column: 22
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "101": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "102": {
        start: {
          line: 310,
          column: 27
        },
        end: {
          line: 310,
          column: 70
        }
      },
      "103": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 42
        }
      },
      "104": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 81
        }
      },
      "105": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 22
        }
      },
      "106": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 323,
          column: 22
        }
      },
      "107": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 22
        }
      },
      "108": {
        start: {
          line: 324,
          column: 26
        },
        end: {
          line: 324,
          column: 63
        }
      },
      "109": {
        start: {
          line: 325,
          column: 23
        },
        end: {
          line: 325,
          column: 63
        }
      },
      "110": {
        start: {
          line: 326,
          column: 22
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "111": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "112": {
        start: {
          line: 337,
          column: 27
        },
        end: {
          line: 337,
          column: 70
        }
      },
      "113": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 42
        }
      },
      "114": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 84
        }
      },
      "115": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 22
        }
      },
      "116": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 350,
          column: 29
        }
      },
      "117": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 29
        }
      },
      "118": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 352,
          column: 26
        }
      },
      "119": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 26
        }
      },
      "120": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 354,
          column: 26
        }
      },
      "121": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 26
        }
      },
      "122": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 356,
          column: 26
        }
      },
      "123": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 26
        }
      },
      "124": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 358,
          column: 31
        }
      },
      "125": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 31
        }
      },
      "126": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 21
        }
      },
      "127": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 366,
          column: 29
        }
      },
      "128": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 29
        }
      },
      "129": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 368,
          column: 28
        }
      },
      "130": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 28
        }
      },
      "131": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 370,
          column: 31
        }
      },
      "132": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 31
        }
      },
      "133": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 372,
          column: 29
        }
      },
      "134": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 29
        }
      },
      "135": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 374,
          column: 32
        }
      },
      "136": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 32
        }
      },
      "137": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 376,
          column: 27
        }
      },
      "138": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 27
        }
      },
      "139": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 378,
          column: 27
        }
      },
      "140": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 27
        }
      },
      "141": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 26
        }
      },
      "142": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 388,
          column: 10
        }
      },
      "143": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 397,
          column: 10
        }
      },
      "144": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 406,
          column: 10
        }
      },
      "145": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 413,
          column: 25
        }
      },
      "146": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 25
        }
      },
      "147": {
        start: {
          line: 414,
          column: 27
        },
        end: {
          line: 414,
          column: 63
        }
      },
      "148": {
        start: {
          line: 414,
          column: 43
        },
        end: {
          line: 414,
          column: 62
        }
      },
      "149": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 416,
          column: 30
        }
      },
      "150": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 30
        }
      },
      "151": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 418,
          column: 26
        }
      },
      "152": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 26
        }
      },
      "153": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 420,
          column: 28
        }
      },
      "154": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 28
        }
      },
      "155": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 21
        }
      },
      "156": {
        start: {
          line: 427,
          column: 25
        },
        end: {
          line: 427,
          column: 27
        }
      },
      "157": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 429,
          column: 28
        }
      },
      "158": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 28
        }
      },
      "159": {
        start: {
          line: 430,
          column: 33
        },
        end: {
          line: 432,
          column: 38
        }
      },
      "160": {
        start: {
          line: 430,
          column: 50
        },
        end: {
          line: 432,
          column: 37
        }
      },
      "161": {
        start: {
          line: 433,
          column: 36
        },
        end: {
          line: 434,
          column: 41
        }
      },
      "162": {
        start: {
          line: 433,
          column: 53
        },
        end: {
          line: 434,
          column: 40
        }
      },
      "163": {
        start: {
          line: 435,
          column: 33
        },
        end: {
          line: 437,
          column: 46
        }
      },
      "164": {
        start: {
          line: 435,
          column: 50
        },
        end: {
          line: 437,
          column: 45
        }
      },
      "165": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 439,
          column: 42
        }
      },
      "166": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 42
        }
      },
      "167": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 441,
          column: 40
        }
      },
      "168": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 40
        }
      },
      "169": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 443,
          column: 44
        }
      },
      "170": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 44
        }
      },
      "171": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 24
        }
      },
      "172": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 451,
          column: 22
        }
      },
      "173": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 22
        }
      },
      "174": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 469,
          column: 11
        }
      },
      "175": {
        start: {
          line: 453,
          column: 26
        },
        end: {
          line: 453,
          column: 28
        }
      },
      "176": {
        start: {
          line: 454,
          column: 23
        },
        end: {
          line: 454,
          column: 46
        }
      },
      "177": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 463,
          column: 13
        }
      },
      "178": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 102
        }
      },
      "179": {
        start: {
          line: 458,
          column: 17
        },
        end: {
          line: 463,
          column: 13
        }
      },
      "180": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 99
        }
      },
      "181": {
        start: {
          line: 462,
          column: 16
        },
        end: {
          line: 462,
          column: 101
        }
      },
      "182": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 468,
          column: 14
        }
      },
      "183": {
        start: {
          line: 475,
          column: 23
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "184": {
        start: {
          line: 480,
          column: 46
        },
        end: {
          line: 480,
          column: 71
        }
      },
      "185": {
        start: {
          line: 481,
          column: 42
        },
        end: {
          line: 481,
          column: 63
        }
      },
      "186": {
        start: {
          line: 482,
          column: 44
        },
        end: {
          line: 482,
          column: 67
        }
      },
      "187": {
        start: {
          line: 483,
          column: 41
        },
        end: {
          line: 483,
          column: 61
        }
      },
      "188": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 492,
          column: 90
        }
      },
      "189": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 499,
          column: 24
        }
      },
      "190": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 24
        }
      },
      "191": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 501,
          column: 24
        }
      },
      "192": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 24
        }
      },
      "193": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 503,
          column: 24
        }
      },
      "194": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 503,
          column: 24
        }
      },
      "195": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 504,
          column: 20
        }
      },
      "196": {
        start: {
          line: 510,
          column: 22
        },
        end: {
          line: 510,
          column: 42
        }
      },
      "197": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 511,
          column: 37
        }
      },
      "198": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 519,
          column: 10
        }
      },
      "199": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 525,
          column: 21
        }
      },
      "200": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 532,
          column: 22
        }
      },
      "201": {
        start: {
          line: 532,
          column: 12
        },
        end: {
          line: 532,
          column: 22
        }
      },
      "202": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 86
        }
      },
      "203": {
        start: {
          line: 533,
          column: 34
        },
        end: {
          line: 533,
          column: 84
        }
      },
      "204": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 539,
          column: 18
        }
      },
      "205": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 18
        }
      },
      "206": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 551,
          column: 57
        }
      },
      "207": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 18
        }
      },
      "208": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 563,
          column: 18
        }
      },
      "209": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 569,
          column: 18
        }
      },
      "210": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 575,
          column: 59
        }
      },
      "211": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 581,
          column: 18
        }
      },
      "212": {
        start: {
          line: 587,
          column: 8
        },
        end: {
          line: 587,
          column: 57
        }
      },
      "213": {
        start: {
          line: 593,
          column: 8
        },
        end: {
          line: 593,
          column: 18
        }
      },
      "214": {
        start: {
          line: 599,
          column: 25
        },
        end: {
          line: 599,
          column: 109
        }
      },
      "215": {
        start: {
          line: 600,
          column: 8
        },
        end: {
          line: 605,
          column: 10
        }
      },
      "216": {
        start: {
          line: 611,
          column: 8
        },
        end: {
          line: 612,
          column: 29
        }
      },
      "217": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 612,
          column: 29
        }
      },
      "218": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 614,
          column: 29
        }
      },
      "219": {
        start: {
          line: 614,
          column: 12
        },
        end: {
          line: 614,
          column: 29
        }
      },
      "220": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 616,
          column: 25
        }
      },
      "221": {
        start: {
          line: 616,
          column: 12
        },
        end: {
          line: 616,
          column: 25
        }
      },
      "222": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 618,
          column: 26
        }
      },
      "223": {
        start: {
          line: 618,
          column: 12
        },
        end: {
          line: 618,
          column: 26
        }
      },
      "224": {
        start: {
          line: 619,
          column: 8
        },
        end: {
          line: 620,
          column: 28
        }
      },
      "225": {
        start: {
          line: 620,
          column: 12
        },
        end: {
          line: 620,
          column: 28
        }
      },
      "226": {
        start: {
          line: 621,
          column: 8
        },
        end: {
          line: 621,
          column: 18
        }
      },
      "227": {
        start: {
          line: 624,
          column: 0
        },
        end: {
          line: 624,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 29
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 38
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 50
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 55
          },
          end: {
            line: 50,
            column: 56
          }
        },
        loc: {
          start: {
            line: 50,
            column: 60
          },
          end: {
            line: 50,
            column: 85
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 37
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 119
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 121,
            column: 56
          },
          end: {
            line: 121,
            column: 57
          }
        },
        loc: {
          start: {
            line: 121,
            column: 61
          },
          end: {
            line: 121,
            column: 86
          }
        },
        line: 121
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 125,
            column: 36
          }
        },
        loc: {
          start: {
            line: 125,
            column: 40
          },
          end: {
            line: 125,
            column: 103
          }
        },
        line: 125
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 131,
            column: 36
          }
        },
        loc: {
          start: {
            line: 131,
            column: 40
          },
          end: {
            line: 131,
            column: 100
          }
        },
        line: 131
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 53
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 139
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 157,
            column: 64
          },
          end: {
            line: 157,
            column: 65
          }
        },
        loc: {
          start: {
            line: 157,
            column: 78
          },
          end: {
            line: 171,
            column: 25
          }
        },
        line: 157
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 175,
            column: 69
          },
          end: {
            line: 175,
            column: 70
          }
        },
        loc: {
          start: {
            line: 175,
            column: 83
          },
          end: {
            line: 187,
            column: 25
          }
        },
        line: 175
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 191,
            column: 72
          },
          end: {
            line: 191,
            column: 73
          }
        },
        loc: {
          start: {
            line: 191,
            column: 86
          },
          end: {
            line: 203,
            column: 25
          }
        },
        line: 191
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 204,
            column: 74
          },
          end: {
            line: 204,
            column: 75
          }
        },
        loc: {
          start: {
            line: 204,
            column: 93
          },
          end: {
            line: 215,
            column: 25
          }
        },
        line: 204
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 40
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 242
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 248,
            column: 47
          },
          end: {
            line: 248,
            column: 48
          }
        },
        loc: {
          start: {
            line: 248,
            column: 52
          },
          end: {
            line: 248,
            column: 58
          }
        },
        line: 248
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 249,
            column: 57
          },
          end: {
            line: 249,
            column: 58
          }
        },
        loc: {
          start: {
            line: 249,
            column: 62
          },
          end: {
            line: 249,
            column: 87
          }
        },
        line: 249
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 250,
            column: 60
          },
          end: {
            line: 250,
            column: 61
          }
        },
        loc: {
          start: {
            line: 250,
            column: 65
          },
          end: {
            line: 250,
            column: 93
          }
        },
        line: 250
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        loc: {
          start: {
            line: 266,
            column: 39
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 266
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 54
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 293
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 297,
            column: 56
          },
          end: {
            line: 297,
            column: 57
          }
        },
        loc: {
          start: {
            line: 297,
            column: 61
          },
          end: {
            line: 297,
            column: 86
          }
        },
        line: 297
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 298,
            column: 49
          },
          end: {
            line: 298,
            column: 50
          }
        },
        loc: {
          start: {
            line: 298,
            column: 58
          },
          end: {
            line: 298,
            column: 68
          }
        },
        line: 298
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        },
        loc: {
          start: {
            line: 321,
            column: 47
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 321
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 27
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 348
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 364,
            column: 5
          }
        },
        loc: {
          start: {
            line: 364,
            column: 32
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 364
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        loc: {
          start: {
            line: 384,
            column: 36
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 384
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 40
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 393
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 402,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        loc: {
          start: {
            line: 402,
            column: 43
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 402
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        loc: {
          start: {
            line: 411,
            column: 30
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 411
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 414,
            column: 38
          },
          end: {
            line: 414,
            column: 39
          }
        },
        loc: {
          start: {
            line: 414,
            column: 43
          },
          end: {
            line: 414,
            column: 62
          }
        },
        line: 414
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        },
        loc: {
          start: {
            line: 426,
            column: 30
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 426
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 430,
            column: 45
          },
          end: {
            line: 430,
            column: 46
          }
        },
        loc: {
          start: {
            line: 430,
            column: 50
          },
          end: {
            line: 432,
            column: 37
          }
        },
        line: 430
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 433,
            column: 48
          },
          end: {
            line: 433,
            column: 49
          }
        },
        loc: {
          start: {
            line: 433,
            column: 53
          },
          end: {
            line: 434,
            column: 40
          }
        },
        line: 433
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 435,
            column: 45
          },
          end: {
            line: 435,
            column: 46
          }
        },
        loc: {
          start: {
            line: 435,
            column: 50
          },
          end: {
            line: 437,
            column: 45
          }
        },
        line: 435
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 46
          },
          end: {
            line: 470,
            column: 5
          }
        },
        line: 449
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 452,
            column: 26
          },
          end: {
            line: 452,
            column: 27
          }
        },
        loc: {
          start: {
            line: 452,
            column: 35
          },
          end: {
            line: 469,
            column: 9
          }
        },
        line: 452
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        },
        loc: {
          start: {
            line: 474,
            column: 50
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 474
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 480,
            column: 41
          },
          end: {
            line: 480,
            column: 42
          }
        },
        loc: {
          start: {
            line: 480,
            column: 46
          },
          end: {
            line: 480,
            column: 71
          }
        },
        line: 480
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 481,
            column: 37
          },
          end: {
            line: 481,
            column: 38
          }
        },
        loc: {
          start: {
            line: 481,
            column: 42
          },
          end: {
            line: 481,
            column: 63
          }
        },
        line: 481
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 482,
            column: 39
          },
          end: {
            line: 482,
            column: 40
          }
        },
        loc: {
          start: {
            line: 482,
            column: 44
          },
          end: {
            line: 482,
            column: 67
          }
        },
        line: 482
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 483,
            column: 36
          },
          end: {
            line: 483,
            column: 37
          }
        },
        loc: {
          start: {
            line: 483,
            column: 41
          },
          end: {
            line: 483,
            column: 61
          }
        },
        line: 483
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        },
        loc: {
          start: {
            line: 497,
            column: 25
          },
          end: {
            line: 505,
            column: 5
          }
        },
        line: 497
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 509,
            column: 4
          },
          end: {
            line: 509,
            column: 5
          }
        },
        loc: {
          start: {
            line: 509,
            column: 27
          },
          end: {
            line: 512,
            column: 5
          }
        },
        line: 509
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 516,
            column: 5
          }
        },
        loc: {
          start: {
            line: 516,
            column: 41
          },
          end: {
            line: 520,
            column: 5
          }
        },
        line: 516
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 524,
            column: 5
          }
        },
        loc: {
          start: {
            line: 524,
            column: 45
          },
          end: {
            line: 526,
            column: 5
          }
        },
        line: 524
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 530,
            column: 4
          },
          end: {
            line: 530,
            column: 5
          }
        },
        loc: {
          start: {
            line: 530,
            column: 35
          },
          end: {
            line: 534,
            column: 5
          }
        },
        line: 530
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 533,
            column: 29
          },
          end: {
            line: 533,
            column: 30
          }
        },
        loc: {
          start: {
            line: 533,
            column: 34
          },
          end: {
            line: 533,
            column: 84
          }
        },
        line: 533
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 538,
            column: 4
          },
          end: {
            line: 538,
            column: 5
          }
        },
        loc: {
          start: {
            line: 538,
            column: 37
          },
          end: {
            line: 540,
            column: 5
          }
        },
        line: 538
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 544,
            column: 4
          },
          end: {
            line: 544,
            column: 5
          }
        },
        loc: {
          start: {
            line: 544,
            column: 30
          },
          end: {
            line: 546,
            column: 5
          }
        },
        line: 544
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 550,
            column: 4
          },
          end: {
            line: 550,
            column: 5
          }
        },
        loc: {
          start: {
            line: 550,
            column: 34
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 550
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 556,
            column: 4
          },
          end: {
            line: 556,
            column: 5
          }
        },
        loc: {
          start: {
            line: 556,
            column: 41
          },
          end: {
            line: 558,
            column: 5
          }
        },
        line: 556
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 562,
            column: 4
          },
          end: {
            line: 562,
            column: 5
          }
        },
        loc: {
          start: {
            line: 562,
            column: 35
          },
          end: {
            line: 564,
            column: 5
          }
        },
        line: 562
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 568,
            column: 4
          },
          end: {
            line: 568,
            column: 5
          }
        },
        loc: {
          start: {
            line: 568,
            column: 34
          },
          end: {
            line: 570,
            column: 5
          }
        },
        line: 568
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 574,
            column: 5
          }
        },
        loc: {
          start: {
            line: 574,
            column: 33
          },
          end: {
            line: 576,
            column: 5
          }
        },
        line: 574
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 580,
            column: 4
          },
          end: {
            line: 580,
            column: 5
          }
        },
        loc: {
          start: {
            line: 580,
            column: 36
          },
          end: {
            line: 582,
            column: 5
          }
        },
        line: 580
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 586,
            column: 4
          },
          end: {
            line: 586,
            column: 5
          }
        },
        loc: {
          start: {
            line: 586,
            column: 35
          },
          end: {
            line: 588,
            column: 5
          }
        },
        line: 586
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 592,
            column: 4
          },
          end: {
            line: 592,
            column: 5
          }
        },
        loc: {
          start: {
            line: 592,
            column: 34
          },
          end: {
            line: 594,
            column: 5
          }
        },
        line: 592
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 598,
            column: 4
          },
          end: {
            line: 598,
            column: 5
          }
        },
        loc: {
          start: {
            line: 598,
            column: 40
          },
          end: {
            line: 606,
            column: 5
          }
        },
        line: 598
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 610,
            column: 4
          },
          end: {
            line: 610,
            column: 5
          }
        },
        loc: {
          start: {
            line: 610,
            column: 29
          },
          end: {
            line: 622,
            column: 5
          }
        },
        line: 610
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 22
          },
          end: {
            line: 53,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 14
          },
          end: {
            line: 52,
            column: 99
          }
        }, {
          start: {
            line: 53,
            column: 14
          },
          end: {
            line: 53,
            column: 131
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 57,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 57,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 59,
            column: 114
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 59,
            column: 114
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 61,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 61,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 125,
            column: 40
          },
          end: {
            line: 125,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 40
          },
          end: {
            line: 125,
            column: 68
          }
        }, {
          start: {
            line: 125,
            column: 72
          },
          end: {
            line: 125,
            column: 103
          }
        }],
        line: 125
      },
      "10": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "11": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "12": {
        loc: {
          start: {
            line: 131,
            column: 40
          },
          end: {
            line: 131,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 40
          },
          end: {
            line: 131,
            column: 67
          }
        }, {
          start: {
            line: 131,
            column: 71
          },
          end: {
            line: 131,
            column: 100
          }
        }],
        line: 131
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 224,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 224,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "15": {
        loc: {
          start: {
            line: 153,
            column: 20
          },
          end: {
            line: 153,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 20
          },
          end: {
            line: 153,
            column: 43
          }
        }, {
          start: {
            line: 153,
            column: 47
          },
          end: {
            line: 153,
            column: 67
          }
        }],
        line: 153
      },
      "16": {
        loc: {
          start: {
            line: 222,
            column: 40
          },
          end: {
            line: 222,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 40
          },
          end: {
            line: 222,
            column: 80
          }
        }, {
          start: {
            line: 222,
            column: 84
          },
          end: {
            line: 222,
            column: 85
          }
        }],
        line: 222
      },
      "17": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "18": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "19": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "20": {
        loc: {
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 268,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 268,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "21": {
        loc: {
          start: {
            line: 283,
            column: 19
          },
          end: {
            line: 283,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 19
          },
          end: {
            line: 283,
            column: 35
          }
        }, {
          start: {
            line: 283,
            column: 39
          },
          end: {
            line: 283,
            column: 41
          }
        }],
        line: 283
      },
      "22": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 295,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 295,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "23": {
        loc: {
          start: {
            line: 311,
            column: 19
          },
          end: {
            line: 311,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 19
          },
          end: {
            line: 311,
            column: 35
          }
        }, {
          start: {
            line: 311,
            column: 39
          },
          end: {
            line: 311,
            column: 41
          }
        }],
        line: 311
      },
      "24": {
        loc: {
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 323,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 323,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "25": {
        loc: {
          start: {
            line: 338,
            column: 19
          },
          end: {
            line: 338,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 19
          },
          end: {
            line: 338,
            column: 35
          }
        }, {
          start: {
            line: 338,
            column: 39
          },
          end: {
            line: 338,
            column: 41
          }
        }],
        line: 338
      },
      "26": {
        loc: {
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 350,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 350,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "27": {
        loc: {
          start: {
            line: 349,
            column: 12
          },
          end: {
            line: 349,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 12
          },
          end: {
            line: 349,
            column: 39
          }
        }, {
          start: {
            line: 349,
            column: 43
          },
          end: {
            line: 349,
            column: 67
          }
        }],
        line: 349
      },
      "28": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 352,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 352,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "29": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 36
          }
        }, {
          start: {
            line: 351,
            column: 40
          },
          end: {
            line: 351,
            column: 64
          }
        }],
        line: 351
      },
      "30": {
        loc: {
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 354,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 354,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "31": {
        loc: {
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 353,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 353,
            column: 39
          }
        }, {
          start: {
            line: 353,
            column: 43
          },
          end: {
            line: 353,
            column: 71
          }
        }],
        line: 353
      },
      "32": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 356,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 356,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "33": {
        loc: {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 355,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 355,
            column: 39
          }
        }, {
          start: {
            line: 355,
            column: 43
          },
          end: {
            line: 355,
            column: 68
          }
        }],
        line: 355
      },
      "34": {
        loc: {
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 358,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 358,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "35": {
        loc: {
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 357,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 357,
            column: 41
          }
        }, {
          start: {
            line: 357,
            column: 45
          },
          end: {
            line: 357,
            column: 67
          }
        }],
        line: 357
      },
      "36": {
        loc: {
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 366,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 366,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "37": {
        loc: {
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 365,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 365,
            column: 40
          }
        }, {
          start: {
            line: 365,
            column: 44
          },
          end: {
            line: 365,
            column: 71
          }
        }],
        line: 365
      },
      "38": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 368,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 368,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "39": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 367,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 367,
            column: 38
          }
        }, {
          start: {
            line: 367,
            column: 42
          },
          end: {
            line: 367,
            column: 68
          }
        }],
        line: 367
      },
      "40": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 370,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 370,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "41": {
        loc: {
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 369,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 369,
            column: 41
          }
        }, {
          start: {
            line: 369,
            column: 45
          },
          end: {
            line: 369,
            column: 74
          }
        }],
        line: 369
      },
      "42": {
        loc: {
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 372,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 372,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "43": {
        loc: {
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 371,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 371,
            column: 39
          }
        }, {
          start: {
            line: 371,
            column: 43
          },
          end: {
            line: 371,
            column: 70
          }
        }],
        line: 371
      },
      "44": {
        loc: {
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 374,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 374,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      },
      "45": {
        loc: {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 42
          }
        }, {
          start: {
            line: 373,
            column: 46
          },
          end: {
            line: 373,
            column: 68
          }
        }],
        line: 373
      },
      "46": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 376,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 376,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "47": {
        loc: {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 375,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 375,
            column: 37
          }
        }, {
          start: {
            line: 375,
            column: 41
          },
          end: {
            line: 375,
            column: 66
          }
        }],
        line: 375
      },
      "48": {
        loc: {
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 378,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 378,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "49": {
        loc: {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 377,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 377,
            column: 37
          }
        }, {
          start: {
            line: 377,
            column: 41
          },
          end: {
            line: 377,
            column: 66
          }
        }],
        line: 377
      },
      "50": {
        loc: {
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 413,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 413,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "51": {
        loc: {
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 412,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 412,
            column: 19
          }
        }, {
          start: {
            line: 412,
            column: 23
          },
          end: {
            line: 412,
            column: 42
          }
        }],
        line: 412
      },
      "52": {
        loc: {
          start: {
            line: 414,
            column: 43
          },
          end: {
            line: 414,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 43
          },
          end: {
            line: 414,
            column: 53
          }
        }, {
          start: {
            line: 414,
            column: 57
          },
          end: {
            line: 414,
            column: 62
          }
        }],
        line: 414
      },
      "53": {
        loc: {
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 416,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 416,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "54": {
        loc: {
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 418,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 418,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "55": {
        loc: {
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 420,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 420,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "56": {
        loc: {
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 429,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 429,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "57": {
        loc: {
          start: {
            line: 430,
            column: 50
          },
          end: {
            line: 432,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 50
          },
          end: {
            line: 430,
            column: 71
          }
        }, {
          start: {
            line: 431,
            column: 12
          },
          end: {
            line: 431,
            column: 38
          }
        }, {
          start: {
            line: 432,
            column: 12
          },
          end: {
            line: 432,
            column: 37
          }
        }],
        line: 430
      },
      "58": {
        loc: {
          start: {
            line: 433,
            column: 53
          },
          end: {
            line: 434,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 53
          },
          end: {
            line: 433,
            column: 77
          }
        }, {
          start: {
            line: 434,
            column: 12
          },
          end: {
            line: 434,
            column: 40
          }
        }],
        line: 433
      },
      "59": {
        loc: {
          start: {
            line: 435,
            column: 50
          },
          end: {
            line: 437,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 435,
            column: 50
          },
          end: {
            line: 435,
            column: 65
          }
        }, {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 436,
            column: 33
          }
        }, {
          start: {
            line: 437,
            column: 12
          },
          end: {
            line: 437,
            column: 45
          }
        }],
        line: 435
      },
      "60": {
        loc: {
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 439,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 439,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "61": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 441,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 441,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "62": {
        loc: {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 443,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 443,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "63": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 451,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 451,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "64": {
        loc: {
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 450,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 450,
            column: 19
          }
        }, {
          start: {
            line: 450,
            column: 23
          },
          end: {
            line: 450,
            column: 42
          }
        }],
        line: 450
      },
      "65": {
        loc: {
          start: {
            line: 454,
            column: 23
          },
          end: {
            line: 454,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 454,
            column: 23
          },
          end: {
            line: 454,
            column: 33
          }
        }, {
          start: {
            line: 454,
            column: 37
          },
          end: {
            line: 454,
            column: 46
          }
        }],
        line: 454
      },
      "66": {
        loc: {
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 463,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 463,
            column: 13
          }
        }, {
          start: {
            line: 458,
            column: 17
          },
          end: {
            line: 463,
            column: 13
          }
        }],
        line: 455
      },
      "67": {
        loc: {
          start: {
            line: 456,
            column: 49
          },
          end: {
            line: 456,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 456,
            column: 49
          },
          end: {
            line: 456,
            column: 62
          }
        }, {
          start: {
            line: 456,
            column: 66
          },
          end: {
            line: 456,
            column: 99
          }
        }],
        line: 456
      },
      "68": {
        loc: {
          start: {
            line: 458,
            column: 17
          },
          end: {
            line: 463,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 17
          },
          end: {
            line: 463,
            column: 13
          }
        }, {
          start: {
            line: 461,
            column: 17
          },
          end: {
            line: 463,
            column: 13
          }
        }],
        line: 458
      },
      "69": {
        loc: {
          start: {
            line: 459,
            column: 51
          },
          end: {
            line: 459,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 459,
            column: 51
          },
          end: {
            line: 459,
            column: 64
          }
        }, {
          start: {
            line: 459,
            column: 68
          },
          end: {
            line: 459,
            column: 96
          }
        }],
        line: 459
      },
      "70": {
        loc: {
          start: {
            line: 462,
            column: 44
          },
          end: {
            line: 462,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 462,
            column: 44
          },
          end: {
            line: 462,
            column: 57
          }
        }, {
          start: {
            line: 462,
            column: 61
          },
          end: {
            line: 462,
            column: 78
          }
        }, {
          start: {
            line: 462,
            column: 82
          },
          end: {
            line: 462,
            column: 98
          }
        }],
        line: 462
      },
      "71": {
        loc: {
          start: {
            line: 467,
            column: 26
          },
          end: {
            line: 467,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 467,
            column: 26
          },
          end: {
            line: 467,
            column: 40
          }
        }, {
          start: {
            line: 467,
            column: 44
          },
          end: {
            line: 467,
            column: 52
          }
        }],
        line: 467
      },
      "72": {
        loc: {
          start: {
            line: 474,
            column: 35
          },
          end: {
            line: 474,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 474,
            column: 46
          },
          end: {
            line: 474,
            column: 48
          }
        }],
        line: 474
      },
      "73": {
        loc: {
          start: {
            line: 479,
            column: 29
          },
          end: {
            line: 479,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 479,
            column: 29
          },
          end: {
            line: 479,
            column: 43
          }
        }, {
          start: {
            line: 479,
            column: 47
          },
          end: {
            line: 479,
            column: 48
          }
        }],
        line: 479
      },
      "74": {
        loc: {
          start: {
            line: 480,
            column: 26
          },
          end: {
            line: 480,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 480,
            column: 26
          },
          end: {
            line: 480,
            column: 79
          }
        }, {
          start: {
            line: 480,
            column: 83
          },
          end: {
            line: 480,
            column: 84
          }
        }],
        line: 480
      },
      "75": {
        loc: {
          start: {
            line: 481,
            column: 22
          },
          end: {
            line: 481,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 481,
            column: 22
          },
          end: {
            line: 481,
            column: 71
          }
        }, {
          start: {
            line: 481,
            column: 75
          },
          end: {
            line: 481,
            column: 76
          }
        }],
        line: 481
      },
      "76": {
        loc: {
          start: {
            line: 482,
            column: 24
          },
          end: {
            line: 482,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 482,
            column: 24
          },
          end: {
            line: 482,
            column: 75
          }
        }, {
          start: {
            line: 482,
            column: 79
          },
          end: {
            line: 482,
            column: 80
          }
        }],
        line: 482
      },
      "77": {
        loc: {
          start: {
            line: 483,
            column: 21
          },
          end: {
            line: 483,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 483,
            column: 21
          },
          end: {
            line: 483,
            column: 69
          }
        }, {
          start: {
            line: 483,
            column: 73
          },
          end: {
            line: 483,
            column: 74
          }
        }],
        line: 483
      },
      "78": {
        loc: {
          start: {
            line: 485,
            column: 20
          },
          end: {
            line: 485,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 485,
            column: 20
          },
          end: {
            line: 485,
            column: 26
          }
        }, {
          start: {
            line: 485,
            column: 30
          },
          end: {
            line: 485,
            column: 32
          }
        }],
        line: 485
      },
      "79": {
        loc: {
          start: {
            line: 486,
            column: 68
          },
          end: {
            line: 486,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 486,
            column: 68
          },
          end: {
            line: 486,
            column: 74
          }
        }, {
          start: {
            line: 486,
            column: 78
          },
          end: {
            line: 486,
            column: 80
          }
        }],
        line: 486
      },
      "80": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 499,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 499,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "81": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 501,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 501,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "82": {
        loc: {
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 503,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 503,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "83": {
        loc: {
          start: {
            line: 511,
            column: 15
          },
          end: {
            line: 511,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 511,
            column: 23
          },
          end: {
            line: 511,
            column: 31
          }
        }, {
          start: {
            line: 511,
            column: 34
          },
          end: {
            line: 511,
            column: 36
          }
        }],
        line: 511
      },
      "84": {
        loc: {
          start: {
            line: 518,
            column: 13
          },
          end: {
            line: 518,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 13
          },
          end: {
            line: 518,
            column: 29
          }
        }, {
          start: {
            line: 518,
            column: 33
          },
          end: {
            line: 518,
            column: 42
          }
        }],
        line: 518
      },
      "85": {
        loc: {
          start: {
            line: 518,
            column: 45
          },
          end: {
            line: 518,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 45
          },
          end: {
            line: 518,
            column: 60
          }
        }, {
          start: {
            line: 518,
            column: 64
          },
          end: {
            line: 518,
            column: 66
          }
        }],
        line: 518
      },
      "86": {
        loc: {
          start: {
            line: 531,
            column: 8
          },
          end: {
            line: 532,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 531,
            column: 8
          },
          end: {
            line: 532,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 531
      },
      "87": {
        loc: {
          start: {
            line: 533,
            column: 34
          },
          end: {
            line: 533,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 533,
            column: 34
          },
          end: {
            line: 533,
            column: 59
          }
        }, {
          start: {
            line: 533,
            column: 63
          },
          end: {
            line: 533,
            column: 84
          }
        }],
        line: 533
      },
      "88": {
        loc: {
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 612,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 612,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 611
      },
      "89": {
        loc: {
          start: {
            line: 613,
            column: 8
          },
          end: {
            line: 614,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 613,
            column: 8
          },
          end: {
            line: 614,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 613
      },
      "90": {
        loc: {
          start: {
            line: 615,
            column: 8
          },
          end: {
            line: 616,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 615,
            column: 8
          },
          end: {
            line: 616,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 615
      },
      "91": {
        loc: {
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 618,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 618,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 617
      },
      "92": {
        loc: {
          start: {
            line: 619,
            column: 8
          },
          end: {
            line: 620,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 619,
            column: 8
          },
          end: {
            line: 620,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 619
      },
      "93": {
        loc: {
          start: {
            line: 619,
            column: 12
          },
          end: {
            line: 619,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 619,
            column: 12
          },
          end: {
            line: 619,
            column: 38
          }
        }, {
          start: {
            line: 619,
            column: 42
          },
          end: {
            line: 619,
            column: 69
          }
        }],
        line: 619
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0, 0],
      "58": [0, 0],
      "59": [0, 0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0, 0],
      "71": [0, 0],
      "72": [0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/enhanced-marcus.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/enhanced-marcus.ts"],
      sourcesContent: ["import { RAGEnabledAgent, RAGConfig, AgentRAGContext } from './rag-enabled-agent';\nimport { AgentResponse, AgentActivationContext } from './base-agent';\nimport { PatternAnalyzer, AnalysisResult } from '../intelligence/pattern-analyzer';\nimport { PromptGenerator } from '../intelligence/prompt-generator';\nimport { EnhancedVectorMemoryStore } from '../rag/enhanced-vector-memory-store';\n\nexport class EnhancedMarcus extends RAGEnabledAgent {\n  name = 'EnhancedMarcus';\n  id = 'enhanced-marcus';\n  specialization = 'Advanced Backend Specialist & Integration Validator';\n  systemPrompt = 'Backend architect and security expert specializing in Node.js, microservices, secure API design, and database optimization';\n\n  constructor(vectorStore?: EnhancedVectorMemoryStore) {\n    super(vectorStore);\n  }\n\n  /**\n   * Override activate to provide backend-specific context\n   */\n  async activate(context: AgentActivationContext): Promise<AgentResponse> {\n    const response = await super.activate(context);\n\n    // Replace analysisScore with backendHealth\n    if (response.context) {\n      const { analysisScore, ...rest } = response.context;\n      response.context = {\n        ...rest,\n        backendHealth: analysisScore\n      };\n    }\n\n    return response;\n  }\n\n  /**\n   * Backend-specific RAG configuration\n   */\n  protected getDefaultRAGConfig(): RAGConfig {\n    return {\n      maxExamples: 3,\n      similarityThreshold: 0.8,\n      agentDomain: 'backend',\n      enableLearning: true\n    };\n  }\n\n  /**\n   * Run backend-specific pattern analysis\n   */\n  protected async runPatternAnalysis(context: AgentActivationContext): Promise<AnalysisResult> {\n    return PatternAnalyzer.analyzeBackend(context.content, context.filePath);\n  }\n\n  /**\n   * Override message generation to include agent name\n   */\n  protected generateEnhancedMessage(analysis: AnalysisResult, ragContext?: any): string {\n    const criticalCount = analysis.patterns.filter(p => p.severity === 'critical').length;\n\n    let message = criticalCount > 0\n      ? `Enhanced Marcus - Critical Issues Detected: ${criticalCount} critical issues found.`\n      : `Enhanced Marcus - Backend Analysis Complete: Score ${analysis.score}/100. ${analysis.patterns.length} issues found.`;\n\n    if (ragContext) {\n      const ragInsights = [];\n      if (ragContext.similarCode.length > 0) ragInsights.push(`${ragContext.similarCode.length} similar patterns`);\n      if (Object.keys(ragContext.previousSolutions).length > 0) ragInsights.push(`solutions for ${Object.keys(ragContext.previousSolutions).length} issue types`);\n      if (ragContext.projectStandards.length > 0) ragInsights.push(`${ragContext.projectStandards.length} project standards`);\n\n      if (ragInsights.length > 0) {\n        message += ` RAG-Enhanced: ${ragInsights.join(', ')}.`;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * Generate backend-specific base prompt template\n   */\n  protected getBasePromptTemplate(): string {\n    return `---\nname: enhanced-marcus-backend-rag\ndescription: RAG-Enhanced Backend Analysis\nmodel: sonnet\nagent: Enhanced Marcus\n---\n\nYou are **Enhanced Marcus**, a backend architect and security expert with 10+ years of experience in Node.js, microservices, secure API design, and database optimization.\n\n## Your Core Mission\nProvide comprehensive backend analysis with historical architecture patterns and proven security solutions.\n\n## Backend Focus Areas:\n1. **API Architecture**\n   - Analyze API design patterns and RESTful principles\n   - Evaluate microservices architecture decisions\n   - Review API documentation and contract adherence\n\n2. **Security Analysis**\n   - Identify OWASP Top 10 vulnerabilities\n   - Review authentication and authorization patterns\n   - Validate input sanitization and validation\n\n3. **Database Optimization**\n   - Analyze query performance and indexing strategies\n   - Review data modeling and relationships\n   - Suggest optimization based on proven patterns\n\n4. **Performance & Scalability**\n   - Identify bottlenecks and optimization opportunities\n   - Evaluate caching strategies and implementation\n   - Review concurrent processing and async patterns\n\n5. **Infrastructure & DevOps**\n   - Analyze deployment patterns and configuration\n   - Review monitoring and logging implementation\n   - Validate error handling and recovery strategies\n\n6. **Code Quality & Patterns**\n   - Apply SOLID principles and design patterns\n   - Review dependency injection and modularity\n   - Ensure maintainable and testable code structure\n`;\n  }\n\n  /**\n   * Generate backend-specific handoffs based on analysis\n   */\n  protected generateDomainHandoffs(analysis: AnalysisResult): string[] {\n    const handoffs: string[] = [];\n\n    const securityIssues = analysis.patterns.filter(p => p.category === 'security');\n    if (securityIssues.length > 0) {\n      handoffs.push('security-sam');\n    }\n    if (analysis.patterns.some(p => p.category === 'performance' || p.type.includes('optimization'))) {\n      handoffs.push('devops-dan');\n    }\n    if (analysis.score < 70) {\n      handoffs.push('enhanced-maria');\n    }\n    if (analysis.patterns.some(p => p.type.includes('frontend') || p.type.includes('api-client'))) {\n      handoffs.push('enhanced-james');\n    }\n\n    return handoffs;\n  }\n\n  /**\n   * Enhanced backend analysis with RAG context specialization using Edge Functions\n   */\n  protected async retrieveRelevantContext(\n    context: AgentActivationContext,\n    analysis: AnalysisResult\n  ): Promise<AgentRAGContext> {\n    const ragContext = await super.retrieveRelevantContext(context, analysis);\n\n    // Backend-specific enhancements using production Edge Functions\n    if (this.vectorStore) {\n      try {\n        // Use Marcus RAG Edge Function for production-ready Backend intelligence\n        const marcusRAGResult = await this.vectorStore.marcusRAG(\n          this.generateRAGQuery(context, analysis),\n          {\n            filePath: context.filePath,\n            content: context.content,\n            language: this.detectLanguage(context.filePath),\n            framework: this.detectFramework(context.content),\n            apiType: this.detectAPIType(context.content),\n            dbType: this.detectDatabaseType(context.content)\n          },\n          this.ragConfig\n        );\n\n        if (marcusRAGResult.success && marcusRAGResult.data) {\n          // Integrate Edge Function results with existing RAG context\n          ragContext.similarCode = [\n            ...ragContext.similarCode,\n            ...marcusRAGResult.data.apiPatterns.map((pattern: any) => ({\n              id: pattern.id,\n              content: pattern.code_content,\n              contentType: 'code',\n              metadata: {\n                ...pattern.metadata,\n                relevanceScore: pattern.similarity,\n                agentId: this.id,\n                timestamp: Date.now(),\n                pattern_type: pattern.pattern_type,\n                language: pattern.language,\n                framework: pattern.framework,\n                quality_score: pattern.quality_score\n              }\n            }))\n          ];\n\n          ragContext.projectStandards = [\n            ...ragContext.projectStandards,\n            ...marcusRAGResult.data.securityPatterns.map((pattern: any) => ({\n              id: pattern.id,\n              content: pattern.solution_code,\n              contentType: 'code',\n              metadata: {\n                agentId: this.id,\n                timestamp: Date.now(),\n                relevanceScore: pattern.similarity,\n                problem_type: pattern.problem_type,\n                solution_explanation: pattern.solution_explanation,\n                effectiveness_score: pattern.effectiveness_score\n              }\n            }))\n          ];\n\n          ragContext.agentExpertise = [\n            ...ragContext.agentExpertise,\n            ...marcusRAGResult.data.performancePatterns.map((pattern: any) => ({\n              id: pattern.id,\n              content: pattern.knowledge_item,\n              contentType: 'text',\n              metadata: {\n                agentId: this.id,\n                timestamp: Date.now(),\n                relevanceScore: pattern.similarity,\n                knowledge_type: pattern.knowledge_type,\n                confidence_score: pattern.confidence_score,\n                expertise_domain: pattern.expertise_domain\n              }\n            })),\n            ...marcusRAGResult.data.databaseOptimizations.map((optimization: any) => ({\n              id: optimization.id,\n              content: optimization.solution_code,\n              contentType: 'code',\n              metadata: {\n                agentId: this.id,\n                timestamp: Date.now(),\n                relevanceScore: optimization.similarity,\n                solution_explanation: optimization.solution_explanation,\n                effectiveness_score: optimization.effectiveness_score\n              }\n            }))\n          ];\n\n          // Store RAG insights for prompt generation\n          ragContext.metadata = {\n            ...ragContext.metadata,\n            marcusRAGInsights: marcusRAGResult.data.ragInsights,\n            edgeFunctionUsed: true,\n            processingTime: marcusRAGResult.metadata?.processingTime || 0\n          };\n        }\n      } catch (error) {\n        console.warn('Marcus RAG Edge Function failed, using fallback:', error.message);\n        // Fallback to original local methods\n        const apiPatterns = await this.retrieveAPIPatterns(context);\n        ragContext.similarCode = [...ragContext.similarCode, ...apiPatterns];\n\n        const securityPatterns = await this.retrieveSecurityPatterns(context, analysis);\n        ragContext.projectStandards = [...ragContext.projectStandards, ...securityPatterns];\n\n        const performancePatterns = await this.retrievePerformancePatterns(context);\n        ragContext.agentExpertise = [...ragContext.agentExpertise, ...performancePatterns];\n      }\n    }\n\n    return ragContext;\n  }\n\n  /**\n   * Generate optimized RAG query for Marcus's Backend domain\n   */\n  private generateRAGQuery(context: AgentActivationContext, analysis: AnalysisResult): string {\n    const framework = this.detectFramework(context.content);\n    const apiType = this.detectAPIType(context.content);\n    const dbType = this.detectDatabaseType(context.content);\n    const language = this.detectLanguage(context.filePath);\n\n    // Generate context-aware query for Backend patterns\n    const patterns = analysis.patterns.map(p => p.type).join(' ');\n    const hasSecurityIssues = analysis.patterns.some(p => p.category === 'security');\n    const hasPerformanceIssues = analysis.patterns.some(p => p.category === 'performance');\n\n    let queryTerms = [framework, apiType, dbType, language];\n\n    if (hasSecurityIssues) {\n      queryTerms.push('security authentication authorization validation');\n    }\n    if (hasPerformanceIssues) {\n      queryTerms.push('performance optimization caching database queries');\n    }\n    if (patterns) {\n      queryTerms.push(patterns);\n    }\n\n    return queryTerms.join(' ').trim();\n  }\n\n  /**\n   * Retrieve backend API patterns and architecture examples\n   */\n  private async retrieveAPIPatterns(context: AgentActivationContext) {\n    if (!this.vectorStore) return [];\n\n    const apiType = this.detectAPIType(context.content);\n    const framework = this.detectFramework(context.content);\n\n    const query = {\n      query: `${framework} ${apiType} API patterns backend architecture ${this.detectLanguage(context.filePath)}`,\n      queryType: 'semantic' as const,\n      agentId: this.id,\n      topK: 2,\n      filters: {\n        tags: ['api', 'backend', framework.toLowerCase(), apiType, 'pattern'],\n        contentTypes: ['code']\n      }\n    };\n\n    try {\n      const result = await this.vectorStore.queryMemories(query);\n      return result.documents || [];\n    } catch (error) {\n      console.warn('Failed to retrieve API patterns:', error.message);\n      return [];\n    }\n  }\n\n  /**\n   * Retrieve security patterns and implementations\n   */\n  private async retrieveSecurityPatterns(context: AgentActivationContext, analysis: AnalysisResult) {\n    if (!this.vectorStore) return [];\n\n    // Focus on security issues found in the analysis\n    const securityIssues = analysis.patterns.filter(p => p.category === 'security');\n    const securityTypes = securityIssues.map(issue => issue.type).join(' ');\n\n    const query = {\n      query: `security best practices ${securityTypes} authentication authorization validation`,\n      queryType: 'semantic' as const,\n      agentId: this.id,\n      topK: 3,\n      filters: {\n        tags: ['security', 'authentication', 'authorization', 'validation', 'best-practice'],\n        contentTypes: ['text', 'code']\n      }\n    };\n\n    try {\n      const result = await this.vectorStore.queryMemories(query);\n      return result.documents || [];\n    } catch (error) {\n      console.warn('Failed to retrieve security patterns:', error.message);\n      return [];\n    }\n  }\n\n  /**\n   * Retrieve performance optimization patterns\n   */\n  private async retrievePerformancePatterns(context: AgentActivationContext) {\n    if (!this.vectorStore) return [];\n\n    const framework = this.detectFramework(context.content);\n    const dbType = this.detectDatabaseType(context.content);\n\n    const query = {\n      query: `${framework} ${dbType} performance optimization caching database queries`,\n      queryType: 'semantic' as const,\n      agentId: this.id,\n      topK: 2,\n      filters: {\n        tags: ['performance', 'optimization', 'caching', 'database'],\n        contentTypes: ['code', 'text']\n      }\n    };\n\n    try {\n      const result = await this.vectorStore.queryMemories(query);\n      return result.documents || [];\n    } catch (error) {\n      console.warn('Failed to retrieve performance patterns:', error.message);\n      return [];\n    }\n  }\n\n  /**\n   * Detect API type for better RAG retrieval\n   */\n  private detectAPIType(content: string): string {\n    if (content.includes('GraphQL') || content.includes('gql`')) return 'graphql';\n    if (content.includes('tRPC') || content.includes('trpc')) return 'trpc';\n    if (content.includes('app.get') || content.includes('app.post')) return 'rest';\n    if (content.includes('router.') || content.includes('route')) return 'rest';\n    if (content.includes('websocket') || content.includes('ws')) return 'websocket';\n    return 'api';\n  }\n\n  /**\n   * Detect database type for optimization patterns\n   */\n  private detectDatabaseType(content: string): string {\n    if (content.includes('mongoose') || content.includes('MongoDB')) return 'mongodb';\n    if (content.includes('prisma') || content.includes('Prisma')) return 'prisma';\n    if (content.includes('sequelize') || content.includes('Sequelize')) return 'sequelize';\n    if (content.includes('typeorm') || content.includes('TypeORM')) return 'typeorm';\n    if (content.includes('postgresql') || content.includes('pg')) return 'postgresql';\n    if (content.includes('mysql') || content.includes('MySQL')) return 'mysql';\n    if (content.includes('redis') || content.includes('Redis')) return 'redis';\n    return 'database';\n  }\n\n\n  /**\n   * Validate API integration\n   */\n  validateAPIIntegration(context: any): { score: number; issues: any[] } {\n    return {\n      score: 90,\n      issues: []\n    };\n  }\n\n  /**\n   * Validate service consistency\n   */\n  validateServiceConsistency(context: any): { score: number; issues: any[] } {\n    return {\n      score: 95,\n      issues: []\n    };\n  }\n\n  /**\n   * Check configuration consistency\n   */\n  checkConfigurationConsistency(context: any): { score: number; issues: any[] } {\n    return {\n      score: 90,\n      issues: []\n    };\n  }\n\n  /**\n   * Calculate priority based on issues\n   */\n  calculatePriority(issues: any[]): string {\n    if (!issues || issues.length === 0) return 'low';\n    const severities = issues.map(i => i.severity || 'low');\n    if (severities.includes('critical')) return 'critical';\n    if (severities.includes('high')) return 'high';\n    if (severities.includes('medium')) return 'medium';\n    return 'low';\n  }\n\n  /**\n   * Determine agent handoffs based on issues\n   */\n  determineHandoffs(issues: any[]): string[] {\n    const handoffs: string[] = [];\n    if (!issues) return handoffs;\n\n    const hasSecurityIssue = issues.some(i =>\n      i.type === 'security' ||\n      i.type === 'security-risk' ||\n      i.category === 'security'\n    );\n    const hasPerformanceIssue = issues.some(i =>\n      i.type === 'performance' ||\n      i.category === 'performance'\n    );\n    const hasFrontendIssue = issues.some(i =>\n      i.type === 'ui' ||\n      i.type === 'frontend' ||\n      i.type === 'frontend-integration'\n    );\n\n    if (hasSecurityIssue) handoffs.push('security-sam');\n    if (hasPerformanceIssue) handoffs.push('devops-dan');\n    if (hasFrontendIssue) handoffs.push('enhanced-james');\n\n    return handoffs;\n  }\n\n  /**\n   * Generate actionable recommendations from issues\n   */\n  generateActionableRecommendations(issues: any[]): Array<{ type: string; message: string; priority: string }> {\n    if (!issues || issues.length === 0) return [];\n\n    return issues.map(issue => {\n      let message = '';\n      let type = issue.type || 'general';\n\n      if (issue.type === 'security') {\n        message = `Fix security issue: ${issue.message || 'Security vulnerability detected'}`;\n      } else if (issue.type === 'performance') {\n        message = `Optimize performance: ${issue.message || 'Performance issue detected'}`;\n      } else {\n        message = `Address issue: ${issue.message || issue.description || 'Issue detected'}`;\n      }\n\n      return {\n        type,\n        message,\n        priority: issue.severity || 'medium'\n      };\n    });\n  }\n\n  /**\n   * Generate enhanced report with metadata\n   */\n  generateEnhancedReport(issues: any[], metadata: any = {}): string {\n    const report = {\n      agent: 'Enhanced Marcus',\n      analysisType: 'Backend Analysis',\n      summary: {\n        totalIssues: issues?.length || 0,\n        critical: issues?.filter(i => i.severity === 'critical').length || 0,\n        high: issues?.filter(i => i.severity === 'high').length || 0,\n        medium: issues?.filter(i => i.severity === 'medium').length || 0,\n        low: issues?.filter(i => i.severity === 'low').length || 0\n      },\n      issues: issues || [],\n      recommendations: this.generateActionableRecommendations(issues || []),\n      metadata: {\n        timestamp: Date.now(),\n        ...metadata\n      }\n    };\n\n    return `Enhanced Marcus - Backend Analysis\\n\\n${JSON.stringify(report, null, 2)}`;\n  }\n\n  /**\n   * Get emoji representation of score\n   */\n  getScoreEmoji(score: number): string {\n    if (score >= 90) return '\uD83D\uDFE2';\n    if (score >= 75) return '\uD83D\uDFE1';\n    if (score >= 60) return '\uD83D\uDFE0';\n    return '\uD83D\uDD34';\n  }\n\n  /**\n   * Extract agent name from text\n   */\n  extractAgentName(text: string): string {\n    const match = text.match(/@(\\w+)/);\n    return match ? match[1] : '';\n  }\n\n  /**\n   * Analyze cross-file consistency\n   */\n  protected analyzeCrossFileConsistency(context: AgentActivationContext): Record<string, string> {\n    return {\n      [context.filePath || 'unknown']: context.content || ''\n    };\n  }\n\n  /**\n   * Check for configuration inconsistencies\n   */\n  hasConfigurationInconsistencies(context: any): boolean {\n    return false;\n  }\n\n\n  /**\n   * Identify critical issues from issue list\n   */\n  identifyCriticalIssues(issues: any[]): any[] {\n    if (!issues) return [];\n    return issues.filter(i => i.severity === 'critical' || i.severity === 'high');\n  }\n\n  /**\n   * Validate database queries\n   */\n  validateDatabaseQueries(context: any): any[] {\n    return [];\n  }\n\n  /**\n   * Check API security\n   */\n  checkAPISecurity(context: any): any[] {\n    return [];\n  }\n\n  /**\n   * Analyze cache strategy\n   */\n  analyzeCacheStrategy(context: any): any {\n    return { strategy: 'none', recommendations: [] };\n  }\n\n  /**\n   * Check authentication patterns\n   */\n  checkAuthenticationPatterns(context: any): any[] {\n    return [];\n  }\n\n  /**\n   * Validate error handling\n   */\n  validateErrorHandling(context: any): any[] {\n    return [];\n  }\n\n  /**\n   * Check input validation\n   */\n  checkInputValidation(context: any): any[] {\n    return [];\n  }\n\n  /**\n   * Analyze rate limiting\n   */\n  analyzeRateLimiting(context: any): any {\n    return { implemented: false, recommendations: [] };\n  }\n\n  /**\n   * Check CORS configuration\n   */\n  checkCORSConfiguration(context: any): any[] {\n    return [];\n  }\n\n  /**\n   * Validate API versioning\n   */\n  validateAPIVersioning(context: any): any {\n    return { versioned: false, recommendations: [] };\n  }\n\n  /**\n   * Check database indexes\n   */\n  checkDatabaseIndexes(context: any): any[] {\n    return [];\n  }\n\n  /**\n   * Run backend-specific validation using PatternAnalyzer\n   */\n  async runBackendValidation(context: any): Promise<any> {\n    const analysis = PatternAnalyzer.analyzeBackend(context.content, context.filePath);\n    return {\n      score: analysis.score,\n      issues: analysis.patterns,\n      warnings: [],\n      recommendations: []\n    };\n  }\n\n  /**\n   * Detect framework from content\n   */\n  protected detectFramework(content: string): string {\n    if (content.includes('fastify')) return 'fastify';\n    if (content.includes('express')) return 'express';\n    if (content.includes('koa')) return 'koa';\n    if (content.includes('hapi')) return 'hapi';\n    if (content.includes('nestjs') || content.includes('@nestjs')) return 'nestjs';\n    return '';\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f41dcc17b18869eca54b4861599e200c68b5dd11"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rmdadc8yo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rmdadc8yo();
cov_2rmdadc8yo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2rmdadc8yo().s[1]++;
exports.EnhancedMarcus = void 0;
const rag_enabled_agent_1 =
/* istanbul ignore next */
(cov_2rmdadc8yo().s[2]++, require("./rag-enabled-agent"));
const pattern_analyzer_1 =
/* istanbul ignore next */
(cov_2rmdadc8yo().s[3]++, require("../intelligence/pattern-analyzer"));
class EnhancedMarcus extends
/* istanbul ignore next */
(rag_enabled_agent_1.RAGEnabledAgent) {
  constructor(vectorStore) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[0]++;
    cov_2rmdadc8yo().s[4]++;
    super(vectorStore);
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[5]++;
    this.name = 'EnhancedMarcus';
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[6]++;
    this.id = 'enhanced-marcus';
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[7]++;
    this.specialization = 'Advanced Backend Specialist & Integration Validator';
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[8]++;
    this.systemPrompt = 'Backend architect and security expert specializing in Node.js, microservices, secure API design, and database optimization';
  }
  /**
   * Override activate to provide backend-specific context
   */
  async activate(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[1]++;
    const response =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[9]++, await super.activate(context));
    // Replace analysisScore with backendHealth
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[10]++;
    if (response.context) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[0][0]++;
      const {
        analysisScore,
        ...rest
      } =
      /* istanbul ignore next */
      (cov_2rmdadc8yo().s[11]++, response.context);
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[12]++;
      response.context = {
        ...rest,
        backendHealth: analysisScore
      };
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[0][1]++;
    }
    cov_2rmdadc8yo().s[13]++;
    return response;
  }
  /**
   * Backend-specific RAG configuration
   */
  getDefaultRAGConfig() {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[2]++;
    cov_2rmdadc8yo().s[14]++;
    return {
      maxExamples: 3,
      similarityThreshold: 0.8,
      agentDomain: 'backend',
      enableLearning: true
    };
  }
  /**
   * Run backend-specific pattern analysis
   */
  async runPatternAnalysis(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[3]++;
    cov_2rmdadc8yo().s[15]++;
    return pattern_analyzer_1.PatternAnalyzer.analyzeBackend(context.content, context.filePath);
  }
  /**
   * Override message generation to include agent name
   */
  generateEnhancedMessage(analysis, ragContext) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[4]++;
    const criticalCount =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[16]++, analysis.patterns.filter(p => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[5]++;
      cov_2rmdadc8yo().s[17]++;
      return p.severity === 'critical';
    }).length);
    let message =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[18]++, criticalCount > 0 ?
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[1][0]++, `Enhanced Marcus - Critical Issues Detected: ${criticalCount} critical issues found.`) :
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[1][1]++, `Enhanced Marcus - Backend Analysis Complete: Score ${analysis.score}/100. ${analysis.patterns.length} issues found.`));
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[19]++;
    if (ragContext) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[2][0]++;
      const ragInsights =
      /* istanbul ignore next */
      (cov_2rmdadc8yo().s[20]++, []);
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[21]++;
      if (ragContext.similarCode.length > 0) {
        /* istanbul ignore next */
        cov_2rmdadc8yo().b[3][0]++;
        cov_2rmdadc8yo().s[22]++;
        ragInsights.push(`${ragContext.similarCode.length} similar patterns`);
      } else
      /* istanbul ignore next */
      {
        cov_2rmdadc8yo().b[3][1]++;
      }
      cov_2rmdadc8yo().s[23]++;
      if (Object.keys(ragContext.previousSolutions).length > 0) {
        /* istanbul ignore next */
        cov_2rmdadc8yo().b[4][0]++;
        cov_2rmdadc8yo().s[24]++;
        ragInsights.push(`solutions for ${Object.keys(ragContext.previousSolutions).length} issue types`);
      } else
      /* istanbul ignore next */
      {
        cov_2rmdadc8yo().b[4][1]++;
      }
      cov_2rmdadc8yo().s[25]++;
      if (ragContext.projectStandards.length > 0) {
        /* istanbul ignore next */
        cov_2rmdadc8yo().b[5][0]++;
        cov_2rmdadc8yo().s[26]++;
        ragInsights.push(`${ragContext.projectStandards.length} project standards`);
      } else
      /* istanbul ignore next */
      {
        cov_2rmdadc8yo().b[5][1]++;
      }
      cov_2rmdadc8yo().s[27]++;
      if (ragInsights.length > 0) {
        /* istanbul ignore next */
        cov_2rmdadc8yo().b[6][0]++;
        cov_2rmdadc8yo().s[28]++;
        message += ` RAG-Enhanced: ${ragInsights.join(', ')}.`;
      } else
      /* istanbul ignore next */
      {
        cov_2rmdadc8yo().b[6][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[2][1]++;
    }
    cov_2rmdadc8yo().s[29]++;
    return message;
  }
  /**
   * Generate backend-specific base prompt template
   */
  getBasePromptTemplate() {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[6]++;
    cov_2rmdadc8yo().s[30]++;
    return `---
name: enhanced-marcus-backend-rag
description: RAG-Enhanced Backend Analysis
model: sonnet
agent: Enhanced Marcus
---

You are **Enhanced Marcus**, a backend architect and security expert with 10+ years of experience in Node.js, microservices, secure API design, and database optimization.

## Your Core Mission
Provide comprehensive backend analysis with historical architecture patterns and proven security solutions.

## Backend Focus Areas:
1. **API Architecture**
   - Analyze API design patterns and RESTful principles
   - Evaluate microservices architecture decisions
   - Review API documentation and contract adherence

2. **Security Analysis**
   - Identify OWASP Top 10 vulnerabilities
   - Review authentication and authorization patterns
   - Validate input sanitization and validation

3. **Database Optimization**
   - Analyze query performance and indexing strategies
   - Review data modeling and relationships
   - Suggest optimization based on proven patterns

4. **Performance & Scalability**
   - Identify bottlenecks and optimization opportunities
   - Evaluate caching strategies and implementation
   - Review concurrent processing and async patterns

5. **Infrastructure & DevOps**
   - Analyze deployment patterns and configuration
   - Review monitoring and logging implementation
   - Validate error handling and recovery strategies

6. **Code Quality & Patterns**
   - Apply SOLID principles and design patterns
   - Review dependency injection and modularity
   - Ensure maintainable and testable code structure
`;
  }
  /**
   * Generate backend-specific handoffs based on analysis
   */
  generateDomainHandoffs(analysis) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[7]++;
    const handoffs =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[31]++, []);
    const securityIssues =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[32]++, analysis.patterns.filter(p => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[8]++;
      cov_2rmdadc8yo().s[33]++;
      return p.category === 'security';
    }));
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[34]++;
    if (securityIssues.length > 0) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[7][0]++;
      cov_2rmdadc8yo().s[35]++;
      handoffs.push('security-sam');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[7][1]++;
    }
    cov_2rmdadc8yo().s[36]++;
    if (analysis.patterns.some(p => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[9]++;
      cov_2rmdadc8yo().s[37]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[9][0]++, p.category === 'performance') ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[9][1]++, p.type.includes('optimization'));
    })) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[8][0]++;
      cov_2rmdadc8yo().s[38]++;
      handoffs.push('devops-dan');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[8][1]++;
    }
    cov_2rmdadc8yo().s[39]++;
    if (analysis.score < 70) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[10][0]++;
      cov_2rmdadc8yo().s[40]++;
      handoffs.push('enhanced-maria');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[10][1]++;
    }
    cov_2rmdadc8yo().s[41]++;
    if (analysis.patterns.some(p => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[10]++;
      cov_2rmdadc8yo().s[42]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[12][0]++, p.type.includes('frontend')) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[12][1]++, p.type.includes('api-client'));
    })) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[11][0]++;
      cov_2rmdadc8yo().s[43]++;
      handoffs.push('enhanced-james');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[11][1]++;
    }
    cov_2rmdadc8yo().s[44]++;
    return handoffs;
  }
  /**
   * Enhanced backend analysis with RAG context specialization using Edge Functions
   */
  async retrieveRelevantContext(context, analysis) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[11]++;
    const ragContext =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[45]++, await super.retrieveRelevantContext(context, analysis));
    // Backend-specific enhancements using production Edge Functions
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[46]++;
    if (this.vectorStore) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[13][0]++;
      cov_2rmdadc8yo().s[47]++;
      try {
        // Use Marcus RAG Edge Function for production-ready Backend intelligence
        const marcusRAGResult =
        /* istanbul ignore next */
        (cov_2rmdadc8yo().s[48]++, await this.vectorStore.marcusRAG(this.generateRAGQuery(context, analysis), {
          filePath: context.filePath,
          content: context.content,
          language: this.detectLanguage(context.filePath),
          framework: this.detectFramework(context.content),
          apiType: this.detectAPIType(context.content),
          dbType: this.detectDatabaseType(context.content)
        }, this.ragConfig));
        /* istanbul ignore next */
        cov_2rmdadc8yo().s[49]++;
        if (
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[15][0]++, marcusRAGResult.success) &&
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[15][1]++, marcusRAGResult.data)) {
          /* istanbul ignore next */
          cov_2rmdadc8yo().b[14][0]++;
          cov_2rmdadc8yo().s[50]++;
          // Integrate Edge Function results with existing RAG context
          ragContext.similarCode = [...ragContext.similarCode, ...marcusRAGResult.data.apiPatterns.map(pattern => {
            /* istanbul ignore next */
            cov_2rmdadc8yo().f[12]++;
            cov_2rmdadc8yo().s[51]++;
            return {
              id: pattern.id,
              content: pattern.code_content,
              contentType: 'code',
              metadata: {
                ...pattern.metadata,
                relevanceScore: pattern.similarity,
                agentId: this.id,
                timestamp: Date.now(),
                pattern_type: pattern.pattern_type,
                language: pattern.language,
                framework: pattern.framework,
                quality_score: pattern.quality_score
              }
            };
          })];
          /* istanbul ignore next */
          cov_2rmdadc8yo().s[52]++;
          ragContext.projectStandards = [...ragContext.projectStandards, ...marcusRAGResult.data.securityPatterns.map(pattern => {
            /* istanbul ignore next */
            cov_2rmdadc8yo().f[13]++;
            cov_2rmdadc8yo().s[53]++;
            return {
              id: pattern.id,
              content: pattern.solution_code,
              contentType: 'code',
              metadata: {
                agentId: this.id,
                timestamp: Date.now(),
                relevanceScore: pattern.similarity,
                problem_type: pattern.problem_type,
                solution_explanation: pattern.solution_explanation,
                effectiveness_score: pattern.effectiveness_score
              }
            };
          })];
          /* istanbul ignore next */
          cov_2rmdadc8yo().s[54]++;
          ragContext.agentExpertise = [...ragContext.agentExpertise, ...marcusRAGResult.data.performancePatterns.map(pattern => {
            /* istanbul ignore next */
            cov_2rmdadc8yo().f[14]++;
            cov_2rmdadc8yo().s[55]++;
            return {
              id: pattern.id,
              content: pattern.knowledge_item,
              contentType: 'text',
              metadata: {
                agentId: this.id,
                timestamp: Date.now(),
                relevanceScore: pattern.similarity,
                knowledge_type: pattern.knowledge_type,
                confidence_score: pattern.confidence_score,
                expertise_domain: pattern.expertise_domain
              }
            };
          }), ...marcusRAGResult.data.databaseOptimizations.map(optimization => {
            /* istanbul ignore next */
            cov_2rmdadc8yo().f[15]++;
            cov_2rmdadc8yo().s[56]++;
            return {
              id: optimization.id,
              content: optimization.solution_code,
              contentType: 'code',
              metadata: {
                agentId: this.id,
                timestamp: Date.now(),
                relevanceScore: optimization.similarity,
                solution_explanation: optimization.solution_explanation,
                effectiveness_score: optimization.effectiveness_score
              }
            };
          })];
          // Store RAG insights for prompt generation
          /* istanbul ignore next */
          cov_2rmdadc8yo().s[57]++;
          ragContext.metadata = {
            ...ragContext.metadata,
            marcusRAGInsights: marcusRAGResult.data.ragInsights,
            edgeFunctionUsed: true,
            processingTime:
            /* istanbul ignore next */
            (cov_2rmdadc8yo().b[16][0]++, marcusRAGResult.metadata?.processingTime) ||
            /* istanbul ignore next */
            (cov_2rmdadc8yo().b[16][1]++, 0)
          };
        } else
        /* istanbul ignore next */
        {
          cov_2rmdadc8yo().b[14][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2rmdadc8yo().s[58]++;
        console.warn('Marcus RAG Edge Function failed, using fallback:', error.message);
        // Fallback to original local methods
        const apiPatterns =
        /* istanbul ignore next */
        (cov_2rmdadc8yo().s[59]++, await this.retrieveAPIPatterns(context));
        /* istanbul ignore next */
        cov_2rmdadc8yo().s[60]++;
        ragContext.similarCode = [...ragContext.similarCode, ...apiPatterns];
        const securityPatterns =
        /* istanbul ignore next */
        (cov_2rmdadc8yo().s[61]++, await this.retrieveSecurityPatterns(context, analysis));
        /* istanbul ignore next */
        cov_2rmdadc8yo().s[62]++;
        ragContext.projectStandards = [...ragContext.projectStandards, ...securityPatterns];
        const performancePatterns =
        /* istanbul ignore next */
        (cov_2rmdadc8yo().s[63]++, await this.retrievePerformancePatterns(context));
        /* istanbul ignore next */
        cov_2rmdadc8yo().s[64]++;
        ragContext.agentExpertise = [...ragContext.agentExpertise, ...performancePatterns];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[13][1]++;
    }
    cov_2rmdadc8yo().s[65]++;
    return ragContext;
  }
  /**
   * Generate optimized RAG query for Marcus's Backend domain
   */
  generateRAGQuery(context, analysis) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[16]++;
    const framework =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[66]++, this.detectFramework(context.content));
    const apiType =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[67]++, this.detectAPIType(context.content));
    const dbType =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[68]++, this.detectDatabaseType(context.content));
    const language =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[69]++, this.detectLanguage(context.filePath));
    // Generate context-aware query for Backend patterns
    const patterns =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[70]++, analysis.patterns.map(p => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[17]++;
      cov_2rmdadc8yo().s[71]++;
      return p.type;
    }).join(' '));
    const hasSecurityIssues =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[72]++, analysis.patterns.some(p => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[18]++;
      cov_2rmdadc8yo().s[73]++;
      return p.category === 'security';
    }));
    const hasPerformanceIssues =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[74]++, analysis.patterns.some(p => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[19]++;
      cov_2rmdadc8yo().s[75]++;
      return p.category === 'performance';
    }));
    let queryTerms =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[76]++, [framework, apiType, dbType, language]);
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[77]++;
    if (hasSecurityIssues) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[17][0]++;
      cov_2rmdadc8yo().s[78]++;
      queryTerms.push('security authentication authorization validation');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[17][1]++;
    }
    cov_2rmdadc8yo().s[79]++;
    if (hasPerformanceIssues) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[18][0]++;
      cov_2rmdadc8yo().s[80]++;
      queryTerms.push('performance optimization caching database queries');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[18][1]++;
    }
    cov_2rmdadc8yo().s[81]++;
    if (patterns) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[19][0]++;
      cov_2rmdadc8yo().s[82]++;
      queryTerms.push(patterns);
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[19][1]++;
    }
    cov_2rmdadc8yo().s[83]++;
    return queryTerms.join(' ').trim();
  }
  /**
   * Retrieve backend API patterns and architecture examples
   */
  async retrieveAPIPatterns(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[20]++;
    cov_2rmdadc8yo().s[84]++;
    if (!this.vectorStore) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[20][0]++;
      cov_2rmdadc8yo().s[85]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[20][1]++;
    }
    const apiType =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[86]++, this.detectAPIType(context.content));
    const framework =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[87]++, this.detectFramework(context.content));
    const query =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[88]++, {
      query: `${framework} ${apiType} API patterns backend architecture ${this.detectLanguage(context.filePath)}`,
      queryType: 'semantic',
      agentId: this.id,
      topK: 2,
      filters: {
        tags: ['api', 'backend', framework.toLowerCase(), apiType, 'pattern'],
        contentTypes: ['code']
      }
    });
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[89]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2rmdadc8yo().s[90]++, await this.vectorStore.queryMemories(query));
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[91]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[21][0]++, result.documents) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[21][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[92]++;
      console.warn('Failed to retrieve API patterns:', error.message);
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[93]++;
      return [];
    }
  }
  /**
   * Retrieve security patterns and implementations
   */
  async retrieveSecurityPatterns(context, analysis) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[21]++;
    cov_2rmdadc8yo().s[94]++;
    if (!this.vectorStore) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[22][0]++;
      cov_2rmdadc8yo().s[95]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[22][1]++;
    }
    // Focus on security issues found in the analysis
    const securityIssues =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[96]++, analysis.patterns.filter(p => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[22]++;
      cov_2rmdadc8yo().s[97]++;
      return p.category === 'security';
    }));
    const securityTypes =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[98]++, securityIssues.map(issue => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[23]++;
      cov_2rmdadc8yo().s[99]++;
      return issue.type;
    }).join(' '));
    const query =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[100]++, {
      query: `security best practices ${securityTypes} authentication authorization validation`,
      queryType: 'semantic',
      agentId: this.id,
      topK: 3,
      filters: {
        tags: ['security', 'authentication', 'authorization', 'validation', 'best-practice'],
        contentTypes: ['text', 'code']
      }
    });
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[101]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2rmdadc8yo().s[102]++, await this.vectorStore.queryMemories(query));
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[103]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[23][0]++, result.documents) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[23][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[104]++;
      console.warn('Failed to retrieve security patterns:', error.message);
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[105]++;
      return [];
    }
  }
  /**
   * Retrieve performance optimization patterns
   */
  async retrievePerformancePatterns(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[24]++;
    cov_2rmdadc8yo().s[106]++;
    if (!this.vectorStore) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[24][0]++;
      cov_2rmdadc8yo().s[107]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[24][1]++;
    }
    const framework =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[108]++, this.detectFramework(context.content));
    const dbType =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[109]++, this.detectDatabaseType(context.content));
    const query =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[110]++, {
      query: `${framework} ${dbType} performance optimization caching database queries`,
      queryType: 'semantic',
      agentId: this.id,
      topK: 2,
      filters: {
        tags: ['performance', 'optimization', 'caching', 'database'],
        contentTypes: ['code', 'text']
      }
    });
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[111]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2rmdadc8yo().s[112]++, await this.vectorStore.queryMemories(query));
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[113]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[25][0]++, result.documents) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[25][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[114]++;
      console.warn('Failed to retrieve performance patterns:', error.message);
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[115]++;
      return [];
    }
  }
  /**
   * Detect API type for better RAG retrieval
   */
  detectAPIType(content) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[25]++;
    cov_2rmdadc8yo().s[116]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[27][0]++, content.includes('GraphQL')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[27][1]++, content.includes('gql`'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[26][0]++;
      cov_2rmdadc8yo().s[117]++;
      return 'graphql';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[26][1]++;
    }
    cov_2rmdadc8yo().s[118]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[29][0]++, content.includes('tRPC')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[29][1]++, content.includes('trpc'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[28][0]++;
      cov_2rmdadc8yo().s[119]++;
      return 'trpc';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[28][1]++;
    }
    cov_2rmdadc8yo().s[120]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[31][0]++, content.includes('app.get')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[31][1]++, content.includes('app.post'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[30][0]++;
      cov_2rmdadc8yo().s[121]++;
      return 'rest';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[30][1]++;
    }
    cov_2rmdadc8yo().s[122]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[33][0]++, content.includes('router.')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[33][1]++, content.includes('route'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[32][0]++;
      cov_2rmdadc8yo().s[123]++;
      return 'rest';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[32][1]++;
    }
    cov_2rmdadc8yo().s[124]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[35][0]++, content.includes('websocket')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[35][1]++, content.includes('ws'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[34][0]++;
      cov_2rmdadc8yo().s[125]++;
      return 'websocket';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[34][1]++;
    }
    cov_2rmdadc8yo().s[126]++;
    return 'api';
  }
  /**
   * Detect database type for optimization patterns
   */
  detectDatabaseType(content) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[26]++;
    cov_2rmdadc8yo().s[127]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[37][0]++, content.includes('mongoose')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[37][1]++, content.includes('MongoDB'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[36][0]++;
      cov_2rmdadc8yo().s[128]++;
      return 'mongodb';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[36][1]++;
    }
    cov_2rmdadc8yo().s[129]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[39][0]++, content.includes('prisma')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[39][1]++, content.includes('Prisma'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[38][0]++;
      cov_2rmdadc8yo().s[130]++;
      return 'prisma';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[38][1]++;
    }
    cov_2rmdadc8yo().s[131]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[41][0]++, content.includes('sequelize')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[41][1]++, content.includes('Sequelize'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[40][0]++;
      cov_2rmdadc8yo().s[132]++;
      return 'sequelize';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[40][1]++;
    }
    cov_2rmdadc8yo().s[133]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[43][0]++, content.includes('typeorm')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[43][1]++, content.includes('TypeORM'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[42][0]++;
      cov_2rmdadc8yo().s[134]++;
      return 'typeorm';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[42][1]++;
    }
    cov_2rmdadc8yo().s[135]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[45][0]++, content.includes('postgresql')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[45][1]++, content.includes('pg'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[44][0]++;
      cov_2rmdadc8yo().s[136]++;
      return 'postgresql';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[44][1]++;
    }
    cov_2rmdadc8yo().s[137]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[47][0]++, content.includes('mysql')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[47][1]++, content.includes('MySQL'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[46][0]++;
      cov_2rmdadc8yo().s[138]++;
      return 'mysql';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[46][1]++;
    }
    cov_2rmdadc8yo().s[139]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[49][0]++, content.includes('redis')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[49][1]++, content.includes('Redis'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[48][0]++;
      cov_2rmdadc8yo().s[140]++;
      return 'redis';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[48][1]++;
    }
    cov_2rmdadc8yo().s[141]++;
    return 'database';
  }
  /**
   * Validate API integration
   */
  validateAPIIntegration(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[27]++;
    cov_2rmdadc8yo().s[142]++;
    return {
      score: 90,
      issues: []
    };
  }
  /**
   * Validate service consistency
   */
  validateServiceConsistency(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[28]++;
    cov_2rmdadc8yo().s[143]++;
    return {
      score: 95,
      issues: []
    };
  }
  /**
   * Check configuration consistency
   */
  checkConfigurationConsistency(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[29]++;
    cov_2rmdadc8yo().s[144]++;
    return {
      score: 90,
      issues: []
    };
  }
  /**
   * Calculate priority based on issues
   */
  calculatePriority(issues) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[30]++;
    cov_2rmdadc8yo().s[145]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[51][0]++, !issues) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[51][1]++, issues.length === 0)) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[50][0]++;
      cov_2rmdadc8yo().s[146]++;
      return 'low';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[50][1]++;
    }
    const severities =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[147]++, issues.map(i => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[31]++;
      cov_2rmdadc8yo().s[148]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[52][0]++, i.severity) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[52][1]++, 'low');
    }));
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[149]++;
    if (severities.includes('critical')) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[53][0]++;
      cov_2rmdadc8yo().s[150]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[53][1]++;
    }
    cov_2rmdadc8yo().s[151]++;
    if (severities.includes('high')) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[54][0]++;
      cov_2rmdadc8yo().s[152]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[54][1]++;
    }
    cov_2rmdadc8yo().s[153]++;
    if (severities.includes('medium')) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[55][0]++;
      cov_2rmdadc8yo().s[154]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[55][1]++;
    }
    cov_2rmdadc8yo().s[155]++;
    return 'low';
  }
  /**
   * Determine agent handoffs based on issues
   */
  determineHandoffs(issues) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[32]++;
    const handoffs =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[156]++, []);
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[157]++;
    if (!issues) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[56][0]++;
      cov_2rmdadc8yo().s[158]++;
      return handoffs;
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[56][1]++;
    }
    const hasSecurityIssue =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[159]++, issues.some(i => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[33]++;
      cov_2rmdadc8yo().s[160]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[57][0]++, i.type === 'security') ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[57][1]++, i.type === 'security-risk') ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[57][2]++, i.category === 'security');
    }));
    const hasPerformanceIssue =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[161]++, issues.some(i => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[34]++;
      cov_2rmdadc8yo().s[162]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[58][0]++, i.type === 'performance') ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[58][1]++, i.category === 'performance');
    }));
    const hasFrontendIssue =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[163]++, issues.some(i => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[35]++;
      cov_2rmdadc8yo().s[164]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[59][0]++, i.type === 'ui') ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[59][1]++, i.type === 'frontend') ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[59][2]++, i.type === 'frontend-integration');
    }));
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[165]++;
    if (hasSecurityIssue) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[60][0]++;
      cov_2rmdadc8yo().s[166]++;
      handoffs.push('security-sam');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[60][1]++;
    }
    cov_2rmdadc8yo().s[167]++;
    if (hasPerformanceIssue) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[61][0]++;
      cov_2rmdadc8yo().s[168]++;
      handoffs.push('devops-dan');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[61][1]++;
    }
    cov_2rmdadc8yo().s[169]++;
    if (hasFrontendIssue) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[62][0]++;
      cov_2rmdadc8yo().s[170]++;
      handoffs.push('enhanced-james');
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[62][1]++;
    }
    cov_2rmdadc8yo().s[171]++;
    return handoffs;
  }
  /**
   * Generate actionable recommendations from issues
   */
  generateActionableRecommendations(issues) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[36]++;
    cov_2rmdadc8yo().s[172]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[64][0]++, !issues) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[64][1]++, issues.length === 0)) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[63][0]++;
      cov_2rmdadc8yo().s[173]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[63][1]++;
    }
    cov_2rmdadc8yo().s[174]++;
    return issues.map(issue => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[37]++;
      let message =
      /* istanbul ignore next */
      (cov_2rmdadc8yo().s[175]++, '');
      let type =
      /* istanbul ignore next */
      (cov_2rmdadc8yo().s[176]++,
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[65][0]++, issue.type) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[65][1]++, 'general'));
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[177]++;
      if (issue.type === 'security') {
        /* istanbul ignore next */
        cov_2rmdadc8yo().b[66][0]++;
        cov_2rmdadc8yo().s[178]++;
        message = `Fix security issue: ${
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[67][0]++, issue.message) ||
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[67][1]++, 'Security vulnerability detected')}`;
      } else {
        /* istanbul ignore next */
        cov_2rmdadc8yo().b[66][1]++;
        cov_2rmdadc8yo().s[179]++;
        if (issue.type === 'performance') {
          /* istanbul ignore next */
          cov_2rmdadc8yo().b[68][0]++;
          cov_2rmdadc8yo().s[180]++;
          message = `Optimize performance: ${
          /* istanbul ignore next */
          (cov_2rmdadc8yo().b[69][0]++, issue.message) ||
          /* istanbul ignore next */
          (cov_2rmdadc8yo().b[69][1]++, 'Performance issue detected')}`;
        } else {
          /* istanbul ignore next */
          cov_2rmdadc8yo().b[68][1]++;
          cov_2rmdadc8yo().s[181]++;
          message = `Address issue: ${
          /* istanbul ignore next */
          (cov_2rmdadc8yo().b[70][0]++, issue.message) ||
          /* istanbul ignore next */
          (cov_2rmdadc8yo().b[70][1]++, issue.description) ||
          /* istanbul ignore next */
          (cov_2rmdadc8yo().b[70][2]++, 'Issue detected')}`;
        }
      }
      /* istanbul ignore next */
      cov_2rmdadc8yo().s[182]++;
      return {
        type,
        message,
        priority:
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[71][0]++, issue.severity) ||
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[71][1]++, 'medium')
      };
    });
  }
  /**
   * Generate enhanced report with metadata
   */
  generateEnhancedReport(issues, metadata =
  /* istanbul ignore next */
  (cov_2rmdadc8yo().b[72][0]++, {})) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[38]++;
    const report =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[183]++, {
      agent: 'Enhanced Marcus',
      analysisType: 'Backend Analysis',
      summary: {
        totalIssues:
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[73][0]++, issues?.length) ||
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[73][1]++, 0),
        critical:
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[74][0]++, issues?.filter(i => {
          /* istanbul ignore next */
          cov_2rmdadc8yo().f[39]++;
          cov_2rmdadc8yo().s[184]++;
          return i.severity === 'critical';
        }).length) ||
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[74][1]++, 0),
        high:
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[75][0]++, issues?.filter(i => {
          /* istanbul ignore next */
          cov_2rmdadc8yo().f[40]++;
          cov_2rmdadc8yo().s[185]++;
          return i.severity === 'high';
        }).length) ||
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[75][1]++, 0),
        medium:
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[76][0]++, issues?.filter(i => {
          /* istanbul ignore next */
          cov_2rmdadc8yo().f[41]++;
          cov_2rmdadc8yo().s[186]++;
          return i.severity === 'medium';
        }).length) ||
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[76][1]++, 0),
        low:
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[77][0]++, issues?.filter(i => {
          /* istanbul ignore next */
          cov_2rmdadc8yo().f[42]++;
          cov_2rmdadc8yo().s[187]++;
          return i.severity === 'low';
        }).length) ||
        /* istanbul ignore next */
        (cov_2rmdadc8yo().b[77][1]++, 0)
      },
      issues:
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[78][0]++, issues) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[78][1]++, []),
      recommendations: this.generateActionableRecommendations(
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[79][0]++, issues) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[79][1]++, [])),
      metadata: {
        timestamp: Date.now(),
        ...metadata
      }
    });
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[188]++;
    return `Enhanced Marcus - Backend Analysis\n\n${JSON.stringify(report, null, 2)}`;
  }
  /**
   * Get emoji representation of score
   */
  getScoreEmoji(score) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[43]++;
    cov_2rmdadc8yo().s[189]++;
    if (score >= 90) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[80][0]++;
      cov_2rmdadc8yo().s[190]++;
      return '🟢';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[80][1]++;
    }
    cov_2rmdadc8yo().s[191]++;
    if (score >= 75) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[81][0]++;
      cov_2rmdadc8yo().s[192]++;
      return '🟡';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[81][1]++;
    }
    cov_2rmdadc8yo().s[193]++;
    if (score >= 60) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[82][0]++;
      cov_2rmdadc8yo().s[194]++;
      return '🟠';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[82][1]++;
    }
    cov_2rmdadc8yo().s[195]++;
    return '🔴';
  }
  /**
   * Extract agent name from text
   */
  extractAgentName(text) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[44]++;
    const match =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[196]++, text.match(/@(\w+)/));
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[197]++;
    return match ?
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[83][0]++, match[1]) :
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[83][1]++, '');
  }
  /**
   * Analyze cross-file consistency
   */
  analyzeCrossFileConsistency(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[45]++;
    cov_2rmdadc8yo().s[198]++;
    return {
      [
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[84][0]++, context.filePath) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[84][1]++, 'unknown')]:
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[85][0]++, context.content) ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[85][1]++, '')
    };
  }
  /**
   * Check for configuration inconsistencies
   */
  hasConfigurationInconsistencies(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[46]++;
    cov_2rmdadc8yo().s[199]++;
    return false;
  }
  /**
   * Identify critical issues from issue list
   */
  identifyCriticalIssues(issues) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[47]++;
    cov_2rmdadc8yo().s[200]++;
    if (!issues) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[86][0]++;
      cov_2rmdadc8yo().s[201]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[86][1]++;
    }
    cov_2rmdadc8yo().s[202]++;
    return issues.filter(i => {
      /* istanbul ignore next */
      cov_2rmdadc8yo().f[48]++;
      cov_2rmdadc8yo().s[203]++;
      return /* istanbul ignore next */(cov_2rmdadc8yo().b[87][0]++, i.severity === 'critical') ||
      /* istanbul ignore next */
      (cov_2rmdadc8yo().b[87][1]++, i.severity === 'high');
    });
  }
  /**
   * Validate database queries
   */
  validateDatabaseQueries(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[49]++;
    cov_2rmdadc8yo().s[204]++;
    return [];
  }
  /**
   * Check API security
   */
  checkAPISecurity(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[50]++;
    cov_2rmdadc8yo().s[205]++;
    return [];
  }
  /**
   * Analyze cache strategy
   */
  analyzeCacheStrategy(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[51]++;
    cov_2rmdadc8yo().s[206]++;
    return {
      strategy: 'none',
      recommendations: []
    };
  }
  /**
   * Check authentication patterns
   */
  checkAuthenticationPatterns(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[52]++;
    cov_2rmdadc8yo().s[207]++;
    return [];
  }
  /**
   * Validate error handling
   */
  validateErrorHandling(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[53]++;
    cov_2rmdadc8yo().s[208]++;
    return [];
  }
  /**
   * Check input validation
   */
  checkInputValidation(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[54]++;
    cov_2rmdadc8yo().s[209]++;
    return [];
  }
  /**
   * Analyze rate limiting
   */
  analyzeRateLimiting(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[55]++;
    cov_2rmdadc8yo().s[210]++;
    return {
      implemented: false,
      recommendations: []
    };
  }
  /**
   * Check CORS configuration
   */
  checkCORSConfiguration(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[56]++;
    cov_2rmdadc8yo().s[211]++;
    return [];
  }
  /**
   * Validate API versioning
   */
  validateAPIVersioning(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[57]++;
    cov_2rmdadc8yo().s[212]++;
    return {
      versioned: false,
      recommendations: []
    };
  }
  /**
   * Check database indexes
   */
  checkDatabaseIndexes(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[58]++;
    cov_2rmdadc8yo().s[213]++;
    return [];
  }
  /**
   * Run backend-specific validation using PatternAnalyzer
   */
  async runBackendValidation(context) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[59]++;
    const analysis =
    /* istanbul ignore next */
    (cov_2rmdadc8yo().s[214]++, pattern_analyzer_1.PatternAnalyzer.analyzeBackend(context.content, context.filePath));
    /* istanbul ignore next */
    cov_2rmdadc8yo().s[215]++;
    return {
      score: analysis.score,
      issues: analysis.patterns,
      warnings: [],
      recommendations: []
    };
  }
  /**
   * Detect framework from content
   */
  detectFramework(content) {
    /* istanbul ignore next */
    cov_2rmdadc8yo().f[60]++;
    cov_2rmdadc8yo().s[216]++;
    if (content.includes('fastify')) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[88][0]++;
      cov_2rmdadc8yo().s[217]++;
      return 'fastify';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[88][1]++;
    }
    cov_2rmdadc8yo().s[218]++;
    if (content.includes('express')) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[89][0]++;
      cov_2rmdadc8yo().s[219]++;
      return 'express';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[89][1]++;
    }
    cov_2rmdadc8yo().s[220]++;
    if (content.includes('koa')) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[90][0]++;
      cov_2rmdadc8yo().s[221]++;
      return 'koa';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[90][1]++;
    }
    cov_2rmdadc8yo().s[222]++;
    if (content.includes('hapi')) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[91][0]++;
      cov_2rmdadc8yo().s[223]++;
      return 'hapi';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[91][1]++;
    }
    cov_2rmdadc8yo().s[224]++;
    if (
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[93][0]++, content.includes('nestjs')) ||
    /* istanbul ignore next */
    (cov_2rmdadc8yo().b[93][1]++, content.includes('@nestjs'))) {
      /* istanbul ignore next */
      cov_2rmdadc8yo().b[92][0]++;
      cov_2rmdadc8yo().s[225]++;
      return 'nestjs';
    } else
    /* istanbul ignore next */
    {
      cov_2rmdadc8yo().b[92][1]++;
    }
    cov_2rmdadc8yo().s[226]++;
    return '';
  }
}
/* istanbul ignore next */
cov_2rmdadc8yo().s[227]++;
exports.EnhancedMarcus = EnhancedMarcus;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,