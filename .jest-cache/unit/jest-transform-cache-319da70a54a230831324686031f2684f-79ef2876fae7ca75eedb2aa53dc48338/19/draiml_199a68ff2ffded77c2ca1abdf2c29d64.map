{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/dr-ai-ml.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/dr-ai-ml.ts"],"sourcesContent":["/**\n * VERSATIL SDLC Framework - Dr.AI-ML (AI/ML Specialist)\n * Specialized in ML model development, training, deployment, MLOps\n *\n * RAG-Enhanced: Learns from model architectures, training patterns, deployment strategies\n */\n\nimport { RAGEnabledAgent, RAGConfig, AgentRAGContext } from './rag-enabled-agent.js';\nimport { AgentResponse, AgentActivationContext } from './base-agent.js';\nimport { PatternAnalyzer, AnalysisResult } from '../intelligence/pattern-analyzer.js';\nimport { EnhancedVectorMemoryStore } from '../rag/enhanced-vector-memory-store.js';\n\nexport class DrAiMl extends RAGEnabledAgent {\n  name = 'DrAiMl';\n  id = 'dr-ai-ml';\n  specialization = 'AI/ML Specialist & MLOps Engineer';\n  systemPrompt = 'Expert AI/ML Engineer specializing in model development, training optimization, deployment strategies, and MLOps best practices';\n\n  constructor(vectorStore?: EnhancedVectorMemoryStore) {\n    super(vectorStore);\n  }\n\n  /**\n   * AI/ML-specific RAG configuration\n   * Focus on model architectures, training patterns, deployment strategies\n   */\n  protected getDefaultRAGConfig(): RAGConfig {\n    return {\n      maxExamples: 3, // Focused examples for ML patterns\n      similarityThreshold: 0.85, // High precision for ML code\n      agentDomain: 'ai-ml',\n      enableLearning: true\n    };\n  }\n\n  /**\n   * AI/ML-specific pattern analysis\n   */\n  protected async runPatternAnalysis(context: AgentActivationContext): Promise<AnalysisResult> {\n    const content = context.content || '';\n    const filePath = context.filePath || '';\n\n    const patterns: any[] = [];\n\n    // Model architecture patterns\n    if (content.match(/model\\s*=|Sequential\\(|Model\\(|nn\\.Module|keras\\.layers/i)) {\n      patterns.push({\n        type: 'model-architecture',\n        message: 'Neural network model architecture detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Training pipeline patterns\n    if (content.match(/model\\.fit|trainer\\.train|optimizer|loss_fn|train_loop/i)) {\n      patterns.push({\n        type: 'training-pipeline',\n        message: 'Model training pipeline detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Data preprocessing patterns\n    if (content.match(/transform|normalize|augment|preprocessing|feature_engineering/i)) {\n      patterns.push({\n        type: 'data-preprocessing',\n        message: 'Data preprocessing or feature engineering detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Model evaluation patterns\n    if (content.match(/evaluate|metrics|accuracy|precision|recall|f1_score|confusion_matrix/i)) {\n      patterns.push({\n        type: 'model-evaluation',\n        message: 'Model evaluation and metrics detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Hyperparameter tuning patterns\n    if (content.match(/hyperparameter|grid_search|optuna|learning_rate|batch_size/i)) {\n      patterns.push({\n        type: 'hyperparameter-tuning',\n        message: 'Hyperparameter tuning configuration detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Model deployment patterns\n    if (content.match(/save_model|load_model|inference|predict|deploy|mlflow|serving/i)) {\n      patterns.push({\n        type: 'model-deployment',\n        message: 'Model deployment or serving detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // MLOps patterns\n    if (content.match(/mlflow|wandb|tensorboard|experiment_tracking|model_registry/i)) {\n      patterns.push({\n        type: 'mlops',\n        message: 'MLOps tooling or experiment tracking detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Performance issues (warnings)\n    if (content.match(/\\.cpu\\(\\)|device='cpu'|no GPU|slow training/i)) {\n      patterns.push({\n        type: 'performance-warning',\n        message: 'Potential performance issue: CPU-only training detected',\n        severity: 'high',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Data leakage risks (critical)\n    if (content.match(/fit_transform.*test|test.*fit|target.*features/i)) {\n      patterns.push({\n        type: 'data-leakage-risk',\n        message: 'CRITICAL: Potential data leakage detected in preprocessing',\n        severity: 'critical',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    return {\n      patterns,\n      score: patterns.filter(p => p.severity === 'critical').length === 0 ? 95 : 70, // ML quality score\n      summary: `Detected ${patterns.length} AI/ML patterns`,\n      recommendations: patterns\n        .filter(p => p.severity === 'high' || p.severity === 'critical')\n        .map(p => p.message)\n    };\n  }\n\n  /**\n   * Override activate to add AI/ML-specific context\n   */\n  async activate(context: AgentActivationContext): Promise<AgentResponse> {\n    // Call parent (RAGEnabledAgent) to get RAG-enhanced response\n    const response = await super.activate(context);\n\n    // Add AI/ML-specific enhancements\n    if (response.context) {\n      response.context = {\n        ...response.context,\n        mlInsights: {\n          modelArchitectureDetected: context.content?.match(/model\\s*=|Sequential/i) !== null,\n          trainingPipelinePresent: context.content?.match(/model\\.fit|trainer/i) !== null,\n          evaluationMetrics: this.extractEvaluationMetrics(context.content || ''),\n          mlopsTooling: context.content?.match(/mlflow|wandb|tensorboard/i) !== null\n        }\n      };\n    }\n\n    // Add AI/ML-specific suggestions if RAG context available\n    const ragContext = context.ragContext as AgentRAGContext | undefined;\n    if (ragContext && ragContext.previousSolutions) {\n      const mlSuggestions = this.generateMLSuggestions(ragContext, context);\n      response.suggestions = [...(response.suggestions || []), ...mlSuggestions];\n    }\n\n    // Determine handoffs\n    response.handoffTo = this.determineHandoffs(context, response);\n\n    return response;\n  }\n\n  /**\n   * Extract evaluation metrics from content\n   */\n  private extractEvaluationMetrics(content: string): string[] {\n    const metrics: string[] = [];\n    const metricPatterns = ['accuracy', 'precision', 'recall', 'f1', 'auc', 'mae', 'mse', 'rmse'];\n\n    for (const metric of metricPatterns) {\n      if (content.toLowerCase().includes(metric)) {\n        metrics.push(metric);\n      }\n    }\n\n    return metrics;\n  }\n\n  /**\n   * Generate AI/ML-specific suggestions from RAG context\n   */\n  private generateMLSuggestions(ragContext: AgentRAGContext, context: AgentActivationContext): any[] {\n    const suggestions: any[] = [];\n\n    // Model architecture suggestions\n    if (context.content?.includes('model') && ragContext.similarCode.length > 0) {\n      suggestions.push({\n        type: 'architecture-optimization',\n        message: 'Similar models in previous projects achieved better performance with batch normalization and dropout',\n        priority: 'medium',\n        file: context.filePath || 'model.py'\n      });\n    }\n\n    // Training optimization suggestions\n    if (context.content?.includes('train') && ragContext.previousSolutions['training-pipeline']) {\n      suggestions.push({\n        type: 'training-optimization',\n        message: 'Consider using learning rate scheduling and early stopping for better convergence',\n        priority: 'medium',\n        file: context.filePath || 'train.py'\n      });\n    }\n\n    // Data preprocessing suggestions\n    if (context.content?.includes('preprocess') && ragContext.projectStandards.length > 0) {\n      suggestions.push({\n        type: 'preprocessing-best-practice',\n        message: 'Fit preprocessing on training data only, then transform both train and test sets',\n        priority: 'high',\n        file: context.filePath || 'preprocessing.py'\n      });\n    }\n\n    // MLOps suggestions\n    if (context.content?.match(/model\\.save|save_model/i) && ragContext.agentExpertise.length > 0) {\n      suggestions.push({\n        type: 'mlops-recommendation',\n        message: 'Recommend using MLflow for experiment tracking and model registry',\n        priority: 'medium',\n        file: context.filePath || 'train.py'\n      });\n    }\n\n    // Performance optimization\n    if (context.content?.includes('cpu')) {\n      suggestions.push({\n        type: 'performance-optimization',\n        message: 'Training on GPU can be 10-100x faster. Consider using CUDA device if available',\n        priority: 'high',\n        file: context.filePath || 'config.py'\n      });\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Determine which agents to hand off to\n   */\n  private determineHandoffs(context: AgentActivationContext, response: AgentResponse): string[] {\n    const handoffs: string[] = [];\n\n    // Hand off to Marcus for API deployment\n    if (context.content?.match(/inference|predict|api|endpoint/i)) {\n      handoffs.push('marcus-backend');\n    }\n\n    // Hand off to Maria for model testing\n    if (context.content?.match(/test|evaluate|validation/i)) {\n      handoffs.push('maria-qa');\n    }\n\n    // Hand off to Sarah PM for project planning\n    if (response.priority === 'critical' || context.content?.includes('deadline')) {\n      handoffs.push('sarah-pm');\n    }\n\n    return handoffs;\n  }\n\n  /**\n   * Get base prompt template for AI/ML\n   */\n  protected getBasePromptTemplate(): string {\n    return `You are Dr.AI-ML, an expert AI/ML Engineer specializing in model development and MLOps.\nYour role is to design model architectures, optimize training pipelines, and ensure robust deployment strategies.\nFocus on best practices in model development, data quality, and production readiness.`;\n  }\n\n  /**\n   * Generate domain-specific handoffs based on analysis\n   */\n  protected generateDomainHandoffs(analysis: AnalysisResult): string[] {\n    const handoffs: string[] = [];\n\n    // Check if data leakage detected (critical)\n    if (analysis.patterns.some(p => p.type === 'data-leakage-risk')) {\n      handoffs.push('maria-qa'); // Immediate QA review needed\n    }\n\n    // Check if deployment patterns need backend support\n    if (analysis.patterns.some(p => p.type === 'model-deployment')) {\n      handoffs.push('marcus-backend');\n    }\n\n    // Check if performance issues need PM escalation\n    if (analysis.patterns.some(p => p.severity === 'high' || p.severity === 'critical')) {\n      handoffs.push('sarah-pm');\n    }\n\n    return handoffs;\n  }\n}\n"],"version":3}