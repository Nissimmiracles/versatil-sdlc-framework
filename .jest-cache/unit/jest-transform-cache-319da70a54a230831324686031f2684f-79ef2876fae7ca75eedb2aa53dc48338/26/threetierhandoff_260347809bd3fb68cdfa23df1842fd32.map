{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/contracts/three-tier-handoff.ts","mappings":";AAAA;;;;;;;GAOG;;;AAoZH,wDA0BC;AA5aD,2EAMqC;AACrC,mEAA8E;AAC9E,+DAAiE;AA6EjE;;GAEG;AACH,MAAa,uBAAuB;IAOlC,YAAY,YAAiC;QALrC,cAAS,GAAkB,EAAE,CAAC;QAC9B,WAAM,GAAoB,EAAE,CAAC;QAC7B,eAAU,GAAkB,EAAE,CAAC;QAIrC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,QAAqB;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,KAAoB;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,SAAsB;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,iBAAiB,CAAC,QAAwB;QACxC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,KAAK;QACT,6CAA6C;QAC7C,MAAM,WAAW,GAAG,IAAI,2CAAe,CAAC,SAAS,CAAC,CAAC;QAEnD,sCAAsC;QACtC,WAAW;aACR,WAAW,CAAC,eAAe,EAAE,UAAU,CAAC;aACxC,WAAW,CAAC,gBAAgB,EAAE,KAAK,CAAC;aACpC,WAAW,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;QAE7C,+BAA+B;QAC/B,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEhC,kCAAkC;QAClC,MAAM,SAAS,GAAe,EAAE,CAAC;QAEjC,+BAA+B;QAC/B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3B,SAAS,CAAC,IAAI,CAAC;gBACb,EAAE,EAAE,aAAa,IAAI,CAAC,GAAG,EAAE,EAAE;gBAC7B,IAAI,EAAE,gBAAgB;gBACtB,WAAW,EAAE,iCAAiC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE;gBACtE,kBAAkB,EAAE;oBAClB,wCAAwC;oBACxC,+BAA+B;oBAC/B,yBAAyB;oBACzB,0BAA0B;oBAC1B,2BAA2B;iBAC5B;gBACD,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE,sBAAsB;gBACjE,QAAQ,EAAE,MAAM;gBAChB,QAAQ,EAAE;oBACR,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;iBACrC;aACF,CAAC,CAAC;QACL,CAAC;QAED,oCAAoC;QACpC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC9B,SAAS,CAAC,IAAI,CAAC;gBACb,EAAE,EAAE,eAAe,IAAI,CAAC,GAAG,EAAE,EAAE;gBAC/B,IAAI,EAAE,gBAAgB;gBACtB,WAAW,EAAE,+BAA+B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE;gBACpE,kBAAkB,EAAE;oBAClB,2BAA2B;oBAC3B,sCAAsC;oBACtC,yCAAyC;oBACzC,4BAA4B;oBAC5B,2BAA2B;oBAC3B,uBAAuB;oBACvB,oCAAoC;iBACrC;gBACD,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,uBAAuB;gBACnE,QAAQ,EAAE,MAAM;gBAChB,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;gBAC9E,QAAQ,EAAE;oBACR,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;iBAC5D;aACF,CAAC,CAAC;QACL,CAAC;QAED,8BAA8B;QAC9B,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC/B,SAAS,CAAC,IAAI,CAAC;gBACb,EAAE,EAAE,cAAc,IAAI,CAAC,GAAG,EAAE,EAAE;gBAC9B,IAAI,EAAE,gBAAgB;gBACtB,WAAW,EAAE,+BAA+B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE;gBACpE,kBAAkB,EAAE;oBAClB,4BAA4B;oBAC5B,6CAA6C;oBAC7C,2BAA2B;oBAC3B,4CAA4C;oBAC5C,gCAAgC;oBAChC,sBAAsB;oBACtB,4BAA4B;iBAC7B;gBACD,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE,0BAA0B;gBACzE,QAAQ,EAAE,QAAQ;gBAClB,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;gBACnF,QAAQ,EAAE;oBACR,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;iBAC7C;aACF,CAAC,CAAC;QACL,CAAC;QAED,4DAA4D;QAC5D,qCAAqC;QAErC,sBAAsB;QACtB,WAAW,CAAC,iBAAiB,CAAC;YAC5B,SAAS,EAAE;gBACT,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,4BAA4B,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC3E,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,8BAA8B,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC7E,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC9D,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,+BAA+B,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC/E,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,2BAA2B,EAAE,QAAQ,EAAE,IAAI,EAAE;gBAC3E,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,iBAAiB,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACjE,EAAE,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,mBAAmB,EAAE,QAAQ,EAAE,KAAK,EAAE;aAC7E;YACD,YAAY,EAAE;gBACZ,EAAE,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,uBAAuB,EAAE,SAAS,EAAE,EAAE,EAAE;gBAC9E,EAAE,IAAI,EAAE,mBAAmB,EAAE,WAAW,EAAE,2BAA2B,EAAE,SAAS,EAAE,OAAO,EAAE;gBAC3F,EAAE,IAAI,EAAE,qBAAqB,EAAE,WAAW,EAAE,wBAAwB,EAAE,SAAS,EAAE,EAAE,EAAE;gBACrF,EAAE,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,yBAAyB,EAAE,SAAS,EAAE,MAAM,EAAE;aACrF;YACD,gBAAgB,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YACvF,eAAe,EAAE;gBACf,4CAA4C;gBAC5C,oCAAoC;gBACpC,wBAAwB;gBACxB,wBAAwB;aACzB;SACF,CAAC,CAAC;QAEH,sBAAsB;QACtB,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACrD,CAAC;aAAM,CAAC;YACN,0BAA0B;YAC1B,WAAW,CAAC,iBAAiB,CAAC;gBAC5B,OAAO,EAAE,SAAS;gBAClB,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,WAAW,EAAE,EAAE;gBACf,gBAAgB,EAAE,EAAE;gBACpB,cAAc,EAAE,iCAAiC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE;gBACzE,eAAe,EAAE,CAAC;aACnB,CAAC,CAAC;QACL,CAAC;QAED,cAAc;QACd,WAAW,CAAC,UAAU,CAAC;YACrB,OAAO,EAAE;gBACP,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI;gBAC5B,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;gBAC1C,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;aAC3C;YACD,QAAQ,EAAE;gBACR,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;gBAC9B,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW;aAC3C;YACD,SAAS,EAAE;gBACT,WAAW,EAAE;oBACX,SAAS,EAAE,IAAI,CAAC,SAAS;iBAC1B;gBACD,cAAc,EAAE;oBACd,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB;aACF;SACF,CAAC,CAAC;QAEH,4BAA4B;QAC5B,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QAE9B,sBAAsB;QACtB,MAAM,YAAY,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;QAEzC,iCAAiC;QACjC,MAAM,iBAAiB,GAA6B;YAClD,GAAG,YAAY;YACf,IAAI,EAAE,UAAU;YAChB,WAAW,EAAE;gBACX,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,WAAW,EAAE,EAAE;aAChB;YACD,cAAc,EAAE;gBACd,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,WAAW,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC;aACnD;YACD,cAAc,EAAE;gBACd,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC;aAC5C;YACD,sBAAsB,EAAE;gBACtB;oBACE,IAAI,EAAE,4BAA4B;oBAClC,WAAW,EAAE,2CAA2C;oBACxD,YAAY,EAAE,CAAC,eAAe,EAAE,gBAAgB,CAAC;oBACjD,kBAAkB,EAAE;wBAClB,4BAA4B;wBAC5B,2BAA2B;wBAC3B,uBAAuB;qBACxB;iBACF;gBACD;oBACE,IAAI,EAAE,4BAA4B;oBAClC,WAAW,EAAE,6BAA6B;oBAC1C,YAAY,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;oBAClD,kBAAkB,EAAE;wBAClB,2BAA2B;wBAC3B,2BAA2B;wBAC3B,iCAAiC;qBAClC;iBACF;gBACD;oBACE,IAAI,EAAE,uBAAuB;oBAC7B,WAAW,EAAE,yBAAyB;oBACtC,YAAY,EAAE,CAAC,eAAe,EAAE,gBAAgB,EAAE,gBAAgB,CAAC;oBACnE,kBAAkB,EAAE;wBAClB,0BAA0B;wBAC1B,yBAAyB;wBACzB,0BAA0B;wBAC1B,wBAAwB;qBACzB;iBACF;aACF;SACF,CAAC;QAEF,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,gBAAgB;QAIpB,iBAAiB;QACjB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;QAEpC,oBAAoB;QACpB,MAAM,SAAS,GAAG,IAAI,yCAAiB,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/D,MAAM,UAAU,GAAG,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAEzD,0BAA0B;QAC1B,MAAM,OAAO,GAAG,IAAA,8CAAwB,GAAE,CAAC;QAC3C,MAAM,OAAO,CAAC,oBAAoB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAEzD,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACtB,OAAO,CAAC,IAAI,CAAC,6BAA6B,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QACjE,CAAC;QAED,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,MAAuB;QACjD,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YAC7B;gBACE,KAAK,EAAE,KAAK,CAAC,IAAI;gBACjB,SAAS,EAAE,QAAiB;gBAC5B,KAAK,EAAE,wBAAwB,CAAC,oCAAoC;aACrE;YACD;gBACE,KAAK,EAAE,KAAK,CAAC,IAAI;gBACjB,SAAS,EAAE,QAAiB;gBAC5B,KAAK,EAAE,wBAAwB;aAChC;YACD;gBACE,KAAK,EAAE,KAAK,CAAC,IAAI;gBACjB,SAAS,EAAE,QAAiB;gBAC5B,KAAK,EAAE,wBAAwB;aAChC;YACD;gBACE,KAAK,EAAE,KAAK,CAAC,IAAI;gBACjB,SAAS,EAAE,QAAiB;gBAC5B,KAAK,EAAE,wBAAwB;aAChC;SACF,CAAC,CAAC;IACL,CAAC;CACF;AArTD,0DAqTC;AAED;;GAEG;AACI,KAAK,UAAU,sBAAsB,CAC1C,YAAiC,EACjC,MAKC;IAED,MAAM,OAAO,GAAG,IAAI,uBAAuB,CAAC,YAAY,CAAC,CAAC;IAE1D,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAExD,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;QAC1B,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IACnD,CAAC;IAED,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,MAAM,OAAO,CAAC,gBAAgB,EAAE,CAAC;IAElE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,IAAI,KAAK,CAAC,+BAA+B,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrG,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/contracts/three-tier-handoff.ts"],"sourcesContent":["/**\n * Three-Tier Handoff Helper\n *\n * Simplifies creating and managing three-tier architecture handoffs:\n * Alex-BA â†’ (Dana-Database + Marcus-Backend + James-Frontend)\n *\n * This is the most common VERSATIL workflow for full-stack features.\n */\n\nimport {\n  AgentHandoffContract,\n  ThreeTierHandoffContract,\n  WorkItem,\n  MemorySnapshot,\n  ContractBuilder\n} from './agent-handoff-contract.js';\nimport { ContractValidator, validateContract } from './contract-validator.js';\nimport { getGlobalContractTracker } from './contract-tracker.js';\n\n/**\n * Feature requirements for three-tier handoff\n */\nexport interface FeatureRequirements {\n  /**\n   * Feature name\n   */\n  name: string;\n\n  /**\n   * Feature description\n   */\n  description: string;\n\n  /**\n   * User stories\n   */\n  userStories: string[];\n\n  /**\n   * Business goals\n   */\n  goals?: string[];\n\n  /**\n   * Technical constraints\n   */\n  constraints?: string[];\n}\n\n/**\n * API endpoint definition\n */\nexport interface APIEndpoint {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n  path: string;\n  description: string;\n  requestSchema?: Record<string, any>;\n  responseSchema?: Record<string, any>;\n  authentication?: boolean;\n}\n\n/**\n * Database table definition\n */\nexport interface DatabaseTable {\n  name: string;\n  columns: Array<{\n    name: string;\n    type: string;\n    nullable?: boolean;\n    unique?: boolean;\n    default?: any;\n  }>;\n  indexes?: Array<{\n    columns: string[];\n    unique?: boolean;\n  }>;\n  foreignKeys?: Array<{\n    column: string;\n    references: string;\n    onDelete?: 'CASCADE' | 'SET NULL' | 'RESTRICT';\n  }>;\n}\n\n/**\n * UI component definition\n */\nexport interface UIComponent {\n  name: string;\n  type: 'page' | 'component' | 'hook' | 'util';\n  description: string;\n  props?: Record<string, any>;\n}\n\n/**\n * Three-tier handoff builder\n */\nexport class ThreeTierHandoffBuilder {\n  private requirements: FeatureRequirements;\n  private endpoints: APIEndpoint[] = [];\n  private tables: DatabaseTable[] = [];\n  private components: UIComponent[] = [];\n  private memorySnapshot?: MemorySnapshot;\n\n  constructor(requirements: FeatureRequirements) {\n    this.requirements = requirements;\n  }\n\n  /**\n   * Add API endpoint\n   */\n  addEndpoint(endpoint: APIEndpoint): this {\n    this.endpoints.push(endpoint);\n    return this;\n  }\n\n  /**\n   * Add database table\n   */\n  addTable(table: DatabaseTable): this {\n    this.tables.push(table);\n    return this;\n  }\n\n  /**\n   * Add UI component\n   */\n  addComponent(component: UIComponent): this {\n    this.components.push(component);\n    return this;\n  }\n\n  /**\n   * Set memory snapshot\n   */\n  setMemorySnapshot(snapshot: MemorySnapshot): this {\n    this.memorySnapshot = snapshot;\n    return this;\n  }\n\n  /**\n   * Build the three-tier handoff contract\n   */\n  async build(): Promise<ThreeTierHandoffContract> {\n    // Create base contract using ContractBuilder\n    const baseBuilder = new ContractBuilder('alex-ba');\n\n    // Add receivers (Dana, Marcus, James)\n    baseBuilder\n      .addReceiver('dana-database', 'database')\n      .addReceiver('marcus-backend', 'api')\n      .addReceiver('james-frontend', 'frontend');\n\n    // Set handoff type to parallel\n    baseBuilder.setType('parallel');\n\n    // Create work items for each tier\n    const workItems: WorkItem[] = [];\n\n    // Dana's work: Database schema\n    if (this.tables.length > 0) {\n      workItems.push({\n        id: `work-dana-${Date.now()}`,\n        type: 'implementation',\n        description: `Implement database schema for ${this.requirements.name}`,\n        acceptanceCriteria: [\n          'All tables created with correct schema',\n          'Indexes added for performance',\n          'Foreign keys configured',\n          'RLS policies implemented',\n          'Migration scripts created'\n        ],\n        estimatedEffort: this.tables.length * 1.5, // 1.5 hours per table\n        priority: 'high',\n        metadata: {\n          tables: this.tables.map(t => t.name)\n        }\n      });\n    }\n\n    // Marcus's work: API implementation\n    if (this.endpoints.length > 0) {\n      workItems.push({\n        id: `work-marcus-${Date.now()}`,\n        type: 'implementation',\n        description: `Implement API endpoints for ${this.requirements.name}`,\n        acceptanceCriteria: [\n          'All endpoints implemented',\n          'Request/response validation with Zod',\n          'Authentication/authorization configured',\n          'Error handling implemented',\n          'OWASP security compliance',\n          'Response time < 200ms',\n          'Stress tests generated and passing'\n        ],\n        estimatedEffort: this.endpoints.length * 2, // 2 hours per endpoint\n        priority: 'high',\n        dependencies: this.tables.length > 0 ? [`work-dana-${Date.now()}`] : undefined,\n        metadata: {\n          endpoints: this.endpoints.map(e => `${e.method} ${e.path}`)\n        }\n      });\n    }\n\n    // James's work: UI components\n    if (this.components.length > 0) {\n      workItems.push({\n        id: `work-james-${Date.now()}`,\n        type: 'implementation',\n        description: `Implement UI components for ${this.requirements.name}`,\n        acceptanceCriteria: [\n          'All components implemented',\n          'Responsive design (mobile, tablet, desktop)',\n          'WCAG 2.1 AA accessibility',\n          'Component tests with React Testing Library',\n          'Integration with API endpoints',\n          'Error states handled',\n          'Loading states implemented'\n        ],\n        estimatedEffort: this.components.length * 1.5, // 1.5 hours per component\n        priority: 'normal',\n        dependencies: this.endpoints.length > 0 ? [`work-marcus-${Date.now()}`] : undefined,\n        metadata: {\n          components: this.components.map(c => c.name)\n        }\n      });\n    }\n\n    // Work items are part of the context, not a direct property\n    // baseBuilder.workItems = workItems;\n\n    // Set expected output\n    baseBuilder.setExpectedOutput({\n      artifacts: [\n        { type: 'code', description: 'Database migration scripts', required: true },\n        { type: 'code', description: 'API endpoint implementations', required: true },\n        { type: 'code', description: 'UI components', required: true },\n        { type: 'tests', description: 'Database tests (RLS policies)', required: true },\n        { type: 'tests', description: 'API tests (unit + stress)', required: true },\n        { type: 'tests', description: 'Component tests', required: true },\n        { type: 'documentation', description: 'API documentation', required: false }\n      ],\n      qualityGates: [\n        { name: 'Test Coverage', description: 'Minimum test coverage', threshold: 80 },\n        { name: 'API Response Time', description: 'Maximum API response time', threshold: '200ms' },\n        { name: 'Accessibility Score', description: 'WCAG 2.1 AA compliance', threshold: 95 },\n        { name: 'Security Scan', description: 'OWASP Top 10 compliance', threshold: 'pass' }\n      ],\n      expectedDuration: workItems.reduce((sum, item) => sum + (item.estimatedEffort || 0), 0),\n      successCriteria: [\n        'All three tiers implemented and integrated',\n        'End-to-end feature works correctly',\n        'All quality gates pass',\n        'User stories fulfilled'\n      ]\n    });\n\n    // Set memory snapshot\n    if (this.memorySnapshot) {\n      baseBuilder.setMemorySnapshot(this.memorySnapshot);\n    } else {\n      // Create minimal snapshot\n      baseBuilder.setMemorySnapshot({\n        agentId: 'alex-ba',\n        timestamp: new Date(),\n        memoryFiles: {},\n        criticalPatterns: [],\n        contextSummary: `Three-tier implementation for ${this.requirements.name}`,\n        estimatedTokens: 0\n      });\n    }\n\n    // Set context\n    baseBuilder.setContext({\n      feature: {\n        name: this.requirements.name,\n        description: this.requirements.description,\n        userStories: this.requirements.userStories\n      },\n      business: {\n        goals: this.requirements.goals,\n        constraints: this.requirements.constraints\n      },\n      technical: {\n        apiContract: {\n          endpoints: this.endpoints\n        },\n        databaseSchema: {\n          tables: this.tables\n        }\n      }\n    });\n\n    // Set expiration (24 hours)\n    baseBuilder.setExpiration(24);\n\n    // Build base contract\n    const baseContract = baseBuilder.build();\n\n    // Convert to three-tier contract\n    const threeTierContract: ThreeTierHandoffContract = {\n      ...baseContract,\n      type: 'parallel',\n      apiContract: {\n        endpoints: this.endpoints,\n        sharedTypes: {}\n      },\n      databaseSchema: {\n        tables: this.tables,\n        rlsPolicies: this.generateRLSPolicies(this.tables)\n      },\n      uiRequirements: {\n        components: this.components,\n        accessibility: 'AA',\n        responsive: ['mobile', 'tablet', 'desktop']\n      },\n      integrationCheckpoints: [\n        {\n          name: 'Database â†’ API Integration',\n          description: 'Connect API to database with real queries',\n          participants: ['dana-database', 'marcus-backend'],\n          acceptanceCriteria: [\n            'API can read from database',\n            'API can write to database',\n            'RLS policies enforced'\n          ]\n        },\n        {\n          name: 'API â†’ Frontend Integration',\n          description: 'Connect UI to API endpoints',\n          participants: ['marcus-backend', 'james-frontend'],\n          acceptanceCriteria: [\n            'UI can call API endpoints',\n            'Authentication flows work',\n            'Error handling works end-to-end'\n          ]\n        },\n        {\n          name: 'End-to-End Validation',\n          description: 'Full feature validation',\n          participants: ['dana-database', 'marcus-backend', 'james-frontend'],\n          acceptanceCriteria: [\n            'Complete user flow works',\n            'Data persists correctly',\n            'UI reflects data changes',\n            'All quality gates pass'\n          ]\n        }\n      ]\n    };\n\n    return threeTierContract;\n  }\n\n  /**\n   * Build, validate, and track the contract\n   */\n  async buildAndValidate(): Promise<{\n    contract: ThreeTierHandoffContract;\n    validation: any;\n  }> {\n    // Build contract\n    const contract = await this.build();\n\n    // Validate contract\n    const validator = new ContractValidator({ strictMode: false });\n    const validation = validator.validateThreeTier(contract);\n\n    // Track contract creation\n    const tracker = getGlobalContractTracker();\n    await tracker.trackContractCreated(contract, validation);\n\n    if (!validation.valid) {\n      console.warn('Contract validation failed:', validation.errors);\n    }\n\n    return { contract, validation };\n  }\n\n  /**\n   * Generate RLS policies for tables\n   */\n  private generateRLSPolicies(tables: DatabaseTable[]) {\n    return tables.flatMap(table => [\n      {\n        table: table.name,\n        operation: 'SELECT' as const,\n        using: 'auth.uid() IS NOT NULL' // Basic: user must be authenticated\n      },\n      {\n        table: table.name,\n        operation: 'INSERT' as const,\n        using: 'auth.uid() IS NOT NULL'\n      },\n      {\n        table: table.name,\n        operation: 'UPDATE' as const,\n        using: 'auth.uid() IS NOT NULL'\n      },\n      {\n        table: table.name,\n        operation: 'DELETE' as const,\n        using: 'auth.uid() IS NOT NULL'\n      }\n    ]);\n  }\n}\n\n/**\n * Quick helper to create three-tier handoff\n */\nexport async function createThreeTierHandoff(\n  requirements: FeatureRequirements,\n  config: {\n    endpoints: APIEndpoint[];\n    tables: DatabaseTable[];\n    components: UIComponent[];\n    memorySnapshot?: MemorySnapshot;\n  }\n): Promise<ThreeTierHandoffContract> {\n  const builder = new ThreeTierHandoffBuilder(requirements);\n\n  config.endpoints.forEach(e => builder.addEndpoint(e));\n  config.tables.forEach(t => builder.addTable(t));\n  config.components.forEach(c => builder.addComponent(c));\n\n  if (config.memorySnapshot) {\n    builder.setMemorySnapshot(config.memorySnapshot);\n  }\n\n  const { contract, validation } = await builder.buildAndValidate();\n\n  if (!validation.valid) {\n    throw new Error(`Contract validation failed: ${validation.errors.map(e => e.message).join(', ')}`);\n  }\n\n  return contract;\n}\n"],"version":3}