{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/tests/unit/contracts/contract-validator.test.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/tests/unit/contracts/contract-validator.test.ts"],"sourcesContent":["/**\n * Unit Tests: Contract Validator\n *\n * Coverage Target: 90%+ (critical path)\n *\n * Test Coverage:\n * - Schema validation (required fields, types)\n * - Business logic validation (work items, criteria)\n * - Memory snapshot validation\n * - Quality gates validation\n * - Three-tier contract validation\n * - Strict mode behavior\n * - Quality score calculation\n * - Error and warning generation\n */\n\nimport { describe, it, expect, beforeEach } from '@jest/globals';\nimport {\n  ContractValidator,\n  validateContract,\n  ValidationResult,\n  ValidationOptions\n} from '../../../src/agents/contracts/contract-validator.js';\nimport {\n  AgentHandoffContract,\n  ThreeTierHandoffContract,\n  ContractBuilder,\n  CONTRACT_VERSION\n} from '../../../src/agents/contracts/agent-handoff-contract.js';\n\ndescribe('ContractValidator', () => {\n  let validator: ContractValidator;\n\n  beforeEach(() => {\n    validator = new ContractValidator();\n  });\n\n  describe('Schema Validation', () => {\n    it('should validate a complete valid contract', async () => {\n      const contract = createValidContract();\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(true);\n      expect(result.errors).toHaveLength(0);\n      expect(result.score).toBeGreaterThan(90);\n    });\n\n    it('should reject contract without contractId', async () => {\n      const contract = createValidContract();\n      contract.contractId = '' as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'contractId',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should reject contract without version', async () => {\n      const contract = createValidContract();\n      contract.version = '' as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'version',\n            severity: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should warn on version mismatch', async () => {\n      const contract = createValidContract();\n      contract.version = '0.9.0'; // Different from CONTRACT_VERSION\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'version',\n            impact: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should reject contract without sender', async () => {\n      const contract = createValidContract();\n      contract.sender = {} as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'sender.agentId',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should reject contract without receivers', async () => {\n      const contract = createValidContract();\n      contract.receivers = [];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'receivers',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should reject contract without type', async () => {\n      const contract = createValidContract();\n      contract.type = undefined as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'type',\n            severity: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should reject contract without work items', async () => {\n      const contract = createValidContract();\n      contract.workItems = [];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'workItems',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should reject contract without memory snapshot', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot = undefined as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot',\n            severity: 'high'\n          })\n        ])\n      );\n    });\n  });\n\n  describe('Business Logic Validation', () => {\n    it('should reject work item without id', async () => {\n      const contract = createValidContract();\n      contract.workItems[0].id = '' as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'workItems[0].id',\n            severity: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should reject work item without description', async () => {\n      const contract = createValidContract();\n      contract.workItems[0].description = '';\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'workItems[0].description',\n            severity: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should warn on work item without acceptance criteria', async () => {\n      const contract = createValidContract();\n      contract.workItems[0].acceptanceCriteria = [];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'workItems[0].acceptanceCriteria',\n            impact: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should reject circular dependencies', async () => {\n      const contract = createValidContract();\n      contract.workItems[0].dependencies = [contract.workItems[0].id];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'workItems[0].dependencies',\n            severity: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should warn on missing expected output', async () => {\n      const contract = createValidContract();\n      contract.expectedOutput = undefined as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'expectedOutput',\n            impact: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should warn on missing artifacts', async () => {\n      const contract = createValidContract();\n      contract.expectedOutput.artifacts = [];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'expectedOutput.artifacts',\n            impact: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should warn on missing success criteria', async () => {\n      const contract = createValidContract();\n      contract.expectedOutput.successCriteria = [];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'expectedOutput.successCriteria',\n            impact: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should warn on sequential handoff with multiple receivers', async () => {\n      const contract = createValidContract();\n      contract.type = 'sequential';\n      contract.receivers = [\n        { agentId: 'marcus-backend' },\n        { agentId: 'james-frontend' }\n      ];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'type',\n            impact: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should warn on parallel handoff with single receiver', async () => {\n      const contract = createValidContract();\n      contract.type = 'parallel';\n      contract.receivers = [{ agentId: 'marcus-backend' }];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'type',\n            impact: 'low'\n          })\n        ])\n      );\n    });\n  });\n\n  describe('Memory Snapshot Validation', () => {\n    it('should reject missing memory snapshot', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot = null as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should reject snapshot without agentId', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot.agentId = '' as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot.agentId',\n            severity: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should reject snapshot without timestamp', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot.timestamp = null as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot.timestamp',\n            severity: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should warn on empty context summary', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot.contextSummary = '';\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot.contextSummary',\n            impact: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should warn on empty memory files', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot.memoryFiles = {};\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot.memoryFiles',\n            impact: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should warn on empty critical patterns', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot.criticalPatterns = [];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot.criticalPatterns',\n            impact: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should warn on zero token estimate', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot.estimatedTokens = 0;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot.estimatedTokens',\n            impact: 'low'\n          })\n        ])\n      );\n    });\n\n    it('should warn on large snapshot', async () => {\n      const contract = createValidContract();\n      contract.memorySnapshot.estimatedTokens = 60000;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'memorySnapshot.estimatedTokens',\n            impact: 'medium'\n          })\n        ])\n      );\n    });\n  });\n\n  describe('Quality Gates Validation', () => {\n    it('should warn on missing quality gates', async () => {\n      const contract = createValidContract();\n      contract.expectedOutput.qualityGates = undefined;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'expectedOutput.qualityGates',\n            impact: 'high'\n          })\n        ])\n      );\n    });\n\n    it('should reject quality gate without name', async () => {\n      const contract = createValidContract();\n      contract.expectedOutput.qualityGates = [\n        { name: '', description: 'Test coverage', threshold: 80 }\n      ];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'expectedOutput.qualityGates[0].name',\n            severity: 'medium'\n          })\n        ])\n      );\n    });\n\n    it('should warn on quality gate without threshold', async () => {\n      const contract = createValidContract();\n      contract.expectedOutput.qualityGates = [\n        { name: 'Coverage', description: 'Test coverage', threshold: undefined as any }\n      ];\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'expectedOutput.qualityGates[0].threshold',\n            impact: 'high'\n          })\n        ])\n      );\n    });\n  });\n\n  describe('Three-Tier Contract Validation', () => {\n    it('should validate complete three-tier contract', () => {\n      const contract = createValidThreeTierContract();\n      const result = validator.validateThreeTier(contract);\n\n      expect(result.valid).toBe(true);\n      expect(result.errors).toHaveLength(0);\n    });\n\n    it('should reject three-tier contract without API endpoints', () => {\n      const contract = createValidThreeTierContract();\n      contract.apiContract.endpoints = [];\n\n      const result = validator.validateThreeTier(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'apiContract.endpoints',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should reject three-tier contract without database tables', () => {\n      const contract = createValidThreeTierContract();\n      contract.databaseSchema.tables = [];\n\n      const result = validator.validateThreeTier(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'databaseSchema.tables',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should reject three-tier contract without UI components', () => {\n      const contract = createValidThreeTierContract();\n      contract.uiRequirements.components = [];\n\n      const result = validator.validateThreeTier(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'uiRequirements.components',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should warn on missing required agents', () => {\n      const contract = createValidThreeTierContract();\n      contract.receivers = [\n        { agentId: 'marcus-backend', role: 'api' },\n        { agentId: 'james-frontend', role: 'frontend' }\n        // Missing dana-database\n      ];\n\n      const result = validator.validateThreeTier(contract);\n\n      expect(result.warnings).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'receivers',\n            impact: 'high'\n          })\n        ])\n      );\n    });\n  });\n\n  describe('Validation After Receive', () => {\n    it('should reject expired contract', async () => {\n      const contract = createValidContract();\n      contract.expiresAt = new Date(Date.now() - 1000); // Expired 1 second ago\n\n      const result = await validator.validateAfterReceive(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'expiresAt',\n            severity: 'critical'\n          })\n        ])\n      );\n    });\n\n    it('should accept non-expired contract', async () => {\n      const contract = createValidContract();\n      contract.expiresAt = new Date(Date.now() + 3600000); // Expires in 1 hour\n\n      const result = await validator.validateAfterReceive(contract);\n\n      expect(result.valid).toBe(true);\n    });\n\n    it('should accept contract without expiration', async () => {\n      const contract = createValidContract();\n      contract.expiresAt = undefined;\n\n      const result = await validator.validateAfterReceive(contract);\n\n      expect(result.valid).toBe(true);\n    });\n  });\n\n  describe('Strict Mode', () => {\n    it('should convert warnings to errors in strict mode', async () => {\n      const strictValidator = new ContractValidator({ strictMode: true });\n      const contract = createValidContract();\n      contract.workItems[0].acceptanceCriteria = []; // This normally generates warning\n\n      const result = await strictValidator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.errors).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({\n            field: 'workItems[0].acceptanceCriteria'\n          })\n        ])\n      );\n      expect(result.warnings).toHaveLength(0);\n    });\n\n    it('should enforce minimum quality score in strict mode', async () => {\n      const strictValidator = new ContractValidator({\n        strictMode: true,\n        minQualityScore: 90\n      });\n\n      const contract = createValidContract();\n      // Add multiple issues to lower score\n      contract.workItems[0].acceptanceCriteria = [];\n      contract.expectedOutput.artifacts = [];\n      contract.memorySnapshot.memoryFiles = {};\n\n      const result = await strictValidator.validateBeforeSend(contract);\n\n      expect(result.valid).toBe(false);\n      expect(result.score).toBeLessThan(90);\n    });\n  });\n\n  describe('Quality Score Calculation', () => {\n    it('should calculate perfect score for valid contract', async () => {\n      const contract = createValidContract();\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.score).toBe(100);\n    });\n\n    it('should deduct points for errors', async () => {\n      const contract = createValidContract();\n      contract.contractId = '' as any; // Critical error (-15)\n      contract.version = '' as any; // High error (-15)\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.score).toBeLessThanOrEqual(70);\n    });\n\n    it('should deduct points for warnings', async () => {\n      const contract = createValidContract();\n      contract.workItems[0].acceptanceCriteria = []; // Warning (-5)\n      contract.memorySnapshot.memoryFiles = {}; // Warning (-4)\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.score).toBeLessThan(100);\n      expect(result.score).toBeGreaterThan(85);\n    });\n\n    it('should clamp score between 0 and 100', async () => {\n      const contract = createValidContract();\n      // Add many errors to push score below 0\n      contract.contractId = '' as any;\n      contract.version = '' as any;\n      contract.sender = {} as any;\n      contract.receivers = [];\n      contract.type = undefined as any;\n      contract.workItems = [];\n      contract.memorySnapshot = null as any;\n\n      const result = await validator.validateBeforeSend(contract);\n\n      expect(result.score).toBeGreaterThanOrEqual(0);\n      expect(result.score).toBeLessThanOrEqual(100);\n    });\n  });\n\n  describe('Validation Options', () => {\n    it('should skip schema validation when disabled', async () => {\n      const customValidator = new ContractValidator({ validateSchema: false });\n      const contract = createValidContract();\n      contract.contractId = '' as any; // Would normally fail schema validation\n\n      const result = await customValidator.validateBeforeSend(contract);\n\n      // Should not have schema validation errors\n      const schemaErrors = result.errors.filter(e => e.field === 'contractId');\n      expect(schemaErrors).toHaveLength(0);\n    });\n\n    it('should skip business validation when disabled', async () => {\n      const customValidator = new ContractValidator({ validateBusiness: false });\n      const contract = createValidContract();\n      contract.workItems[0].acceptanceCriteria = []; // Would normally generate warning\n\n      const result = await customValidator.validateBeforeSend(contract);\n\n      // Should not have business validation warnings\n      const businessWarnings = result.warnings.filter(\n        w => w.field === 'workItems[0].acceptanceCriteria'\n      );\n      expect(businessWarnings).toHaveLength(0);\n    });\n\n    it('should skip memory validation when disabled', async () => {\n      const customValidator = new ContractValidator({ validateMemory: false });\n      const contract = createValidContract();\n      contract.memorySnapshot.agentId = '' as any; // Would normally fail\n\n      const result = await customValidator.validateBeforeSend(contract);\n\n      // Should not have memory validation errors\n      const memoryErrors = result.errors.filter(e => e.field.startsWith('memorySnapshot'));\n      expect(memoryErrors).toHaveLength(0);\n    });\n\n    it('should skip quality validation when disabled', async () => {\n      const customValidator = new ContractValidator({ validateQuality: false });\n      const contract = createValidContract();\n      contract.expectedOutput.qualityGates = [\n        { name: '', description: 'Test', threshold: 80 }\n      ]; // Would normally fail\n\n      const result = await customValidator.validateBeforeSend(contract);\n\n      // Should not have quality validation errors\n      const qualityErrors = result.errors.filter(e => e.field.startsWith('expectedOutput.qualityGates'));\n      expect(qualityErrors).toHaveLength(0);\n    });\n  });\n\n  describe('Quick Validation Helper', () => {\n    it('should validate contract using helper function', async () => {\n      const contract = createValidContract();\n      const result = await validateContract(contract);\n\n      expect(result.valid).toBe(true);\n      expect(result.score).toBe(100);\n    });\n\n    it('should accept options in helper function', async () => {\n      const contract = createValidContract();\n      contract.workItems[0].acceptanceCriteria = [];\n\n      const result = await validateContract(contract, { strictMode: true });\n\n      expect(result.valid).toBe(false);\n    });\n  });\n});\n\n// Helper functions\n\nfunction createValidContract(): AgentHandoffContract {\n  const builder = new ContractBuilder('alex-ba');\n\n  builder\n    .addReceiver('marcus-backend', 'api')\n    .setType('sequential')\n    .setPriority('normal')\n    .addWorkItem({\n      id: 'work-1',\n      type: 'implementation',\n      description: 'Implement user authentication API',\n      acceptanceCriteria: [\n        'POST /api/auth/login endpoint created',\n        'JWT token generation implemented',\n        'Password hashing with bcrypt'\n      ],\n      priority: 'high'\n    })\n    .setExpectedOutput({\n      artifacts: [\n        { type: 'code', description: 'API endpoints', required: true },\n        { type: 'tests', description: 'Unit tests', required: true }\n      ],\n      qualityGates: [\n        { name: 'Test Coverage', description: 'Minimum coverage', threshold: 80 }\n      ],\n      successCriteria: [\n        'All endpoints working',\n        'Tests passing',\n        'Security scan clean'\n      ]\n    })\n    .setMemorySnapshot({\n      agentId: 'alex-ba',\n      timestamp: new Date(),\n      memoryFiles: {\n        'requirements/auth.md': 'User authentication requirements'\n      },\n      criticalPatterns: [\n        {\n          category: 'security',\n          title: 'JWT authentication pattern',\n          content: 'Use httpOnly cookies for tokens'\n        }\n      ],\n      contextSummary: 'Implementing user authentication system',\n      estimatedTokens: 5000\n    })\n    .setContext({\n      feature: {\n        name: 'User Authentication',\n        description: 'Secure user login and session management'\n      }\n    })\n    .setExpiration(24);\n\n  return builder.build();\n}\n\nfunction createValidThreeTierContract(): ThreeTierHandoffContract {\n  const baseContract = createValidContract();\n\n  return {\n    ...baseContract,\n    type: 'parallel',\n    receivers: [\n      { agentId: 'dana-database', role: 'database' },\n      { agentId: 'marcus-backend', role: 'api' },\n      { agentId: 'james-frontend', role: 'frontend' }\n    ],\n    apiContract: {\n      endpoints: [\n        {\n          method: 'POST',\n          path: '/api/auth/login',\n          description: 'User login',\n          authentication: false\n        }\n      ],\n      sharedTypes: {}\n    },\n    databaseSchema: {\n      tables: [\n        {\n          name: 'users',\n          columns: [\n            { name: 'id', type: 'uuid', nullable: false },\n            { name: 'email', type: 'text', nullable: false, unique: true },\n            { name: 'password_hash', type: 'text', nullable: false }\n          ]\n        }\n      ],\n      rlsPolicies: [\n        {\n          table: 'users',\n          operation: 'SELECT',\n          using: 'auth.uid() = id'\n        }\n      ]\n    },\n    uiRequirements: {\n      components: [\n        {\n          name: 'LoginForm',\n          type: 'component',\n          description: 'User login form'\n        }\n      ],\n      accessibility: 'AA',\n      responsive: ['mobile', 'tablet', 'desktop']\n    },\n    integrationCheckpoints: [\n      {\n        name: 'Database → API Integration',\n        description: 'Connect API to database',\n        participants: ['dana-database', 'marcus-backend'],\n        acceptanceCriteria: ['API can query database']\n      }\n    ]\n  };\n}\n"],"version":3}