{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/src/config/config-validator.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/src/config/config-validator.ts"],"sourcesContent":["/**\n * VERSATIL SDLC Framework - Configuration Validator\n * Validate and sanitize user configurations\n */\n\nimport { UserPreferences, UpdateChannel, UpdateBehavior, SafetyLevel, RollbackBehavior, NotificationLevel } from './preference-manager.js';\n\nexport interface ValidationResult {\n  valid: boolean;\n  errors: ValidationError[];\n  warnings: ValidationWarning[];\n  suggestions: string[];\n}\n\nexport interface ValidationError {\n  field: string;\n  message: string;\n  severity: 'error' | 'warning';\n}\n\nexport interface ValidationWarning {\n  field: string;\n  message: string;\n  recommendation: string;\n}\n\nexport class ConfigValidator {\n  /**\n   * Validate full preferences object\n   */\n  validate(preferences: Partial<UserPreferences>): ValidationResult {\n    const errors: ValidationError[] = [];\n    const warnings: ValidationWarning[] = [];\n    const suggestions: string[] = [];\n\n    // Validate each field\n    errors.push(...this.validateUpdateBehavior(preferences.updateBehavior));\n    errors.push(...this.validateUpdateChannel(preferences.updateChannel));\n    errors.push(...this.validateSafetyLevel(preferences.safetyLevel));\n    errors.push(...this.validateCheckFrequency(preferences.checkFrequency));\n    errors.push(...this.validateRollbackBehavior(preferences.rollbackBehavior));\n    errors.push(...this.validateMaxRollbackPoints(preferences.maxRollbackPoints));\n    errors.push(...this.validateNotificationLevel(preferences.notificationLevel));\n\n    // Check for logical inconsistencies\n    warnings.push(...this.checkLogicalConsistency(preferences));\n\n    // Generate suggestions\n    suggestions.push(...this.generateSuggestions(preferences));\n\n    return {\n      valid: errors.filter(e => e.severity === 'error').length === 0,\n      errors,\n      warnings,\n      suggestions\n    };\n  }\n\n  /**\n   * Validate update behavior\n   */\n  private validateUpdateBehavior(value?: UpdateBehavior): ValidationError[] {\n    if (!value) return [];\n\n    const validValues: UpdateBehavior[] = ['auto', 'notify', 'manual'];\n\n    if (!validValues.includes(value)) {\n      return [\n        {\n          field: 'updateBehavior',\n          message: `Invalid value: ${value}. Must be one of: ${validValues.join(', ')}`,\n          severity: 'error'\n        }\n      ];\n    }\n\n    return [];\n  }\n\n  /**\n   * Validate update channel\n   */\n  private validateUpdateChannel(value?: UpdateChannel): ValidationError[] {\n    if (!value) return [];\n\n    const validValues: UpdateChannel[] = ['stable', 'beta', 'alpha', 'nightly'];\n\n    if (!validValues.includes(value)) {\n      return [\n        {\n          field: 'updateChannel',\n          message: `Invalid value: ${value}. Must be one of: ${validValues.join(', ')}`,\n          severity: 'error'\n        }\n      ];\n    }\n\n    return [];\n  }\n\n  /**\n   * Validate safety level\n   */\n  private validateSafetyLevel(value?: SafetyLevel): ValidationError[] {\n    if (!value) return [];\n\n    const validValues: SafetyLevel[] = ['conservative', 'balanced', 'fast'];\n\n    if (!validValues.includes(value)) {\n      return [\n        {\n          field: 'safetyLevel',\n          message: `Invalid value: ${value}. Must be one of: ${validValues.join(', ')}`,\n          severity: 'error'\n        }\n      ];\n    }\n\n    return [];\n  }\n\n  /**\n   * Validate check frequency\n   */\n  private validateCheckFrequency(value?: number): ValidationError[] {\n    if (value === undefined) return [];\n\n    if (typeof value !== 'number') {\n      return [\n        {\n          field: 'checkFrequency',\n          message: 'Must be a number',\n          severity: 'error'\n        }\n      ];\n    }\n\n    if (value < 0) {\n      return [\n        {\n          field: 'checkFrequency',\n          message: 'Must be >= 0',\n          severity: 'error'\n        }\n      ];\n    }\n\n    if (value > 0 && value < 1) {\n      return [\n        {\n          field: 'checkFrequency',\n          message: 'Check frequency < 1 hour may impact performance',\n          severity: 'warning'\n        }\n      ];\n    }\n\n    return [];\n  }\n\n  /**\n   * Validate rollback behavior\n   */\n  private validateRollbackBehavior(value?: RollbackBehavior): ValidationError[] {\n    if (!value) return [];\n\n    const validValues: RollbackBehavior[] = ['auto', 'prompt', 'manual'];\n\n    if (!validValues.includes(value)) {\n      return [\n        {\n          field: 'rollbackBehavior',\n          message: `Invalid value: ${value}. Must be one of: ${validValues.join(', ')}`,\n          severity: 'error'\n        }\n      ];\n    }\n\n    return [];\n  }\n\n  /**\n   * Validate max rollback points\n   */\n  private validateMaxRollbackPoints(value?: number): ValidationError[] {\n    if (value === undefined) return [];\n\n    if (typeof value !== 'number') {\n      return [\n        {\n          field: 'maxRollbackPoints',\n          message: 'Must be a number',\n          severity: 'error'\n        }\n      ];\n    }\n\n    if (value < 0) {\n      return [\n        {\n          field: 'maxRollbackPoints',\n          message: 'Must be >= 0',\n          severity: 'error'\n        }\n      ];\n    }\n\n    if (value === 0) {\n      return [\n        {\n          field: 'maxRollbackPoints',\n          message: 'No rollback points will be saved. Consider setting to at least 1.',\n          severity: 'warning'\n        }\n      ];\n    }\n\n    if (value > 20) {\n      return [\n        {\n          field: 'maxRollbackPoints',\n          message: 'Large number of rollback points may consume disk space',\n          severity: 'warning'\n        }\n      ];\n    }\n\n    return [];\n  }\n\n  /**\n   * Validate notification level\n   */\n  private validateNotificationLevel(value?: NotificationLevel): ValidationError[] {\n    if (!value) return [];\n\n    const validValues: NotificationLevel[] = ['all', 'important', 'critical', 'none'];\n\n    if (!validValues.includes(value)) {\n      return [\n        {\n          field: 'notificationLevel',\n          message: `Invalid value: ${value}. Must be one of: ${validValues.join(', ')}`,\n          severity: 'error'\n        }\n      ];\n    }\n\n    return [];\n  }\n\n  /**\n   * Check for logical inconsistencies\n   */\n  private checkLogicalConsistency(preferences: Partial<UserPreferences>): ValidationWarning[] {\n    const warnings: ValidationWarning[] = [];\n\n    // Check: auto updates without rollback\n    if (preferences.updateBehavior === 'auto' && preferences.rollbackOnFailure === false) {\n      warnings.push({\n        field: 'updateBehavior',\n        message: 'Auto updates without auto-rollback can be risky',\n        recommendation: 'Consider enabling rollbackOnFailure for safety'\n      });\n    }\n\n    // Check: aggressive channel with conservative safety\n    if (\n      (preferences.updateChannel === 'alpha' || preferences.updateChannel === 'nightly') &&\n      preferences.safetyLevel === 'conservative'\n    ) {\n      warnings.push({\n        field: 'updateChannel',\n        message: 'Alpha/nightly channel with conservative safety is contradictory',\n        recommendation: 'Consider using stable channel or balanced/fast safety level'\n      });\n    }\n\n    // Check: no backups with auto updates\n    if (preferences.updateBehavior === 'auto' && preferences.backupBeforeUpdate === false) {\n      warnings.push({\n        field: 'backupBeforeUpdate',\n        message: 'Auto updates without backups is risky',\n        recommendation: 'Enable backupBeforeUpdate for safety'\n      });\n    }\n\n    // Check: no validation after update\n    if (preferences.validateAfterUpdate === false) {\n      warnings.push({\n        field: 'validateAfterUpdate',\n        message: 'Skipping validation can lead to undetected issues',\n        recommendation: 'Enable validateAfterUpdate to catch problems early'\n      });\n    }\n\n    // Check: manual updates with frequent checks\n    if (preferences.updateBehavior === 'manual' && preferences.checkFrequency !== undefined && preferences.checkFrequency < 24) {\n      warnings.push({\n        field: 'checkFrequency',\n        message: 'Frequent update checks with manual updates is unnecessary',\n        recommendation: 'Increase checkFrequency to reduce overhead'\n      });\n    }\n\n    // Check: no notifications with auto updates\n    if (preferences.updateBehavior === 'auto' && preferences.notificationLevel === 'none') {\n      warnings.push({\n        field: 'notificationLevel',\n        message: 'Auto updates with no notifications means you won\\'t know when updates happen',\n        recommendation: 'Set notificationLevel to at least \"important\"'\n      });\n    }\n\n    // Check: prerelease on stable channel\n    if (preferences.allowPrerelease === true && preferences.updateChannel === 'stable') {\n      warnings.push({\n        field: 'allowPrerelease',\n        message: 'Allowing prerelease on stable channel is contradictory',\n        recommendation: 'Either disable allowPrerelease or switch to beta/alpha channel'\n      });\n    }\n\n    return warnings;\n  }\n\n  /**\n   * Generate suggestions based on preferences\n   */\n  private generateSuggestions(preferences: Partial<UserPreferences>): string[] {\n    const suggestions: string[] = [];\n\n    // Suggest based on update channel\n    if (preferences.updateChannel === 'alpha' || preferences.updateChannel === 'nightly') {\n      suggestions.push('You\\'re on an unstable channel. Consider increasing maxRollbackPoints.');\n    }\n\n    // Suggest based on safety level\n    if (preferences.safetyLevel === 'fast') {\n      suggestions.push('Fast safety level skips some validations. Ensure you have good backup practices.');\n    }\n\n    // Suggest based on telemetry\n    if (preferences.enableTelemetry === false) {\n      suggestions.push('Telemetry helps improve the framework. Consider enabling it to contribute to development.');\n    }\n\n    // Suggest security auto-install\n    if (preferences.autoInstallSecurity === false) {\n      suggestions.push('Auto-installing security updates is recommended for better security posture.');\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Sanitize preferences (fix invalid values)\n   */\n  sanitize(preferences: Partial<UserPreferences>): UserPreferences {\n    const sanitized = { ...preferences } as UserPreferences;\n\n    // Sanitize update behavior\n    if (sanitized.updateBehavior && !['auto', 'notify', 'manual'].includes(sanitized.updateBehavior)) {\n      sanitized.updateBehavior = 'notify';\n    }\n\n    // Sanitize update channel\n    if (sanitized.updateChannel && !['stable', 'beta', 'alpha', 'nightly'].includes(sanitized.updateChannel)) {\n      sanitized.updateChannel = 'stable';\n    }\n\n    // Sanitize safety level\n    if (sanitized.safetyLevel && !['conservative', 'balanced', 'fast'].includes(sanitized.safetyLevel)) {\n      sanitized.safetyLevel = 'balanced';\n    }\n\n    // Sanitize check frequency\n    if (sanitized.checkFrequency !== undefined) {\n      sanitized.checkFrequency = Math.max(0, sanitized.checkFrequency);\n    }\n\n    // Sanitize max rollback points\n    if (sanitized.maxRollbackPoints !== undefined) {\n      sanitized.maxRollbackPoints = Math.max(0, Math.min(50, sanitized.maxRollbackPoints));\n    }\n\n    // Sanitize rollback behavior\n    if (sanitized.rollbackBehavior && !['auto', 'prompt', 'manual'].includes(sanitized.rollbackBehavior)) {\n      sanitized.rollbackBehavior = 'prompt';\n    }\n\n    // Sanitize notification level\n    if (sanitized.notificationLevel && !['all', 'important', 'critical', 'none'].includes(sanitized.notificationLevel)) {\n      sanitized.notificationLevel = 'important';\n    }\n\n    return sanitized;\n  }\n\n  /**\n   * Generate validation report\n   */\n  generateReport(result: ValidationResult): string {\n    const lines: string[] = [];\n\n    lines.push('📋 Configuration Validation Report\\n');\n\n    if (result.valid) {\n      lines.push('✅ Configuration is valid\\n');\n    } else {\n      lines.push('❌ Configuration has errors\\n');\n    }\n\n    // Errors\n    if (result.errors.length > 0) {\n      lines.push('Errors:');\n      result.errors.forEach(error => {\n        const icon = error.severity === 'error' ? '❌' : '⚠️';\n        lines.push(`  ${icon} ${error.field}: ${error.message}`);\n      });\n      lines.push('');\n    }\n\n    // Warnings\n    if (result.warnings.length > 0) {\n      lines.push('Warnings:');\n      result.warnings.forEach(warning => {\n        lines.push(`  ⚠️  ${warning.field}: ${warning.message}`);\n        lines.push(`     → ${warning.recommendation}`);\n      });\n      lines.push('');\n    }\n\n    // Suggestions\n    if (result.suggestions.length > 0) {\n      lines.push('Suggestions:');\n      result.suggestions.forEach(suggestion => {\n        lines.push(`  💡 ${suggestion}`);\n      });\n      lines.push('');\n    }\n\n    return lines.join('\\n');\n  }\n\n  /**\n   * Validate and sanitize in one step\n   */\n  validateAndSanitize(preferences: Partial<UserPreferences>): {\n    valid: boolean;\n    sanitized: UserPreferences;\n    report: string;\n  } {\n    const validation = this.validate(preferences);\n    const sanitized = this.sanitize(preferences);\n    const report = this.generateReport(validation);\n\n    return {\n      valid: validation.valid,\n      sanitized,\n      report\n    };\n  }\n}\n\n/**\n * Default config validator instance\n */\nexport const defaultConfigValidator = new ConfigValidator();\n"],"version":3}