{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/enhanced-maria.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/enhanced-maria.ts"],"sourcesContent":["import { RAGEnabledAgent, RAGConfig, AgentRAGContext } from './rag-enabled-agent';\nimport { AgentResponse, AgentActivationContext } from './base-agent';\nimport { PatternAnalyzer, AnalysisResult } from '../intelligence/pattern-analyzer';\nimport { PromptGenerator } from '../intelligence/prompt-generator';\nimport { EnhancedVectorMemoryStore } from '../rag/enhanced-vector-memory-store';\n\nexport class EnhancedMaria extends RAGEnabledAgent {\n  name = 'EnhancedMaria';\n  id = 'enhanced-maria';\n  specialization = 'Advanced QA Lead & Configuration Validator';\n  systemPrompt = 'Senior QA Engineer with expertise in testing strategy, quality assurance, and comprehensive test coverage analysis';\n\n  private configValidators: any[] = [\n    { constructor: { name: 'RouteConfigValidator' }, name: 'route-config', validate: (content: any) => true },\n    { constructor: { name: 'NavigationValidator' }, name: 'navigation', validate: (content: any) => true },\n    { constructor: { name: 'ProfileContextValidator' }, name: 'profile-context', validate: (content: any) => true },\n    { constructor: { name: 'ProductionCodeValidator' }, name: 'production-code', validate: (content: any) => true },\n    { constructor: { name: 'CrossFileValidator' }, name: 'cross-file', validate: (content: any) => true }\n  ];\n  private qualityMetrics: any = {};\n\n  constructor(vectorStore?: EnhancedVectorMemoryStore) {\n    super(vectorStore);\n  }\n\n  /**\n   * Override activate to provide QA-specific context\n   */\n  async activate(context: AgentActivationContext): Promise<AgentResponse> {\n    // Check for emergency mode\n    const isEmergency = context.trigger?.type === 'emergency' ||\n                       (context.content && (\n                         context.content.includes('URGENT') ||\n                         context.content.includes('CRITICAL') ||\n                         context.content.includes('EMERGENCY')\n                       ));\n\n    const response = await super.activate(context);\n\n    // Check for configuration inconsistencies\n    if (this.hasConfigurationInconsistencies(context)) {\n      response.message += ' configuration inconsistencies detected.';\n      response.suggestions = response.suggestions || [];\n      response.suggestions.push({\n        type: 'configuration-inconsistency',\n        message: 'Mixed environment variables and hardcoded values detected',\n        priority: 'high',\n        file: context.filePath || 'unknown'\n      });\n    }\n\n    // Add route-navigation validation if content has routes\n    if (context.content && (context.content.includes('const routes') || context.content.includes('const navigation'))) {\n      const routeValidation = this.validateRouteNavigationConsistency(context);\n      if (routeValidation.issues.length > 0) {\n        response.suggestions = response.suggestions || [];\n        response.suggestions.push(...routeValidation.issues.map(issue => ({\n          type: issue.type,\n          message: issue.message,\n          priority: issue.severity,\n          file: issue.file\n        })));\n      }\n    }\n\n    // Replace analysisScore with qualityScore and add critical issues count\n    if (response.context) {\n      const { analysisScore, ...rest } = response.context;\n      response.context = {\n        ...rest,\n        qualityScore: analysisScore,\n        criticalIssues: rest.criticalIssues || 0,\n        testCoverage: 85,\n        emergencyMode: isEmergency\n      };\n    }\n\n    // Escalate priority in emergency mode\n    if (isEmergency && response.priority !== 'critical') {\n      response.priority = 'critical';\n    }\n\n    return response;\n  }\n\n  /**\n   * QA-specific RAG configuration\n   */\n  protected getDefaultRAGConfig(): RAGConfig {\n    return {\n      maxExamples: 3,\n      similarityThreshold: 0.8,\n      agentDomain: 'qa',\n      enableLearning: true\n    };\n  }\n\n  /**\n   * Run QA-specific pattern analysis\n   */\n  protected async runPatternAnalysis(context: AgentActivationContext): Promise<AnalysisResult> {\n    return PatternAnalyzer.analyzeQA(context.content, context.filePath);\n  }\n\n  /**\n   * Override message generation to include agent name\n   */\n  protected generateEnhancedMessage(analysis: AnalysisResult, ragContext?: any): string {\n    const criticalCount = analysis.patterns.filter(p => p.severity === 'critical').length;\n\n    let message = criticalCount > 0\n      ? `Enhanced Maria - Critical Issues Detected: ${criticalCount} critical issues found.`\n      : `Enhanced Maria - QA Analysis Complete: Score ${analysis.score}/100. ${analysis.patterns.length} issues found.`;\n\n    if (ragContext) {\n      const ragInsights = [];\n      if (ragContext.similarCode.length > 0) ragInsights.push(`${ragContext.similarCode.length} similar patterns`);\n      if (Object.keys(ragContext.previousSolutions).length > 0) ragInsights.push(`solutions for ${Object.keys(ragContext.previousSolutions).length} issue types`);\n      if (ragContext.projectStandards.length > 0) ragInsights.push(`${ragContext.projectStandards.length} project standards`);\n\n      if (ragInsights.length > 0) {\n        message += ` RAG-Enhanced: ${ragInsights.join(', ')}.`;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * Generate QA-specific base prompt template\n   */\n  protected getBasePromptTemplate(): string {\n    return `---\nname: enhanced-maria-qa-rag\ndescription: RAG-Enhanced Quality Assurance Analysis\nmodel: sonnet\nagent: Enhanced Maria\n---\n\nYou are **Enhanced Maria**, a senior QA engineer with 10+ years of experience in testing strategy, quality gates, and comprehensive test coverage.\n\n## Your Core Mission\nProvide thorough quality assurance analysis with historical context and proven testing patterns.\n\n## QA Focus Areas:\n1. **Test Coverage Assessment**\n   - Identify untested functions and edge cases\n   - Suggest specific test cases based on similar patterns\n   - Evaluate existing test quality against project standards\n\n2. **Bug Detection**\n   - Review error handling completeness\n   - Check for race conditions and async issues\n   - Identify potential null/undefined problems\n\n3. **Quality Improvements**\n   - Suggest refactoring opportunities\n   - Recommend defensive coding practices\n   - Apply learned quality patterns\n\n4. **Testing Standards**\n   - Enforce project-specific testing conventions\n   - Apply proven testing methodologies\n   - Ensure consistency with successful test patterns\n`;\n  }\n\n  /**\n   * Generate QA-specific handoffs based on analysis\n   */\n  protected generateDomainHandoffs(analysis: AnalysisResult): string[] {\n    const handoffs: string[] = [];\n\n    if (analysis.patterns.some(p => p.category === 'security')) {\n      handoffs.push('security-sam');\n    }\n    if (analysis.patterns.some(p => p.severity === 'critical')) {\n      handoffs.push('enhanced-marcus');\n    }\n    if (analysis.patterns.some(p => p.type.includes('frontend') || p.type.includes('ui'))) {\n      handoffs.push('enhanced-james');\n    }\n\n    return handoffs;\n  }\n\n  /**\n   * Enhanced QA analysis with RAG context specialization using Edge Functions\n   */\n  protected async retrieveRelevantContext(\n    context: AgentActivationContext,\n    analysis: AnalysisResult\n  ): Promise<AgentRAGContext> {\n    const ragContext = await super.retrieveRelevantContext(context, analysis);\n\n    // QA-specific enhancements using production Edge Functions\n    if (this.vectorStore) {\n      try {\n        // Use Maria RAG Edge Function for production-ready QA intelligence\n        const mariaRAGResult = await this.vectorStore.mariaRAG(\n          this.generateRAGQuery(context, analysis),\n          {\n            filePath: context.filePath,\n            content: context.content,\n            language: this.detectLanguage(context.filePath),\n            framework: this.detectFramework(context.content)\n          },\n          this.ragConfig\n        );\n\n        if (mariaRAGResult.success && mariaRAGResult.data) {\n          // Integrate Edge Function results with existing RAG context\n          ragContext.similarCode = [\n            ...ragContext.similarCode,\n            ...mariaRAGResult.data.testPatterns.map((pattern: any) => ({\n              id: pattern.id,\n              content: pattern.code_content,\n              contentType: 'code',\n              metadata: {\n                ...pattern.metadata,\n                relevanceScore: pattern.similarity,\n                agentId: this.id,\n                timestamp: Date.now(),\n                pattern_type: pattern.pattern_type,\n                quality_score: pattern.quality_score\n              }\n            }))\n          ];\n\n          ragContext.projectStandards = [\n            ...ragContext.projectStandards,\n            ...mariaRAGResult.data.qaBestPractices.map((practice: any) => ({\n              id: practice.id,\n              content: practice.knowledge_item,\n              contentType: 'text',\n              metadata: {\n                agentId: this.id,\n                timestamp: Date.now(),\n                relevanceScore: practice.similarity,\n                knowledge_type: practice.knowledge_type,\n                confidence_score: practice.confidence_score,\n                expertise_domain: practice.expertise_domain\n              }\n            }))\n          ];\n\n          ragContext.agentExpertise = [\n            ...ragContext.agentExpertise,\n            ...mariaRAGResult.data.projectStandards.map((standard: any) => ({\n              id: standard.id,\n              content: standard.content,\n              contentType: 'text',\n              metadata: {\n                agentId: this.id,\n                timestamp: Date.now(),\n                relevanceScore: standard.similarity,\n                title: standard.title,\n                priority: standard.priority,\n                enforcement_level: standard.enforcement_level,\n                examples: standard.examples\n              }\n            }))\n          ];\n\n          // Store RAG insights for prompt generation\n          ragContext.metadata = {\n            ...ragContext.metadata,\n            mariaRAGInsights: mariaRAGResult.data.ragInsights,\n            edgeFunctionUsed: true,\n            processingTime: mariaRAGResult.metadata?.processingTime || 0\n          };\n        }\n      } catch (error) {\n        console.warn('Maria RAG Edge Function failed, using fallback:', error.message);\n        // Fallback to original local methods\n        const testPatterns = await this.retrieveTestPatterns(context);\n        ragContext.similarCode = [...ragContext.similarCode, ...testPatterns];\n\n        const qaBestPractices = await this.retrieveQABestPractices(context);\n        ragContext.projectStandards = [...ragContext.projectStandards, ...qaBestPractices];\n      }\n    }\n\n    return ragContext;\n  }\n\n  /**\n   * Generate optimized RAG query for Maria's QA domain\n   */\n  private generateRAGQuery(context: AgentActivationContext, analysis: AnalysisResult): string {\n    const isTestFile = context.filePath.includes('test') || context.filePath.includes('spec');\n    const language = this.detectLanguage(context.filePath);\n    const framework = this.detectFramework(context.content);\n\n    // Generate context-aware query for QA patterns\n    const patterns = analysis.patterns.map(p => p.type).join(' ');\n    const severity = analysis.patterns.some(p => p.severity === 'critical') ? 'critical' : 'standard';\n\n    if (isTestFile) {\n      return `${language} ${framework} test patterns ${patterns} ${severity} quality coverage`;\n    } else {\n      return `${language} ${framework} testing best practices ${patterns} ${severity} quality standards`;\n    }\n  }\n\n  /**\n   * Retrieve QA-specific test patterns\n   */\n  private async retrieveTestPatterns(context: AgentActivationContext) {\n    if (!this.vectorStore) return [];\n\n    const isTestFile = context.filePath.includes('test') || context.filePath.includes('spec');\n    const searchTags = isTestFile ? ['test', 'testing', 'qa'] : ['testing-target', 'testable-code'];\n\n    const query = {\n      query: `test patterns for ${this.detectLanguage(context.filePath)} ${this.detectFramework(context.content)}`,\n      queryType: 'semantic' as const,\n      agentId: this.id,\n      topK: 2,\n      filters: {\n        tags: searchTags,\n        contentTypes: ['code']\n      }\n    };\n\n    try {\n      const result = await this.vectorStore.queryMemories(query);\n      return result.documents || [];\n    } catch (error) {\n      console.warn('Failed to retrieve test patterns:', error.message);\n      return [];\n    }\n  }\n\n  /**\n   * Retrieve QA best practices for the current context\n   */\n  private async retrieveQABestPractices(context: AgentActivationContext) {\n    if (!this.vectorStore) return [];\n\n    const language = this.detectLanguage(context.filePath);\n    const framework = this.detectFramework(context.content);\n\n    const query = {\n      query: `${language} ${framework} testing best practices quality standards`,\n      queryType: 'semantic' as const,\n      agentId: this.id,\n      topK: 2,\n      filters: {\n        tags: ['qa', 'best-practice', 'standard'],\n        contentTypes: ['text']\n      }\n    };\n\n    try {\n      const result = await this.vectorStore.queryMemories(query);\n      return result.documents || [];\n    } catch (error) {\n      console.warn('Failed to retrieve QA best practices:', error.message);\n      return [];\n    }\n  }\n\n  /**\n   * Generate quality dashboard for analysis results\n   */\n  generateQualityDashboard(results: any): any {\n    // Handle both AnalysisResult and full results object\n    const issues = results?.issues || results?.patterns || [];\n    const warnings = results?.warnings || [];\n\n    const criticalCount = issues.filter((i: any) => i.severity === 'critical').length;\n    const highCount = issues.filter((i: any) => i.severity === 'high').length;\n    const mediumCount = issues.filter((i: any) => i.severity === 'medium').length;\n\n    return {\n      overallScore: results?.score || 75,\n      criticalIssues: criticalCount,\n      highIssues: highCount,\n      mediumIssues: mediumCount,\n      warnings: Array.isArray(warnings) ? warnings.length : 0,\n      configurationHealth: results?.configurationScore || results?.score || 90,\n      trend: results?.score >= 90 ? 'improving' : results?.score >= 70 ? 'stable' : 'declining',\n      lastUpdated: new Date().toISOString(),\n      metrics: {\n        testCoverage: results?.coverage || 80,\n        codeQuality: results?.quality || 85,\n        security: results?.security || 90,\n        performance: results?.performance || 80\n      },\n      issues: issues,\n      recommendations: results?.recommendations || []\n    };\n  }\n\n  /**\n   * Generate fix suggestion for an issue\n   */\n  generateFix(issue: any): string {\n    if (!issue) return 'Please review and fix manually';\n\n    const fixes: Record<string, string> = {\n      'route-mismatch': 'Update route configuration to match navigation paths',\n      'debugging-code': 'Remove debugging code (console.log, debugger statements)',\n      'security-risk': 'Apply OWASP security best practices',\n      'missing-tests': 'Add comprehensive test coverage',\n      'performance': 'Optimize code performance',\n      'accessibility': 'Add proper accessibility attributes'\n    };\n\n    return fixes[issue.type] || 'Please review and fix manually';\n  }\n\n  /**\n   * Generate prevention strategy for an issue\n   */\n  generatePreventionStrategy(issue: any): string {\n    if (!issue) return 'Add appropriate validation';\n\n    const strategies: Record<string, string> = {\n      'route-mismatch': 'Add CI/CD check to validate route-navigation consistency',\n      'debugging-code': 'Add pre-commit hooks to prevent debugging code',\n      'security-risk': 'Implement security scanning in CI/CD pipeline',\n      'missing-tests': 'Enforce minimum test coverage in PR checks',\n      'performance': 'Add performance monitoring and alerts',\n      'accessibility': 'Integrate accessibility testing in CI/CD'\n    };\n\n    return strategies[issue.type] || 'Add appropriate validation';\n  }\n\n  /**\n   * Identify critical issues from issue list and enhance with fixes/prevention\n   */\n  identifyCriticalIssues(results: any): any[] {\n    const issues = results?.issues || [];\n    if (!issues || !Array.isArray(issues)) return [];\n\n    const critical = issues.filter((i: any) => i.severity === 'critical' || i.severity === 'high');\n\n    // Enhance with impact, fix, and prevention strategy\n    return critical.map((issue: any) => ({\n      ...issue,\n      impact: issue.severity === 'critical' ? 'High impact - immediate attention required' : 'High impact - needs resolution',\n      fix: this.generateFix(issue),\n      preventionStrategy: this.generatePreventionStrategy(issue)\n    }));\n  }\n\n  /**\n   * Calculate priority based on issues\n   */\n  calculatePriority(issues: any[]): string {\n    if (!issues || issues.length === 0) return 'low';\n    const severities = issues.map(i => i.severity || 'low');\n    if (severities.includes('critical')) return 'critical';\n    if (severities.includes('high')) return 'high';\n    if (severities.includes('medium')) return 'medium';\n    return 'low';\n  }\n\n  /**\n   * Determine agent handoffs based on results object\n   */\n  determineHandoffs(results: any): string[] {\n    const handoffs: string[] = [];\n\n    // Handle both array of issues and full results object\n    const issues = Array.isArray(results) ? results : (results?.issues || []);\n    const securityConcerns = results?.securityConcerns || [];\n\n    if (!issues || issues.length === 0) return handoffs;\n\n    const hasSecurityIssue = issues.some((i: any) =>\n      i.type === 'security' || i.type === 'security-risk' || i.type?.includes('security')\n    ) || securityConcerns.length > 0;\n\n    const hasPerformanceIssue = issues.some((i: any) =>\n      i.type === 'performance' || i.type?.includes('performance')\n    );\n    const hasUIIssue = issues.some((i: any) =>\n      i.type === 'ui' || i.type === 'accessibility' || i.type?.includes('ui')\n    );\n    const hasRouteIssue = issues.some((i: any) =>\n      i.type === 'route-mismatch' || i.type?.includes('route')\n    );\n    const hasAPIIssue = issues.some((i: any) =>\n      i.type === 'api-error' || i.type?.includes('api')\n    );\n    const hasHighSeverity = issues.some((i: any) =>\n      i.severity === 'high' || i.severity === 'critical'\n    );\n\n    if (hasSecurityIssue) handoffs.push('security-sam');\n    if (hasPerformanceIssue || hasAPIIssue) handoffs.push('marcus-backend');\n    if (hasUIIssue || hasRouteIssue) handoffs.push('james-frontend');\n    if (hasSecurityIssue || hasAPIIssue) handoffs.push('devops-dan');\n    if (hasHighSeverity || issues.length > 5) handoffs.push('sarah-pm');\n\n    return [...new Set(handoffs)]; // Remove duplicates\n  }\n\n  /**\n   * Generate actionable recommendations from results\n   */\n  generateActionableRecommendations(results: any): Array<{ type: string; message: string; priority: string }> {\n    const recommendations: Array<{ type: string; message: string; priority: string }> = [];\n    const issues = results?.issues || [];\n    const configScore = results?.configurationScore || 100;\n\n    // Critical issues recommendation\n    const criticalCount = issues.filter((i: any) => i.severity === 'critical').length;\n    if (criticalCount > 0) {\n      recommendations.push({\n        type: 'critical-fix',\n        priority: 'critical',\n        message: `Fix ${criticalCount} critical issue${criticalCount > 1 ? 's' : ''} immediately`\n      });\n    }\n\n    // High priority issues\n    const highCount = issues.filter((i: any) => i.severity === 'high').length;\n    if (highCount > 0) {\n      recommendations.push({\n        type: 'high-priority',\n        priority: 'high',\n        message: `Address ${highCount} high-priority issue${highCount > 1 ? 's' : ''}`\n      });\n    }\n\n    // Configuration improvements\n    if (configScore < 90) {\n      recommendations.push({\n        type: 'configuration',\n        priority: 'high',\n        message: 'Improve configuration consistency and validation'\n      });\n    }\n\n    // Security concerns\n    if (results?.securityConcerns && results.securityConcerns.length > 0) {\n      recommendations.push({\n        type: 'security',\n        priority: 'critical',\n        message: 'Review and fix security concerns'\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Generate comprehensive enhanced report with dashboard and critical issues\n   */\n  generateEnhancedReport(results: any, dashboard?: any, criticalIssues?: any[]): string {\n    const dash = dashboard || this.generateQualityDashboard(results);\n    const critical = criticalIssues || this.identifyCriticalIssues(results);\n\n    let report = '# Enhanced Maria - Quality Analysis Report\\n\\n';\n\n    // Quality Dashboard\n    report += '## Quality Dashboard\\n';\n    report += `Overall Score: ${dash.overallScore}%\\n`;\n    report += `- Critical Issues: ${dash.criticalIssues}\\n`;\n    report += `- High Issues: ${dash.highIssues}\\n`;\n    report += `- Medium Issues: ${dash.mediumIssues}\\n`;\n    report += `- Warnings: ${dash.warnings}\\n`;\n    report += `Configuration Health: ${dash.configurationHealth}%\\n\\n`;\n\n    // Critical Issues\n    if (critical.length > 0) {\n      report += '## Critical Issues\\n';\n      critical.forEach((issue: any, idx: number) => {\n        report += `${idx + 1}. ${issue.type}: ${issue.message}\\n`;\n        report += `   Impact: ${issue.impact}\\n`;\n        report += `   Fix: ${issue.fix}\\n`;\n        report += `   Prevention: ${issue.preventionStrategy}\\n\\n`;\n      });\n    }\n\n    // Cross-File Analysis\n    if (results?.crossFileAnalysis && Object.keys(results.crossFileAnalysis).length > 0) {\n      report += '## Cross-File Analysis\\n';\n      report += JSON.stringify(results.crossFileAnalysis, null, 2) + '\\n\\n';\n    }\n\n    // Performance Insights\n    if (results?.performanceMetrics) {\n      report += '## Performance Insights\\n';\n      report += JSON.stringify(results.performanceMetrics, null, 2) + '\\n\\n';\n    }\n\n    // Accessibility Issues\n    if (results?.accessibilityIssues && results.accessibilityIssues.length > 0) {\n      report += '## Accessibility Issues\\n';\n      results.accessibilityIssues.forEach((issue: string) => {\n        report += `- ${issue}\\n`;\n      });\n      report += '\\n';\n    }\n\n    // Security Concerns\n    if (results?.securityConcerns && results.securityConcerns.length > 0) {\n      report += '## Security Concerns\\n';\n      results.securityConcerns.forEach((concern: string) => {\n        report += `- ${concern}\\n`;\n      });\n      report += '\\n';\n    }\n\n    return report;\n  }\n\n  /**\n   * Get emoji representation of score\n   */\n  getScoreEmoji(score: number): string {\n    if (score >= 90) return '🟢';\n    if (score >= 75) return '🟡';\n    if (score >= 60) return '🟠';\n    return '🔴';\n  }\n\n  /**\n   * Extract agent name from text\n   */\n  extractAgentName(text: string): string {\n    const match = text.match(/@(\\w+)/);\n    return match ? match[1] : '';\n  }\n\n  /**\n   * Analyze cross-file consistency\n   */\n  protected analyzeCrossFileConsistency(context: AgentActivationContext): Record<string, string> {\n    return {\n      [context.filePath || 'unknown']: context.content || ''\n    };\n  }\n\n  /**\n   * Check for configuration inconsistencies\n   */\n  hasConfigurationInconsistencies(context: any): boolean {\n    // Handle both string and object with content property\n    const content = typeof context === 'string' ? context : (context?.content || '');\n\n    // Detect mixed environment variable and hardcoded values\n    if (content.includes('process.env') && content.match(/[\"']http:\\/\\/[^\"']+[\"']/)) {\n      return true;\n    }\n\n    // Detect mixed configuration patterns\n    if (content.includes('const config') && content.includes('fallback')) {\n      if (content.includes('process.env') && content.match(/:\\s*[\"'][^\"']+[\"']/)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Validate route-navigation consistency (similar to James)\n   */\n  validateRouteNavigationConsistency(context: any): { score: number; issues: any[]; warnings: any[] } {\n    const issues: any[] = [];\n    const warnings: any[] = [];\n\n    if (!context || !context.content) {\n      return { score: 100, issues, warnings };\n    }\n\n    const content = context.content;\n\n    // Extract routes from the routes array\n    const routesSection = content.match(/const routes\\s*=\\s*\\[([\\s\\S]*?)\\];/);\n    const definedRoutes = new Set<string>();\n\n    if (routesSection) {\n      const routeMatches = routesSection[1].matchAll(/path:\\s*['\"]([^'\"]+)['\"]/g);\n      for (const match of routeMatches) {\n        if (match[1]) definedRoutes.add(match[1]);\n      }\n    }\n\n    // Extract navigation links from the navigation array\n    const navSection = content.match(/const navigation\\s*=\\s*\\[([\\s\\S]*?)\\];/);\n    const linkedPaths = new Set<string>();\n\n    if (navSection) {\n      const navMatches = navSection[1].matchAll(/path:\\s*['\"]([^'\"]+)['\"]/g);\n      for (const match of navMatches) {\n        if (match[1]) linkedPaths.add(match[1]);\n      }\n    }\n\n    // Only check for mismatches if we found both routes and navigation\n    if (definedRoutes.size > 0 && linkedPaths.size > 0) {\n      // Find navigation links to undefined routes\n      for (const navPath of linkedPaths) {\n        if (!definedRoutes.has(navPath)) {\n          issues.push({\n            type: 'route-navigation-mismatch',\n            severity: 'high',\n            message: `Navigation link '${navPath}' points to undefined route`,\n            file: context.filePath || 'unknown'\n          });\n        }\n      }\n\n      // Find routes not linked in navigation\n      for (const route of definedRoutes) {\n        if (!linkedPaths.has(route)) {\n          warnings.push({\n            type: 'route-navigation-mismatch',\n            severity: 'medium',\n            message: `Route '${route}' is defined but not linked in navigation`,\n            file: context.filePath || 'unknown'\n          });\n        }\n      }\n    }\n\n    const score = Math.max(0, 100 - (issues.length * 10) - (warnings.length * 5));\n\n    return {\n      score,\n      issues,\n      warnings\n    };\n  }\n\n}\n"],"version":3}