{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/alex-ba.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/alex-ba.ts"],"sourcesContent":["/**\n * VERSATIL SDLC Framework - Alex BA (Business Analyst)\n * Specialized in requirements analysis, user stories, acceptance criteria\n *\n * RAG-Enhanced: Learns from requirements patterns, user story templates, business rules\n */\n\nimport { RAGEnabledAgent, RAGConfig, AgentRAGContext } from './rag-enabled-agent.js';\nimport { AgentResponse, AgentActivationContext } from './base-agent.js';\nimport { PatternAnalyzer, AnalysisResult } from '../intelligence/pattern-analyzer.js';\nimport { EnhancedVectorMemoryStore } from '../rag/enhanced-vector-memory-store.js';\n\nexport class AlexBa extends RAGEnabledAgent {\n  name = 'AlexBa';\n  id = 'alex-ba';\n  specialization = 'Business Analyst & Requirements Engineer';\n  systemPrompt = 'Expert Business Analyst specializing in requirements analysis, user story creation, acceptance criteria definition, and stakeholder communication';\n\n  constructor(vectorStore?: EnhancedVectorMemoryStore) {\n    super(vectorStore);\n  }\n\n  /**\n   * BA-specific RAG configuration\n   * Focus on requirements patterns, user story templates, business rules\n   */\n  protected getDefaultRAGConfig(): RAGConfig {\n    return {\n      maxExamples: 4, // Good balance for requirements examples\n      similarityThreshold: 0.80, // Higher precision for requirements\n      agentDomain: 'business-analysis',\n      enableLearning: true\n    };\n  }\n\n  /**\n   * BA-specific pattern analysis\n   */\n  protected async runPatternAnalysis(context: AgentActivationContext): Promise<AnalysisResult> {\n    const content = context.content || '';\n    const filePath = context.filePath || '';\n\n    const patterns: any[] = [];\n\n    // User story patterns\n    if (content.match(/as a|as an|I want|so that/i)) {\n      patterns.push({\n        type: 'user-story',\n        message: 'User story format detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Acceptance criteria patterns\n    if (content.match(/given|when|then|acceptance criteria|AC:/i)) {\n      patterns.push({\n        type: 'acceptance-criteria',\n        message: 'Acceptance criteria (Gherkin format) detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Requirements patterns\n    if (content.match(/shall|must|should|requirement|REQ-\\d+/i)) {\n      patterns.push({\n        type: 'requirement',\n        message: 'Formal requirement detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Business rule patterns\n    if (content.match(/business rule|BR-\\d+|policy|rule:/i)) {\n      patterns.push({\n        type: 'business-rule',\n        message: 'Business rule detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Stakeholder communication patterns\n    if (content.match(/stakeholder|customer|user feedback|interview|workshop/i)) {\n      patterns.push({\n        type: 'stakeholder-communication',\n        message: 'Stakeholder communication or feedback detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Requirements traceability\n    if (content.match(/traces to|depends on|related to|REQ-\\d+.*→.*REQ-\\d+/i)) {\n      patterns.push({\n        type: 'requirements-traceability',\n        message: 'Requirements traceability link detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Ambiguous requirements (warning)\n    if (content.match(/maybe|perhaps|possibly|might|could be|TBD|TODO/i)) {\n      patterns.push({\n        type: 'ambiguous-requirement',\n        message: 'Ambiguous or incomplete requirement detected - needs clarification',\n        severity: 'high',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    return {\n      patterns,\n      score: patterns.filter(p => p.severity === 'high').length === 0 ? 90 : 75, // BA quality score\n      summary: `Detected ${patterns.length} BA patterns`,\n      recommendations: patterns\n        .filter(p => p.severity === 'high' || p.severity === 'critical')\n        .map(p => p.message)\n    };\n  }\n\n  /**\n   * Override activate to add BA-specific context\n   */\n  async activate(context: AgentActivationContext): Promise<AgentResponse> {\n    // Call parent (RAGEnabledAgent) to get RAG-enhanced response\n    const response = await super.activate(context);\n\n    // Add BA-specific enhancements\n    if (response.context) {\n      response.context = {\n        ...response.context,\n        baInsights: {\n          userStoryDetected: context.content?.match(/as a|as an/i) !== null,\n          acceptanceCriteriaPresent: context.content?.match(/given|when|then/i) !== null,\n          requirementsFormality: this.assessRequirementsFormality(context.content || ''),\n          businessValueIdentified: context.content?.includes('business value') || false\n        }\n      };\n    }\n\n    // Add BA-specific suggestions if RAG context available\n    const ragContext = context.ragContext as AgentRAGContext | undefined;\n    if (ragContext && ragContext.previousSolutions) {\n      const baSuggestions = this.generateBASuggestions(ragContext, context);\n      response.suggestions = [...(response.suggestions || []), ...baSuggestions];\n    }\n\n    // Determine handoffs\n    response.handoffTo = this.determineHandoffs(context, response);\n\n    return response;\n  }\n\n  /**\n   * Assess requirements formality (low/medium/high)\n   */\n  private assessRequirementsFormality(content: string): string {\n    const shallCount = (content.match(/shall/gi) || []).length;\n    const mustCount = (content.match(/must/gi) || []).length;\n    const formalCount = shallCount + mustCount;\n\n    if (formalCount >= 5) return 'high';\n    if (formalCount >= 2) return 'medium';\n    return 'low';\n  }\n\n  /**\n   * Generate BA-specific suggestions from RAG context\n   */\n  private generateBASuggestions(ragContext: AgentRAGContext, context: AgentActivationContext): any[] {\n    const suggestions: any[] = [];\n\n    // User story template suggestions\n    if (context.content?.includes('user story') && ragContext.projectStandards.length > 0) {\n      suggestions.push({\n        type: 'user-story-template',\n        message: 'Recommend using standard user story format: \"As a [role], I want [feature], so that [benefit]\"',\n        priority: 'medium',\n        file: context.filePath || 'requirements.md'\n      });\n    }\n\n    // Acceptance criteria suggestions\n    if (context.content?.includes('acceptance') && ragContext.previousSolutions['acceptance-criteria']) {\n      suggestions.push({\n        type: 'acceptance-criteria-format',\n        message: 'Use Gherkin format for testable criteria: Given/When/Then',\n        priority: 'medium',\n        file: context.filePath || 'requirements.md'\n      });\n    }\n\n    // Requirements traceability suggestions\n    if (ragContext.agentExpertise.length > 0) {\n      suggestions.push({\n        type: 'requirements-traceability',\n        message: 'Consider adding traceability links to related requirements and design documents',\n        priority: 'low',\n        file: context.filePath || 'requirements.md'\n      });\n    }\n\n    // Ambiguity warnings\n    if (context.content?.match(/maybe|perhaps|TBD/i)) {\n      suggestions.push({\n        type: 'ambiguity-warning',\n        message: 'Ambiguous language detected - recommend scheduling stakeholder clarification session',\n        priority: 'high',\n        file: context.filePath || 'requirements.md'\n      });\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Determine which agents to hand off to\n   */\n  private determineHandoffs(context: AgentActivationContext, response: AgentResponse): string[] {\n    const handoffs: string[] = [];\n\n    // Hand off to Sarah PM for sprint planning\n    if (context.content?.includes('sprint') || context.content?.includes('milestone')) {\n      handoffs.push('sarah-pm');\n    }\n\n    // Hand off to James for UI/UX requirements\n    if (context.content?.match(/UI|UX|interface|screen|page/i)) {\n      handoffs.push('james-frontend');\n    }\n\n    // Hand off to Marcus for API/backend requirements\n    if (context.content?.match(/API|endpoint|database|backend/i)) {\n      handoffs.push('marcus-backend');\n    }\n\n    // Hand off to Maria for quality/testing requirements\n    if (context.content?.match(/test|quality|acceptance criteria/i)) {\n      handoffs.push('maria-qa');\n    }\n\n    return handoffs;\n  }\n\n  /**\n   * Get base prompt template for BA\n   */\n  protected getBasePromptTemplate(): string {\n    return `You are Alex BA, an expert Business Analyst specializing in requirements engineering.\nYour role is to analyze requirements, create user stories, define acceptance criteria, and ensure stakeholder alignment.\nFocus on clear, testable requirements and business value articulation.`;\n  }\n\n  /**\n   * Generate domain-specific handoffs based on analysis\n   */\n  protected generateDomainHandoffs(analysis: AnalysisResult): string[] {\n    const handoffs: string[] = [];\n\n    // Check if ambiguous requirements need PM attention\n    if (analysis.patterns.some(p => p.type === 'ambiguous-requirement')) {\n      handoffs.push('sarah-pm');\n    }\n\n    // Check if technical requirements need technical leads\n    if (analysis.patterns.some(p => p.type === 'requirement' && p.message.includes('API'))) {\n      handoffs.push('marcus-backend');\n    }\n\n    if (analysis.patterns.some(p => p.type === 'requirement' && p.message.includes('UI'))) {\n      handoffs.push('james-frontend');\n    }\n\n    return handoffs;\n  }\n}\n"],"version":3}