12370c60dc71642418dfab56e236c34d
"use strict";

/* istanbul ignore next */
function cov_sgoo7gdfe() {
  var path = "/Users/nissimmenashe/VERSATIL SDLC FW/src/utils/logger.ts";
  var hash = "eea3f568e5f23319669074bc32a3991de42131e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/nissimmenashe/VERSATIL SDLC FW/src/utils/logger.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 35
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 11,
          column: 9
        }
      },
      "4": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 68
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "6": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 82
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "8": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "9": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "10": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 83
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "12": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 82
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "15": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 37
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 47
        }
      },
      "17": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 42,
          column: 83
        }
      },
      "18": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "20": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 36
        }
      },
      "21": {
        start: {
          line: 52,
          column: 21
        },
        end: {
          line: 52,
          column: 62
        }
      },
      "22": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 56
        }
      },
      "23": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "24": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 55
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "26": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 40
        }
      },
      "27": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 27
          },
          end: {
            line: 7,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 34
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 38
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 38
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 41
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 41
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 54
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 51
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 22,
            column: 9
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 36,
            column: 9
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: 47,
            column: 13
          },
          end: {
            line: 49,
            column: 9
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 30
          }
        }, {
          start: {
            line: 52,
            column: 34
          },
          end: {
            line: 52,
            column: 48
          }
        }, {
          start: {
            line: 52,
            column: 52
          },
          end: {
            line: 52,
            column: 62
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 19
          }
        }, {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 54
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/nissimmenashe/VERSATIL SDLC FW/src/utils/logger.ts",
      mappings: ";;;AAAA,MAAa,cAAc;IAGzB,YAAoB,SAAkB;QAAlB,cAAS,GAAT,SAAS,CAAS;IAAG,CAAC;IAE1C,MAAM,CAAC,WAAW,CAAC,SAAkB;QACnC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;YAC7B,cAAc,CAAC,QAAQ,GAAG,IAAI,cAAc,CAAC,SAAS,CAAC,CAAC;QAC1D,CAAC;QACD,OAAO,cAAc,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,IAAI,CAAC,OAAe,EAAE,OAAa,EAAE,SAAkB;QACrD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC3E,4EAA4E;QAC5E,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,KAAK,MAAM,EAAE,CAAC;YAC7C,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,KAAK,CAAC,OAAe,EAAE,OAAa,EAAE,SAAkB;QACtD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC5E,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI,CAAC,OAAe,EAAE,OAAa,EAAE,SAAkB;QACrD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC3E,4EAA4E;QAC5E,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,KAAK,MAAM,EAAE,CAAC;YAC7C,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,OAAO,CAAC,OAAe,EAAE,OAAa,EAAE,SAAkB;QACxD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,OAAe,EAAE,OAAa,EAAE,SAAkB;QACtD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC5E,4EAA4E;QAC5E,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,KAAK,MAAM,EAAE,CAAC;YAC7C,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAEO,aAAa,CAAC,KAAa,EAAE,OAAe,EAAE,OAAa,EAAE,SAAkB;QACrF,MAAM,IAAI,GAAG,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC;QACvD,IAAI,SAAS,GAAG,IAAI,IAAI,KAAK,KAAK,KAAK,OAAO,EAAE,CAAC;QAEjD,IAAI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC/C,SAAS,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC;QAC7C,CAAC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;CACF;AA7DD,wCA6DC;AAEY,QAAA,GAAG,GAAG,OAAO,CAAC",
      names: [],
      sources: ["/Users/nissimmenashe/VERSATIL SDLC FW/src/utils/logger.ts"],
      sourcesContent: ["export class VERSATILLogger {\n  private static instance: VERSATILLogger;\n\n  constructor(private component?: string) {}\n\n  static getInstance(component?: string): VERSATILLogger {\n    if (!VERSATILLogger.instance) {\n      VERSATILLogger.instance = new VERSATILLogger(component);\n    }\n    return VERSATILLogger.instance;\n  }\n\n  info(message: string, context?: any, component?: string): void {\n    const logMessage = this.formatMessage('INFO', message, context, component);\n    // In MCP mode, use stderr to avoid interfering with stdio JSON-RPC protocol\n    if (process.env.VERSATIL_MCP_MODE === 'true') {\n      console.error(logMessage);\n    } else {\n      console.log(logMessage);\n    }\n  }\n\n  error(message: string, context?: any, component?: string): void {\n    const logMessage = this.formatMessage('ERROR', message, context, component);\n    console.error(logMessage);\n  }\n\n  warn(message: string, context?: any, component?: string): void {\n    const logMessage = this.formatMessage('WARN', message, context, component);\n    // In MCP mode, use stderr to avoid interfering with stdio JSON-RPC protocol\n    if (process.env.VERSATIL_MCP_MODE === 'true') {\n      console.error(logMessage);\n    } else {\n      console.warn(logMessage);\n    }\n  }\n\n  warning(message: string, context?: any, component?: string): void {\n    this.warn(message, context, component);\n  }\n\n  debug(message: string, context?: any, component?: string): void {\n    const logMessage = this.formatMessage('DEBUG', message, context, component);\n    // In MCP mode, use stderr to avoid interfering with stdio JSON-RPC protocol\n    if (process.env.VERSATIL_MCP_MODE === 'true') {\n      console.error(logMessage);\n    } else {\n      console.log(logMessage);\n    }\n  }\n\n  private formatMessage(level: string, message: string, context?: any, component?: string): string {\n    const comp = component || this.component || 'VERSATIL';\n    let formatted = `[${comp}] ${level}: ${message}`;\n\n    if (context && Object.keys(context).length > 0) {\n      formatted += ` ${JSON.stringify(context)}`;\n    }\n\n    return formatted;\n  }\n}\n\nexport const log = console;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eea3f568e5f23319669074bc32a3991de42131e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_sgoo7gdfe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_sgoo7gdfe();
cov_sgoo7gdfe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_sgoo7gdfe().s[1]++;
exports.log = exports.VERSATILLogger = void 0;
class VERSATILLogger {
  constructor(component) {
    /* istanbul ignore next */
    cov_sgoo7gdfe().f[0]++;
    cov_sgoo7gdfe().s[2]++;
    this.component = component;
  }
  static getInstance(component) {
    /* istanbul ignore next */
    cov_sgoo7gdfe().f[1]++;
    cov_sgoo7gdfe().s[3]++;
    if (!VERSATILLogger.instance) {
      /* istanbul ignore next */
      cov_sgoo7gdfe().b[0][0]++;
      cov_sgoo7gdfe().s[4]++;
      VERSATILLogger.instance = new VERSATILLogger(component);
    } else
    /* istanbul ignore next */
    {
      cov_sgoo7gdfe().b[0][1]++;
    }
    cov_sgoo7gdfe().s[5]++;
    return VERSATILLogger.instance;
  }
  info(message, context, component) {
    /* istanbul ignore next */
    cov_sgoo7gdfe().f[2]++;
    const logMessage =
    /* istanbul ignore next */
    (cov_sgoo7gdfe().s[6]++, this.formatMessage('INFO', message, context, component));
    // In MCP mode, use stderr to avoid interfering with stdio JSON-RPC protocol
    /* istanbul ignore next */
    cov_sgoo7gdfe().s[7]++;
    if (process.env.VERSATIL_MCP_MODE === 'true') {
      /* istanbul ignore next */
      cov_sgoo7gdfe().b[1][0]++;
      cov_sgoo7gdfe().s[8]++;
      console.error(logMessage);
    } else {
      /* istanbul ignore next */
      cov_sgoo7gdfe().b[1][1]++;
      cov_sgoo7gdfe().s[9]++;
      console.log(logMessage);
    }
  }
  error(message, context, component) {
    /* istanbul ignore next */
    cov_sgoo7gdfe().f[3]++;
    const logMessage =
    /* istanbul ignore next */
    (cov_sgoo7gdfe().s[10]++, this.formatMessage('ERROR', message, context, component));
    /* istanbul ignore next */
    cov_sgoo7gdfe().s[11]++;
    console.error(logMessage);
  }
  warn(message, context, component) {
    /* istanbul ignore next */
    cov_sgoo7gdfe().f[4]++;
    const logMessage =
    /* istanbul ignore next */
    (cov_sgoo7gdfe().s[12]++, this.formatMessage('WARN', message, context, component));
    // In MCP mode, use stderr to avoid interfering with stdio JSON-RPC protocol
    /* istanbul ignore next */
    cov_sgoo7gdfe().s[13]++;
    if (process.env.VERSATIL_MCP_MODE === 'true') {
      /* istanbul ignore next */
      cov_sgoo7gdfe().b[2][0]++;
      cov_sgoo7gdfe().s[14]++;
      console.error(logMessage);
    } else {
      /* istanbul ignore next */
      cov_sgoo7gdfe().b[2][1]++;
      cov_sgoo7gdfe().s[15]++;
      console.warn(logMessage);
    }
  }
  warning(message, context, component) {
    /* istanbul ignore next */
    cov_sgoo7gdfe().f[5]++;
    cov_sgoo7gdfe().s[16]++;
    this.warn(message, context, component);
  }
  debug(message, context, component) {
    /* istanbul ignore next */
    cov_sgoo7gdfe().f[6]++;
    const logMessage =
    /* istanbul ignore next */
    (cov_sgoo7gdfe().s[17]++, this.formatMessage('DEBUG', message, context, component));
    // In MCP mode, use stderr to avoid interfering with stdio JSON-RPC protocol
    /* istanbul ignore next */
    cov_sgoo7gdfe().s[18]++;
    if (process.env.VERSATIL_MCP_MODE === 'true') {
      /* istanbul ignore next */
      cov_sgoo7gdfe().b[3][0]++;
      cov_sgoo7gdfe().s[19]++;
      console.error(logMessage);
    } else {
      /* istanbul ignore next */
      cov_sgoo7gdfe().b[3][1]++;
      cov_sgoo7gdfe().s[20]++;
      console.log(logMessage);
    }
  }
  formatMessage(level, message, context, component) {
    /* istanbul ignore next */
    cov_sgoo7gdfe().f[7]++;
    const comp =
    /* istanbul ignore next */
    (cov_sgoo7gdfe().s[21]++,
    /* istanbul ignore next */
    (cov_sgoo7gdfe().b[4][0]++, component) ||
    /* istanbul ignore next */
    (cov_sgoo7gdfe().b[4][1]++, this.component) ||
    /* istanbul ignore next */
    (cov_sgoo7gdfe().b[4][2]++, 'VERSATIL'));
    let formatted =
    /* istanbul ignore next */
    (cov_sgoo7gdfe().s[22]++, `[${comp}] ${level}: ${message}`);
    /* istanbul ignore next */
    cov_sgoo7gdfe().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_sgoo7gdfe().b[6][0]++, context) &&
    /* istanbul ignore next */
    (cov_sgoo7gdfe().b[6][1]++, Object.keys(context).length > 0)) {
      /* istanbul ignore next */
      cov_sgoo7gdfe().b[5][0]++;
      cov_sgoo7gdfe().s[24]++;
      formatted += ` ${JSON.stringify(context)}`;
    } else
    /* istanbul ignore next */
    {
      cov_sgoo7gdfe().b[5][1]++;
    }
    cov_sgoo7gdfe().s[25]++;
    return formatted;
  }
}
/* istanbul ignore next */
cov_sgoo7gdfe().s[26]++;
exports.VERSATILLogger = VERSATILLogger;
/* istanbul ignore next */
cov_sgoo7gdfe().s[27]++;
exports.log = console;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,