{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/sarah-pm.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/src/agents/sarah-pm.ts"],"sourcesContent":["/**\n * VERSATIL SDLC Framework - Sarah PM (Project Manager)\n * Specialized in sprint planning, milestone tracking, team coordination\n *\n * RAG-Enhanced: Learns from project patterns, sprint velocity, team dynamics\n */\n\nimport { RAGEnabledAgent, RAGConfig, AgentRAGContext } from './rag-enabled-agent.js';\nimport { AgentResponse, AgentActivationContext } from './base-agent.js';\nimport { PatternAnalyzer, AnalysisResult } from '../intelligence/pattern-analyzer.js';\nimport { EnhancedVectorMemoryStore } from '../rag/enhanced-vector-memory-store.js';\n\nexport class SarahPm extends RAGEnabledAgent {\n  name = 'SarahPm';\n  id = 'sarah-pm';\n  specialization = 'Project Manager & Sprint Coordinator';\n  systemPrompt = 'Experienced Project Manager specializing in Agile/Scrum methodology, sprint planning, team coordination, and milestone tracking';\n\n  constructor(vectorStore?: EnhancedVectorMemoryStore) {\n    super(vectorStore);\n  }\n\n  /**\n   * PM-specific RAG configuration\n   * Focus on project patterns, sprint velocity, team dynamics\n   */\n  protected getDefaultRAGConfig(): RAGConfig {\n    return {\n      maxExamples: 5, // More examples for better sprint planning\n      similarityThreshold: 0.75, // Slightly lower - more historical data\n      agentDomain: 'project-management',\n      enableLearning: true\n    };\n  }\n\n  /**\n   * PM-specific pattern analysis\n   */\n  protected async runPatternAnalysis(context: AgentActivationContext): Promise<AnalysisResult> {\n    const content = context.content || '';\n    const filePath = context.filePath || '';\n\n    // Detect PM-related patterns\n    const patterns: any[] = [];\n\n    // Sprint planning patterns\n    if (content.match(/sprint|iteration|milestone|deadline/i)) {\n      patterns.push({\n        type: 'sprint-planning',\n        message: 'Sprint planning or milestone tracking detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Task coordination patterns\n    if (content.match(/task|story|epic|backlog|TODO/i)) {\n      patterns.push({\n        type: 'task-coordination',\n        message: 'Task management activity detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Team communication patterns\n    if (content.match(/standup|review|retrospective|demo/i)) {\n      patterns.push({\n        type: 'team-communication',\n        message: 'Agile ceremony or team communication detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Risk assessment patterns\n    if (content.match(/risk|blocker|dependency|blocked/i)) {\n      patterns.push({\n        type: 'risk-assessment',\n        message: 'Project risk or blocker detected',\n        severity: 'high',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    // Velocity tracking\n    if (content.match(/velocity|burndown|capacity|points/i)) {\n      patterns.push({\n        type: 'velocity-tracking',\n        message: 'Sprint velocity or capacity planning detected',\n        severity: 'info',\n        location: { file: filePath, line: 0 }\n      });\n    }\n\n    return {\n      patterns,\n      score: patterns.length > 0 ? 85 : 100, // PM quality score\n      summary: `Detected ${patterns.length} PM patterns`,\n      recommendations: patterns\n        .filter(p => p.severity === 'high' || p.severity === 'critical')\n        .map(p => p.message)\n    };\n  }\n\n  /**\n   * Override activate to add PM-specific context\n   */\n  async activate(context: AgentActivationContext): Promise<AgentResponse> {\n    // Call parent (RAGEnabledAgent) to get RAG-enhanced response\n    const response = await super.activate(context);\n\n    // Add PM-specific enhancements\n    if (response.context) {\n      response.context = {\n        ...response.context,\n        pmInsights: {\n          sprintPlanningDetected: context.content?.includes('sprint') || false,\n          milestoneTracking: context.content?.includes('milestone') || false,\n          teamCoordination: context.content?.includes('team') || false,\n          riskAssessment: context.content?.includes('risk') || false\n        }\n      };\n    }\n\n    // Add PM-specific suggestions if RAG context available\n    const ragContext = context.ragContext as AgentRAGContext | undefined;\n    if (ragContext && ragContext.previousSolutions) {\n      const pmSuggestions = this.generatePMSuggestions(ragContext, context);\n      response.suggestions = [...(response.suggestions || []), ...pmSuggestions];\n    }\n\n    // Determine handoffs\n    response.handoffTo = this.determineHandoffs(context, response);\n\n    return response;\n  }\n\n  /**\n   * Generate PM-specific suggestions from RAG context\n   */\n  private generatePMSuggestions(ragContext: AgentRAGContext, context: AgentActivationContext): any[] {\n    const suggestions: any[] = [];\n\n    // Sprint velocity suggestions\n    if (context.content?.includes('velocity') && ragContext.previousSolutions['velocity-tracking']) {\n      suggestions.push({\n        type: 'velocity-optimization',\n        message: 'Historical velocity data suggests planning for 80% capacity to account for interruptions',\n        priority: 'medium',\n        file: context.filePath || 'sprint-planning'\n      });\n    }\n\n    // Risk mitigation suggestions\n    if (context.content?.includes('risk') && ragContext.previousSolutions['risk-assessment']) {\n      suggestions.push({\n        type: 'risk-mitigation',\n        message: 'Similar risks in previous sprints were mitigated by early stakeholder communication',\n        priority: 'high',\n        file: context.filePath || 'risk-register'\n      });\n    }\n\n    // Team coordination suggestions\n    if (context.content?.includes('team') && ragContext.agentExpertise.length > 0) {\n      suggestions.push({\n        type: 'team-coordination',\n        message: 'Previous team coordination patterns suggest daily standups at 9:30 AM work best',\n        priority: 'low',\n        file: context.filePath || 'team-calendar'\n      });\n    }\n\n    return suggestions;\n  }\n\n  /**\n   * Determine which agents to hand off to\n   */\n  private determineHandoffs(context: AgentActivationContext, response: AgentResponse): string[] {\n    const handoffs: string[] = [];\n\n    // Hand off to Maria if quality concerns detected\n    if (response.priority === 'high' || response.priority === 'critical') {\n      handoffs.push('maria-qa');\n    }\n\n    // Hand off to Alex-BA for requirements clarification\n    if (context.content?.includes('requirement') || context.content?.includes('user story')) {\n      handoffs.push('alex-ba');\n    }\n\n    return handoffs;\n  }\n\n  /**\n   * Get base prompt template for PM\n   */\n  protected getBasePromptTemplate(): string {\n    return `You are Sarah PM, an expert Project Manager specializing in Agile/Scrum methodology.\nYour role is to coordinate sprint planning, track milestones, assess risks, and ensure team alignment.\nFocus on practical project management guidance based on historical data and best practices.`;\n  }\n\n  /**\n   * Generate domain-specific handoffs based on analysis\n   */\n  protected generateDomainHandoffs(analysis: AnalysisResult): string[] {\n    const handoffs: string[] = [];\n\n    // Check if QA involvement needed\n    if (analysis.patterns.some(p => p.type === 'risk-assessment' && (p.severity === 'high' || p.severity === 'critical'))) {\n      handoffs.push('maria-qa');\n    }\n\n    // Check if requirements clarification needed\n    if (analysis.patterns.some(p => p.type === 'task-coordination')) {\n      handoffs.push('alex-ba');\n    }\n\n    return handoffs;\n  }\n}\n"],"version":3}