{"file":"/Users/nissimmenashe/VERSATIL SDLC FW/tests/unit/memory/context-stats-tracker.test.ts","mappings":"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","names":[],"sources":["/Users/nissimmenashe/VERSATIL SDLC FW/tests/unit/memory/context-stats-tracker.test.ts"],"sourcesContent":["/**\n * Unit Tests: Context Stats Tracker\n *\n * Coverage Target: 85%+\n *\n * Test Coverage:\n * - Initialization and singleton pattern\n * - Event tracking (context clears, memory operations, contract events)\n * - Statistics calculation\n * - Report generation\n * - Cleanup operations\n * - Error handling and resilience\n * - Concurrent operations\n */\n\nimport { describe, it, expect, beforeEach, afterEach, jest } from '@jest/globals';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\nimport * as os from 'os';\nimport {\n  ContextStatsTracker,\n  getGlobalContextTracker,\n  ContextClearEvent,\n  MemoryOperation,\n  ContractEvent,\n  ContextStatistics\n} from '../../../src/memory/context-stats-tracker.js';\n\ndescribe('ContextStatsTracker', () => {\n  let tracker: ContextStatsTracker;\n  let testStatsDir: string;\n\n  beforeEach(async () => {\n    // Create temporary test directory\n    testStatsDir = path.join(os.tmpdir(), `versatil-test-${Date.now()}`);\n    await fs.mkdir(testStatsDir, { recursive: true });\n\n    // Create tracker with test directory\n    tracker = new ContextStatsTracker(testStatsDir);\n    await tracker.initialize();\n  });\n\n  afterEach(async () => {\n    // Cleanup test directory\n    try {\n      await fs.rm(testStatsDir, { recursive: true, force: true });\n    } catch (error) {\n      // Ignore cleanup errors\n    }\n  });\n\n  describe('Initialization', () => {\n    it('should create stats directory on initialization', async () => {\n      const stats = await fs.stat(testStatsDir);\n      expect(stats.isDirectory()).toBe(true);\n    });\n\n    it('should handle missing stats directory gracefully', async () => {\n      const newTracker = new ContextStatsTracker(path.join(testStatsDir, 'nonexistent'));\n      await expect(newTracker.initialize()).resolves.not.toThrow();\n    });\n\n    it('should load existing data on initialization', async () => {\n      // Create initial event\n      await tracker.trackClearEvent({\n        agentId: 'maria-qa',\n        tokensBefore: 100000,\n        tokensAfter: 40000,\n        tokensCleared: 60000,\n        duration: 500,\n        reason: 'automatic-100k'\n      });\n\n      // Create new tracker instance (should load existing data)\n      const newTracker = new ContextStatsTracker(testStatsDir);\n      await newTracker.initialize();\n\n      const stats = newTracker.getStatistics();\n      expect(stats.totalClearEvents).toBe(1);\n    });\n\n    it('should handle corrupted data files gracefully', async () => {\n      // Write corrupted JSON\n      const eventsPath = path.join(testStatsDir, 'context-clear-events.jsonl');\n      await fs.writeFile(eventsPath, 'not valid json\\n', 'utf-8');\n\n      const newTracker = new ContextStatsTracker(testStatsDir);\n      await expect(newTracker.initialize()).resolves.not.toThrow();\n    });\n  });\n\n  describe('Context Clear Event Tracking', () => {\n    it('should track context clear event', async () => {\n      const clearEvent: Omit<ContextClearEvent, 'timestamp'> = {\n        agentId: 'james-frontend',\n        tokensBefore: 120000,\n        tokensAfter: 45000,\n        tokensCleared: 75000,\n        duration: 600,\n        reason: 'automatic-100k'\n      };\n\n      await tracker.trackClearEvent(clearEvent);\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalClearEvents).toBe(1);\n      expect(stats.avgTokensCleared).toBe(75000);\n      expect(stats.avgClearDuration).toBe(600);\n    });\n\n    it('should track multiple clear events', async () => {\n      await tracker.trackClearEvent({\n        agentId: 'marcus-backend',\n        tokensBefore: 100000,\n        tokensAfter: 40000,\n        tokensCleared: 60000,\n        duration: 500,\n        reason: 'automatic-100k'\n      });\n\n      await tracker.trackClearEvent({\n        agentId: 'james-frontend',\n        tokensBefore: 110000,\n        tokensAfter: 45000,\n        tokensCleared: 65000,\n        duration: 550,\n        reason: 'automatic-100k'\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalClearEvents).toBe(2);\n      expect(stats.avgTokensCleared).toBe(62500); // (60000 + 65000) / 2\n      expect(stats.avgClearDuration).toBe(525); // (500 + 550) / 2\n    });\n\n    it('should limit clear events to last 1000', async () => {\n      // Add 1100 events\n      for (let i = 0; i < 1100; i++) {\n        await tracker.trackClearEvent({\n          agentId: 'maria-qa',\n          tokensBefore: 100000,\n          tokensAfter: 40000,\n          tokensCleared: 60000,\n          duration: 500,\n          reason: 'automatic-100k'\n        });\n      }\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalClearEvents).toBe(1000); // Should cap at 1000\n    });\n\n    it('should track clear events by agent', async () => {\n      await tracker.trackClearEvent({\n        agentId: 'marcus-backend',\n        tokensBefore: 100000,\n        tokensAfter: 40000,\n        tokensCleared: 60000,\n        duration: 500,\n        reason: 'automatic-100k'\n      });\n\n      await tracker.trackClearEvent({\n        agentId: 'marcus-backend',\n        tokensBefore: 110000,\n        tokensAfter: 45000,\n        tokensCleared: 65000,\n        duration: 550,\n        reason: 'automatic-100k'\n      });\n\n      await tracker.trackClearEvent({\n        agentId: 'james-frontend',\n        tokensBefore: 105000,\n        tokensAfter: 42000,\n        tokensCleared: 63000,\n        duration: 520,\n        reason: 'automatic-100k'\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.clearEventsByAgent['marcus-backend']).toBe(2);\n      expect(stats.clearEventsByAgent['james-frontend']).toBe(1);\n    });\n\n    it('should persist clear events to disk', async () => {\n      await tracker.trackClearEvent({\n        agentId: 'maria-qa',\n        tokensBefore: 100000,\n        tokensAfter: 40000,\n        tokensCleared: 60000,\n        duration: 500,\n        reason: 'automatic-100k'\n      });\n\n      // Verify file exists\n      const eventsPath = path.join(testStatsDir, 'context-clear-events.jsonl');\n      const fileExists = await fs.access(eventsPath).then(() => true).catch(() => false);\n      expect(fileExists).toBe(true);\n\n      // Verify file content\n      const content = await fs.readFile(eventsPath, 'utf-8');\n      const lines = content.trim().split('\\n');\n      expect(lines.length).toBe(1);\n\n      const event = JSON.parse(lines[0]);\n      expect(event.agentId).toBe('maria-qa');\n      expect(event.tokensCleared).toBe(60000);\n    });\n  });\n\n  describe('Memory Operation Tracking', () => {\n    it('should track memory operation', async () => {\n      await tracker.trackMemoryOperation({\n        agentId: 'alex-ba',\n        operation: 'create',\n        path: 'requirements/user-auth.md',\n        success: true,\n        tokensUsed: 500,\n        duration: 100\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalMemoryOperations).toBe(1);\n      expect(stats.memoryOperationsByType['create']).toBe(1);\n      expect(stats.memoryOperationsByAgent['alex-ba']).toBe(1);\n    });\n\n    it('should track multiple memory operations', async () => {\n      const operations = [\n        { agentId: 'maria-qa' as const, operation: 'create' as const, path: 'test-patterns.md', success: true, tokensUsed: 300, duration: 80 },\n        { agentId: 'maria-qa' as const, operation: 'str_replace' as const, path: 'test-patterns.md', success: true, tokensUsed: 150, duration: 60 },\n        { agentId: 'james-frontend' as const, operation: 'view' as const, path: 'ui-components.md', success: true, tokensUsed: 200, duration: 50 }\n      ];\n\n      for (const op of operations) {\n        await tracker.trackMemoryOperation(op);\n      }\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalMemoryOperations).toBe(3);\n      expect(stats.memoryOperationsByType['create']).toBe(1);\n      expect(stats.memoryOperationsByType['str_replace']).toBe(1);\n      expect(stats.memoryOperationsByType['view']).toBe(1);\n    });\n\n    it('should track failed operations', async () => {\n      await tracker.trackMemoryOperation({\n        agentId: 'marcus-backend',\n        operation: 'str_replace',\n        path: 'api-patterns.md',\n        success: false,\n        tokensUsed: 0,\n        duration: 50\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalMemoryOperations).toBe(1);\n      expect(stats.memoryOperationsByType['str_replace']).toBe(1);\n    });\n\n    it('should limit memory operations to last 5000', async () => {\n      // Add 5100 operations\n      for (let i = 0; i < 5100; i++) {\n        await tracker.trackMemoryOperation({\n          agentId: 'maria-qa',\n          operation: 'view',\n          path: 'test.md',\n          success: true,\n          tokensUsed: 100,\n          duration: 50\n        });\n      }\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalMemoryOperations).toBe(5000); // Should cap at 5000\n    });\n\n    it('should persist memory operations to disk', async () => {\n      await tracker.trackMemoryOperation({\n        agentId: 'dana-database',\n        operation: 'create',\n        path: 'schema-patterns.md',\n        success: true,\n        tokensUsed: 400,\n        duration: 90\n      });\n\n      const opsPath = path.join(testStatsDir, 'memory-operations.jsonl');\n      const fileExists = await fs.access(opsPath).then(() => true).catch(() => false);\n      expect(fileExists).toBe(true);\n\n      const content = await fs.readFile(opsPath, 'utf-8');\n      const lines = content.trim().split('\\n');\n      expect(lines.length).toBe(1);\n\n      const op = JSON.parse(lines[0]);\n      expect(op.agentId).toBe('dana-database');\n      expect(op.operation).toBe('create');\n    });\n  });\n\n  describe('Contract Event Tracking', () => {\n    it('should track contract event', async () => {\n      await tracker.trackContractEvent({\n        contractId: 'contract-123',\n        eventType: 'created',\n        sender: 'alex-ba',\n        receivers: ['dana-database', 'marcus-backend', 'james-frontend'],\n        handoffType: 'parallel',\n        priority: 'high',\n        validationScore: 95\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalContractEvents).toBe(1);\n      expect(stats.contractEventsByType['created']).toBe(1);\n    });\n\n    it('should track contract lifecycle', async () => {\n      const contractId = 'contract-456';\n\n      // Created\n      await tracker.trackContractEvent({\n        contractId,\n        eventType: 'created',\n        sender: 'alex-ba',\n        receivers: ['marcus-backend'],\n        handoffType: 'sequential',\n        priority: 'normal',\n        validationScore: 88\n      });\n\n      // Sent\n      await tracker.trackContractEvent({\n        contractId,\n        eventType: 'sent',\n        sender: 'alex-ba',\n        receivers: ['marcus-backend'],\n        handoffType: 'sequential',\n        priority: 'normal'\n      });\n\n      // Completed\n      await tracker.trackContractEvent({\n        contractId,\n        eventType: 'completed',\n        sender: 'alex-ba',\n        receivers: ['marcus-backend'],\n        handoffType: 'sequential',\n        priority: 'normal'\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalContractEvents).toBe(3);\n      expect(stats.contractEventsByType['created']).toBe(1);\n      expect(stats.contractEventsByType['sent']).toBe(1);\n      expect(stats.contractEventsByType['completed']).toBe(1);\n    });\n\n    it('should persist contract events to disk', async () => {\n      await tracker.trackContractEvent({\n        contractId: 'contract-789',\n        eventType: 'created',\n        sender: 'sarah-pm',\n        receivers: ['maria-qa'],\n        handoffType: 'sequential',\n        priority: 'critical',\n        validationScore: 92\n      });\n\n      const eventsPath = path.join(testStatsDir, 'contract-events.jsonl');\n      const fileExists = await fs.access(eventsPath).then(() => true).catch(() => false);\n      expect(fileExists).toBe(true);\n\n      const content = await fs.readFile(eventsPath, 'utf-8');\n      const lines = content.trim().split('\\n');\n      expect(lines.length).toBe(1);\n\n      const event = JSON.parse(lines[0]);\n      expect(event.contractId).toBe('contract-789');\n      expect(event.eventType).toBe('created');\n    });\n  });\n\n  describe('Statistics Calculation', () => {\n    it('should return default statistics when no data', () => {\n      const stats = tracker.getStatistics();\n\n      expect(stats.totalClearEvents).toBe(0);\n      expect(stats.totalMemoryOperations).toBe(0);\n      expect(stats.totalContractEvents).toBe(0);\n      expect(stats.avgTokensCleared).toBe(0);\n      expect(stats.avgClearDuration).toBe(0);\n    });\n\n    it('should calculate correct averages', async () => {\n      // Add clear events with different values\n      await tracker.trackClearEvent({\n        agentId: 'maria-qa',\n        tokensBefore: 100000,\n        tokensAfter: 40000,\n        tokensCleared: 60000,\n        duration: 500,\n        reason: 'automatic-100k'\n      });\n\n      await tracker.trackClearEvent({\n        agentId: 'james-frontend',\n        tokensBefore: 120000,\n        tokensAfter: 50000,\n        tokensCleared: 70000,\n        duration: 700,\n        reason: 'automatic-100k'\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.avgTokensCleared).toBe(65000); // (60000 + 70000) / 2\n      expect(stats.avgClearDuration).toBe(600); // (500 + 700) / 2\n    });\n\n    it('should group events by agent correctly', async () => {\n      await tracker.trackMemoryOperation({\n        agentId: 'maria-qa',\n        operation: 'create',\n        path: 'test1.md',\n        success: true,\n        tokensUsed: 100,\n        duration: 50\n      });\n\n      await tracker.trackMemoryOperation({\n        agentId: 'maria-qa',\n        operation: 'view',\n        path: 'test2.md',\n        success: true,\n        tokensUsed: 200,\n        duration: 60\n      });\n\n      await tracker.trackMemoryOperation({\n        agentId: 'james-frontend',\n        operation: 'create',\n        path: 'ui.md',\n        success: true,\n        tokensUsed: 150,\n        duration: 55\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.memoryOperationsByAgent['maria-qa']).toBe(2);\n      expect(stats.memoryOperationsByAgent['james-frontend']).toBe(1);\n    });\n\n    it('should group events by type correctly', async () => {\n      await tracker.trackMemoryOperation({\n        agentId: 'alex-ba',\n        operation: 'create',\n        path: 'req1.md',\n        success: true,\n        tokensUsed: 100,\n        duration: 50\n      });\n\n      await tracker.trackMemoryOperation({\n        agentId: 'alex-ba',\n        operation: 'create',\n        path: 'req2.md',\n        success: true,\n        tokensUsed: 150,\n        duration: 60\n      });\n\n      await tracker.trackMemoryOperation({\n        agentId: 'alex-ba',\n        operation: 'str_replace',\n        path: 'req1.md',\n        success: true,\n        tokensUsed: 80,\n        duration: 40\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.memoryOperationsByType['create']).toBe(2);\n      expect(stats.memoryOperationsByType['str_replace']).toBe(1);\n    });\n  });\n\n  describe('Report Generation', () => {\n    it('should generate comprehensive report', async () => {\n      // Add sample data\n      await tracker.trackClearEvent({\n        agentId: 'maria-qa',\n        tokensBefore: 100000,\n        tokensAfter: 40000,\n        tokensCleared: 60000,\n        duration: 500,\n        reason: 'automatic-100k'\n      });\n\n      await tracker.trackMemoryOperation({\n        agentId: 'maria-qa',\n        operation: 'create',\n        path: 'test-patterns.md',\n        success: true,\n        tokensUsed: 300,\n        duration: 80\n      });\n\n      await tracker.trackContractEvent({\n        contractId: 'contract-123',\n        eventType: 'created',\n        sender: 'alex-ba',\n        receivers: ['dana-database', 'marcus-backend'],\n        handoffType: 'parallel',\n        priority: 'high',\n        validationScore: 90\n      });\n\n      const report = await tracker.generateReport();\n\n      expect(report).toContain('Context Statistics Report');\n      expect(report).toContain('Total Clear Events: 1');\n      expect(report).toContain('Total Memory Operations: 1');\n      expect(report).toContain('Total Contract Events: 1');\n      expect(report).toContain('maria-qa');\n      expect(report).toContain('alex-ba');\n    });\n\n    it('should handle empty data in report', async () => {\n      const report = await tracker.generateReport();\n\n      expect(report).toContain('Context Statistics Report');\n      expect(report).toContain('Total Clear Events: 0');\n      expect(report).toContain('Total Memory Operations: 0');\n      expect(report).toContain('Total Contract Events: 0');\n    });\n  });\n\n  describe('Cleanup Operations', () => {\n    it('should cleanup old data', async () => {\n      // Add events with old timestamps\n      const oldDate = new Date(Date.now() - 31 * 24 * 60 * 60 * 1000); // 31 days ago\n\n      await tracker.trackClearEvent({\n        agentId: 'maria-qa',\n        tokensBefore: 100000,\n        tokensAfter: 40000,\n        tokensCleared: 60000,\n        duration: 500,\n        reason: 'automatic-100k'\n      });\n\n      // Manually set old timestamp (hack for testing)\n      const stats = tracker.getStatistics();\n      expect(stats.totalClearEvents).toBe(1);\n\n      // Cleanup (keep last 30 days)\n      await tracker.cleanup(30);\n\n      // Recent events should remain, but in real scenario old would be removed\n      // This is a simplified test - full test would require time manipulation\n    });\n\n    it('should persist cleaned data', async () => {\n      await tracker.trackMemoryOperation({\n        agentId: 'maria-qa',\n        operation: 'create',\n        path: 'test.md',\n        success: true,\n        tokensUsed: 100,\n        duration: 50\n      });\n\n      await tracker.cleanup(30);\n\n      // Verify files still exist and are valid\n      const opsPath = path.join(testStatsDir, 'memory-operations.jsonl');\n      const fileExists = await fs.access(opsPath).then(() => true).catch(() => false);\n      expect(fileExists).toBe(true);\n    });\n  });\n\n  describe('Error Handling', () => {\n    it('should handle file write errors gracefully', async () => {\n      // Make directory read-only to trigger write error\n      await fs.chmod(testStatsDir, 0o444);\n\n      await expect(\n        tracker.trackClearEvent({\n          agentId: 'maria-qa',\n          tokensBefore: 100000,\n          tokensAfter: 40000,\n          tokensCleared: 60000,\n          duration: 500,\n          reason: 'automatic-100k'\n        })\n      ).resolves.not.toThrow(); // Should not throw, just warn\n\n      // Restore permissions\n      await fs.chmod(testStatsDir, 0o755);\n    });\n\n    it('should handle concurrent operations', async () => {\n      // Simulate concurrent tracking\n      const promises = Array(100).fill(null).map((_, i) =>\n        tracker.trackMemoryOperation({\n          agentId: 'maria-qa',\n          operation: 'view',\n          path: `test-${i}.md`,\n          success: true,\n          tokensUsed: 100,\n          duration: 50\n        })\n      );\n\n      await expect(Promise.all(promises)).resolves.not.toThrow();\n\n      const stats = tracker.getStatistics();\n      expect(stats.totalMemoryOperations).toBe(100);\n    });\n  });\n\n  describe('Singleton Pattern', () => {\n    it('should return same instance from getGlobalContextTracker', () => {\n      const instance1 = getGlobalContextTracker();\n      const instance2 = getGlobalContextTracker();\n\n      expect(instance1).toBe(instance2);\n    });\n\n    it('should initialize singleton automatically', async () => {\n      const instance = getGlobalContextTracker();\n\n      // Should be able to use immediately\n      await expect(\n        instance.trackClearEvent({\n          agentId: 'maria-qa',\n          tokensBefore: 100000,\n          tokensAfter: 40000,\n          tokensCleared: 60000,\n          duration: 500,\n          reason: 'automatic-100k'\n        })\n      ).resolves.not.toThrow();\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle zero duration', async () => {\n      await tracker.trackClearEvent({\n        agentId: 'maria-qa',\n        tokensBefore: 100000,\n        tokensAfter: 40000,\n        tokensCleared: 60000,\n        duration: 0,\n        reason: 'manual'\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.avgClearDuration).toBe(0);\n    });\n\n    it('should handle zero tokens cleared', async () => {\n      await tracker.trackClearEvent({\n        agentId: 'maria-qa',\n        tokensBefore: 100000,\n        tokensAfter: 100000,\n        tokensCleared: 0,\n        duration: 100,\n        reason: 'manual'\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.avgTokensCleared).toBe(0);\n    });\n\n    it('should handle very long paths', async () => {\n      const longPath = 'a/'.repeat(100) + 'test.md';\n\n      await expect(\n        tracker.trackMemoryOperation({\n          agentId: 'maria-qa',\n          operation: 'create',\n          path: longPath,\n          success: true,\n          tokensUsed: 100,\n          duration: 50\n        })\n      ).resolves.not.toThrow();\n    });\n\n    it('should handle special characters in paths', async () => {\n      const specialPath = 'test with spaces & symbols #$%.md';\n\n      await expect(\n        tracker.trackMemoryOperation({\n          agentId: 'maria-qa',\n          operation: 'create',\n          path: specialPath,\n          success: true,\n          tokensUsed: 100,\n          duration: 50\n        })\n      ).resolves.not.toThrow();\n    });\n\n    it('should handle very large token counts', async () => {\n      await tracker.trackClearEvent({\n        agentId: 'maria-qa',\n        tokensBefore: 1000000,\n        tokensAfter: 100000,\n        tokensCleared: 900000,\n        duration: 5000,\n        reason: 'automatic-100k'\n      });\n\n      const stats = tracker.getStatistics();\n      expect(stats.avgTokensCleared).toBe(900000);\n    });\n  });\n});\n"],"version":3}