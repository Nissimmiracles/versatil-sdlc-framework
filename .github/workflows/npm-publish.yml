name: Publish to npm

on:
  release:
    types: [published]

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Verify build
        run: |
          echo "Verifying dist/ directory..."
          ls -la dist/
          echo "Checking for required files..."
          test -f dist/index.js || exit 1
          echo "✅ Build verified"

      - name: Check package version
        id: version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $PACKAGE_VERSION"

      - name: Check if version already published
        id: check
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          if npm view versatil-sdlc-framework@$VERSION version 2>/dev/null; then
            echo "PUBLISHED=true" >> $GITHUB_OUTPUT
            echo "⚠️  Version $VERSION already published to npm"
          else
            echo "PUBLISHED=false" >> $GITHUB_OUTPUT
            echo "✅ Version $VERSION not yet published"
          fi

      - name: Publish to npm (dry run)
        if: steps.check.outputs.PUBLISHED == 'false'
        run: |
          echo "Running publish dry run..."
          npm publish --dry-run --access public

      - name: Publish to npm
        if: steps.check.outputs.PUBLISHED == 'false'
        run: |
          echo "Publishing to npm..."
          npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify publication
        if: steps.check.outputs.PUBLISHED == 'false'
        run: |
          echo "Waiting for npm to propagate..."
          sleep 30

          VERSION=${{ steps.version.outputs.VERSION }}
          if npm view versatil-sdlc-framework@$VERSION version 2>/dev/null; then
            echo "✅ Package successfully published to npm"
            echo "Install with: npm install -g versatil-sdlc-framework@$VERSION"
          else
            echo "❌ Package not found on npm after publication"
            exit 1
          fi

      - name: Post-publish validation
        if: steps.check.outputs.PUBLISHED == 'false'
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}

          echo "📦 Validating published package..."

          # Check package metadata
          npm view versatil-sdlc-framework@$VERSION

          echo ""
          echo "✅ Publication successful!"
          echo ""
          echo "Package: versatil-sdlc-framework@$VERSION"
          echo "Registry: https://www.npmjs.com/package/versatil-sdlc-framework"
          echo ""
          echo "Users can install with:"
          echo "  npm install -g versatil-sdlc-framework@$VERSION"
          echo "  npm install -g versatil-sdlc-framework@latest"

      - name: Create summary
        if: steps.check.outputs.PUBLISHED == 'false'
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          ## 📦 npm Publication Successful

          **Package:** versatil-sdlc-framework@${{ steps.version.outputs.VERSION }}

          **Links:**
          - [npm Registry](https://www.npmjs.com/package/versatil-sdlc-framework)
          - [GitHub Release](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.VERSION }})

          **Installation:**
          \`\`\`bash
          npm install -g versatil-sdlc-framework@${{ steps.version.outputs.VERSION }}
          # or
          npm install -g versatil-sdlc-framework@latest
          \`\`\`

          **Update:**
          \`\`\`bash
          versatil update check
          versatil update install
          \`\`\`
          EOF

  test-install:
    name: Test Installation
    runs-on: ${{ matrix.os }}
    needs: publish

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20]

    steps:
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Wait for npm propagation
        run: |
          echo "Waiting for npm to fully propagate..."
          sleep 60

      - name: Install package
        run: |
          npm install -g versatil-sdlc-framework@${{ steps.version.outputs.VERSION }}

      - name: Verify installation
        run: |
          versatil --version
          versatil --help

      - name: Run basic commands
        run: |
          versatil config show || echo "Config not yet initialized"
          versatil update status || echo "Update check failed"
          versatil doctor || echo "Doctor check returned warnings"

      - name: Report success
        run: |
          echo "✅ Installation successful on ${{ matrix.os }} with Node.js ${{ matrix.node-version }}"
