{
  "name": "@versatil/sdlc-framework",
  "version": "6.6.0",
  "type": "module",
  "description": "AI-Native SDLC Framework for Claude with 18 specialized agents (BA, Database, Backend, Frontend, QA, PM, AI/ML, MCP), 98%+ context retention via RAG memory, automatic quality gates (80%+ coverage, OWASP, WCAG 2.1 AA), and 12 production MCPs. Free & open source alternative to Copilot/Cursor with full-stack coordination and proactive intelligence.",
  "main": "dist/index.js",
  "bin": {
    "versatil": "./bin/versatil.js",
    "versatil-daemon": "./bin/versatil-daemon.js",
    "versatil-audit-daemon": "./bin/versatil-audit-daemon.js",
    "versatil-mcp": "./bin/versatil-mcp.js",
    "versatil-mcp-setup": "./bin/versatil-mcp-setup.js",
    "versatil-sdlc": "./dist/index-enhanced.js",
    "versatil-update": "./bin/update-command.js",
    "versatil-rollback": "./bin/rollback-command.js",
    "versatil-config": "./bin/config-command.js",
    "versatil-credentials": "./bin/credentials-command.js",
    "versatil-conversation": "./bin/conversation-manager.js",
    "versatil-uninstall": "./scripts/uninstall.cjs",
    "activate-agent": "./bin/activate-agent.js",
    "codify-learnings": "./bin/codify-learnings.js",
    "velocity": "./bin/velocity-cli.js"
  },
  "scripts": {
    "postinstall": "node scripts/postinstall-wizard.cjs && node scripts/create-cursor-hooks.cjs && node scripts/seed-rag-defaults.cjs --silent || true",
    "verify:install": "node scripts/verify-installation.cjs",
    "validate:isolation": "node scripts/validate-isolation.cjs",
    "validate:update": "node scripts/validate-update.cjs",
    "recover": "node scripts/recover-framework.cjs",
    "typecheck": "tsc --noEmit",
    "build": "node scripts/show-framework-active.cjs --quick && tsc && ~/.versatil/hooks/afterBuild.sh",
    "build:security": "node scripts/show-framework-active.cjs --quick && tsc && echo 'Security modules compiled'",
    "build:watch": "node scripts/show-framework-active.cjs --quick && tsc --watch",
    "build:release": "npm run lint && npm run build && npm run test:full",
    "security:start": "node scripts/security-manager.cjs start",
    "security:stop": "node scripts/security-manager.cjs stop",
    "security:restart": "node scripts/security-manager.cjs restart",
    "security:status": "node scripts/security-manager.cjs status",
    "security:test": "node scripts/microsegmentation-stress-test.cjs",
    "dev": "tsc --watch",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "test": "node scripts/show-framework-active.cjs --quick && jest",
    "test:watch": "node scripts/show-framework-active.cjs --quick && jest --watch",
    "test:coverage": "node scripts/show-framework-active.cjs --quick && jest --coverage --coverageReporters=json-summary --coverageReporters=text",
    "test:unit": "jest --selectProjects UNIT",
    "test:integration": "jest --selectProjects INTEGRATION",
    "test:stress": "jest --selectProjects STRESS",
    "test:e2e": "playwright test --project=chromium-desktop",
    "test:e2e:all": "playwright test",
    "test:visual": "node test/generate-visual-report.cjs",
    "test:visual:percy": "npx percy exec -- npx playwright test --project=visual-regression",
    "test:visual:percy:components": "npx percy exec -- npx playwright test tests/visual/component-visual-regression.spec.ts",
    "test:visual:percy:responsive": "npx percy exec -- npx playwright test tests/visual/responsive-visual-regression.spec.ts",
    "test:visual:percy:dry-run": "npx percy exec --dry-run -- npx playwright test --project=visual-regression",
    "test:performance": "node test/run-all-tests.cjs --skip-optional",
    "test:accessibility": "./scripts/run-accessibility-tests.sh --full --report",
    "test:accessibility:quick": "./scripts/run-accessibility-tests.sh --quick",
    "test:accessibility:keyboard": "./scripts/run-accessibility-tests.sh --keyboard",
    "test:accessibility:wcag": "playwright test tests/accessibility/wcag-2.1-aa-enforcement.a11y.spec.ts --project=accessibility",
    "test:accessibility:ci": "./scripts/run-accessibility-tests.sh --full --ci",
    "test:security": "playwright test --project=security",
    "test:opera": "playwright test --project=opera-integration",
    "test:opera-mcp": "node test-opera-mcp.cjs",
    "test:self-referential": "node test-self-referential.cjs",
    "simulation:stress-test": "node dist/simulation/standalone-test.js",
    "simulation:stress-test-full": "node dist/simulation/stress-test.js",
    "simulation:capability-matrix": "node dist/simulation/capability-matrix.js",
    "simulation:quick": "node dist/simulation/quick-stress-test.js",
    "test:full": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "doctor": "node scripts/doctor-integration.cjs --check-all",
    "doctor:fix": "node scripts/doctor-integration.cjs --auto-fix",
    "test:maria-qa": "npm run test:coverage && npm run test:e2e:all",
    "playwright:install": "playwright install chromium",
    "playwright:ui": "playwright test --ui",
    "playwright:report": "playwright show-report",
    "playwright:debug": "playwright test --debug",
    "cursor:update": "npm run test:full && npm run build && echo 'Framework ready for Cursor update'",
    "security:scan": "npm audit --audit-level=moderate",
    "validate": "npm run lint && npm run validate:commands && npm run test:full && npm run build",
    "validate:architecture": "node scripts/validate-architecture.cjs",
    "validate:watch": "node scripts/architectural-watcher.cjs",
    "dev:validated": "concurrently -n \"BUILD,WATCH\" -c \"bgBlue.bold,bgGreen.bold\" \"npm run dev\" \"npm run validate:watch\"",
    "validate:commands": "node scripts/validate-slash-commands.cjs",
    "validate:commands:verbose": "node scripts/validate-slash-commands.cjs --verbose",
    "validate:commands:fix": "node scripts/validate-slash-commands.cjs --fix",
    "validate:sync": "node scripts/validate-sync.cjs",
    "validate:sync:watch": "node scripts/validate-sync.cjs --watch",
    "validate:sync:quick": "node scripts/validate-sync.cjs --quick",
    "monitor": "node scripts/framework-monitor.cjs",
    "monitor:watch": "node scripts/framework-monitor.cjs --watch",
    "monitor:stress": "node scripts/framework-monitor.cjs --stress",
    "status": "node scripts/dashboard-status.cjs",
    "dashboard": "node scripts/realtime-dashboard-v3.cjs",
    "dashboard:v1": "node scripts/realtime-dashboard.cjs",
    "dashboard:v2": "node scripts/realtime-dashboard-v2.cjs",
    "dashboard:v3": "node scripts/realtime-dashboard-v3.cjs",
    "dashboard:background": "node scripts/background-monitor.cjs",
    "dashboard:stop": "node scripts/stop-background-monitor.cjs",
    "dashboard:logs": "tail -f ~/.versatil/logs/background-monitor.log",
    "session:summary": "node scripts/session-summary.cjs",
    "session:weekly": "node scripts/session-summary.cjs --week",
    "session:all": "node scripts/session-summary.cjs --all",
    "test:stability": "node scripts/run-stability-tests.cjs",
    "test:stability:ci": "node scripts/run-stability-tests.cjs --ci",
    "healthcheck": "npm run test:stability && echo 'Framework health: GOOD'",
    "health-check": "node dist/index.js --health-check",
    "agents": "node scripts/show-agents.cjs",
    "show-agents": "node scripts/show-agents.cjs",
    "test:enhanced": "node test/run-all-tests.cjs",
    "test:demo": "node tests/run-all-tests.js",
    "test:interactive": "node tests/run-all-tests.js",
    "test:scenarios": "node tests/real-world-scenarios.js",
    "test:edge-cases": "node tests/edge-case-tests.js",
    "test:learning": "node tests/learning-demos.js",
    "test:quick": "node tests/enhanced-demo-suite.js",
    "migrate": "node scripts/migrate-to-1.2.0.cjs",
    "detect": "node detect-and-integrate.cjs",
    "onboard": "node enhanced-onboarding.cjs",
    "demo:context": "node context-awareness-demo.cjs",
    "demo:mcp": "node mcp-auto-discovery-demo.cjs",
    "verify:context": "node verify-context-awareness.cjs",
    "start:enhanced": "node dist/index.js enhanced",
    "start:autonomous": "node dist/index.js autonomous",
    "start:opera-mcp": "node init-opera-mcp.mjs",
    "opera:start": "node init-opera-mcp.mjs",
    "opera:update": "node init-opera-mcp.mjs --check-updates",
    "opera:health": "node init-opera-mcp.mjs --health",
    "mcp:discover": "node init-opera-mcp.mjs --discover-mcps",
    "mcp:status": "node init-opera-mcp.mjs --mcp-status",
    "mcp:health": "node scripts/mcp-health-check.cjs",
    "mcp:health:verbose": "node scripts/mcp-health-check.cjs --verbose",
    "mcp:health:watch": "node scripts/mcp-health-check.cjs --watch",
    "init": "node scripts/setup-agents.cjs",
    "memory:init": "node scripts/initialize-memory-tool.cjs",
    "memory:stats": "node -e \"require('./dist/agents/sdk/memory-enhanced-agents.js').getAgentMemoryStats().then(s => console.log(JSON.stringify(s, null, 2)))\"",
    "memory:cleanup": "node -e \"require('./dist/agents/sdk/memory-enhanced-agents.js').cleanupAgentMemories()\"",
    "context:stats": "node scripts/context-stats.cjs stats",
    "context:report": "node scripts/context-stats.cjs report",
    "context:cleanup": "node scripts/context-stats.cjs cleanup",
    "context:test": "node scripts/test-context-stats.cjs",
    "rag:setup": "node scripts/setup-supabase.cjs",
    "rag:migrate": "node scripts/migrate-vector-store.cjs",
    "rag:migrate:gcp": "node scripts/migrate-to-gcp.cjs",
    "rag:migrate:graph": "node scripts/migrate-to-graphrag.cjs",
    "rag:seed-framework": "node scripts/seed-rag-framework.cjs",
    "rag:seed-defaults": "node scripts/seed-rag-defaults.cjs",
    "rag:test": "node scripts/test-rag.cjs",
    "rag:test:gcp": "node scripts/test-gcp-rag.cjs",
    "rag:test:graph": "node scripts/test-graphrag.cjs",
    "learning:seed": "node scripts/seed-learning-defaults.cjs",
    "learning:test": "node scripts/test-learning.cjs",
    "learning:test:verbose": "node scripts/test-learning.cjs --verbose",
    "context:migrate": "node scripts/migrate-project-context.cjs",
    "context:test": "node scripts/test-three-layer-context.cjs",
    "verify:agent-count": "node scripts/verify-agent-count.cjs",
    "fix:agent-count": "node scripts/fix-agent-count.cjs",
    "session:compass": "node scripts/session-compass.cjs",
    "session:compass:brief": "node scripts/session-compass.cjs --brief",
    "session:compass:watch": "node scripts/session-compass.cjs --watch",
    "validate:activation": "node scripts/validate-activation.cjs",
    "validate:activation:test": "node scripts/validate-activation.cjs --run-tests",
    "validate:activation:report": "node scripts/validate-activation.cjs --json --csv",
    "validate:percy": "node scripts/verify-percy-integration.cjs",
    "test:activation": "npm run test -- tests/agents/auto-activation.test.ts tests/agents/sub-agent-activation.test.ts",
    "test:activation:e2e": "npm run test -- tests/integration/agent-auto-activation-e2e.test.ts",
    "test:activation:all": "npm run test -- tests/agents/auto-activation.test.ts tests/agents/sub-agent-activation.test.ts tests/integration/agent-auto-activation-e2e.test.ts",
    "analyze": "node scripts/analyze-file.cjs",
    "simulate": "node scripts/simulate-multi-agent.cjs",
    "test-all-scripts": "node scripts/test-all-scripts.cjs",
    "validate:scripts": "node test/validate-scripts.cjs",
    "test:maria": "node test/test-enhanced-maria.cjs",
    "test:maria-patterns": "node test/test-pattern-analyzer.cjs",
    "test:maria-integration": "node test/test-maria-integration.cjs",
    "test:ide-integration": "node test/test-ide-integration.cjs",
    "test:phase2": "node test/run-phase2-tests.cjs",
    "test:e2e-framework": "node test/e2e-test.cjs",
    "test:phase3": "node test/run-phase3-tests.cjs",
    "test:full-system": "npm run validate:scripts && npm run test:phase2 && npm run test:phase3",
    "test:all": "node test/test-dashboard.cjs",
    "test:dashboard": "node test/test-dashboard.cjs",
    "test:report": "node test/run-all-tests.cjs --verbose",
    "test:html-report": "node test/generate-visual-report.cjs --no-browser",
    "test:visual-open": "node test/generate-visual-report.cjs --output=versatil-test-report.html",
    "test:multi-agent": "node test/multi-agent-orchestrator.cjs",
    "test:agents": "node test/multi-agent-orchestrator.cjs",
    "test:collaboration": "node test/multi-agent-orchestrator.cjs && node test/multi-agent-dashboard.cjs",
    "dashboard:agents": "node test/multi-agent-dashboard.cjs",
    "analyze:real": "node test/real-codebase-analyzer.cjs",
    "test:real": "node test/real-codebase-analyzer.cjs",
    "test:supabase": "node test/test-supabase-integration.cjs",
    "test:supabase:local": "node test/test-supabase-integration.cjs --local",
    "test:supabase:cloud": "node test/test-supabase-integration.cjs --cloud",
    "migrate:vector-store": "node scripts/migrate-vector-store.cjs migrate",
    "migrate:vector-store:dry-run": "node scripts/migrate-vector-store.cjs migrate --dry-run",
    "migrate:vector-store:status": "node scripts/migrate-vector-store.cjs status",
    "migrate:vector-store:validate": "node scripts/migrate-vector-store.cjs validate",
    "edge:deploy": "node scripts/deploy-edge-functions.cjs deploy",
    "edge:deploy:verify": "node scripts/deploy-edge-functions.cjs deploy --verify",
    "edge:health": "node scripts/deploy-edge-functions.cjs health",
    "edge:validate": "node scripts/deploy-edge-functions.cjs validate",
    "edge:monitor": "node scripts/deploy-edge-functions.cjs monitor",
    "test:edge-functions": "node test/test-edge-functions.cjs",
    "test:edge-functions:suite": "node test/test-edge-functions.cjs --suite",
    "deploy:production": "npm run edge:validate && npm run edge:deploy:verify && npm run test:edge-functions",
    "deploy:readiness": "node scripts/check-deployment-readiness.cjs",
    "deploy:intelligent": "node scripts/intelligent-deployment-validator.cjs",
    "version:check": "node scripts/version-check.cjs",
    "version:fix": "node scripts/version-check.cjs --fix",
    "changelog:generate": "echo \"Changelog generated by release script\"",
    "release": "node scripts/release.cjs",
    "release:patch": "node scripts/release.cjs patch",
    "release:minor": "node scripts/release.cjs minor",
    "release:major": "node scripts/release.cjs major",
    "release:dry": "node scripts/release.cjs patch --dry-run",
    "preversion": "npm run validate && npm run version:check",
    "postversion": "git push && git push --tags",
    "update:check": "versatil-update check",
    "update:install": "versatil-update install",
    "update:status": "versatil-update status",
    "rollback": "versatil-rollback previous",
    "rollback:list": "versatil-rollback list",
    "config:wizard": "versatil-config wizard",
    "config:show": "versatil-config show",
    "install-mcps": "bash scripts/install-mcps.sh",
    "mcp:setup": "node bin/versatil-mcp-setup.js",
    "audit:daemon": "node bin/versatil-audit-daemon.js",
    "audit:daemon:start": "node bin/versatil-audit-daemon.js start",
    "audit:daemon:stop": "node bin/versatil-audit-daemon.js stop",
    "audit:daemon:status": "node bin/versatil-audit-daemon.js status",
    "audit:daemon:restart": "node bin/versatil-audit-daemon.js restart",
    "audit:daemon:run": "node bin/versatil-audit-daemon.js run",
    "audit:daemon:logs": "node bin/versatil-audit-daemon.js logs",
    "scenarios:test": "node dist/testing/scenarios/run-scenario-tests.js",
    "prepare": "husky",
    "rag:migrate:gcp": "node scripts/migrate-to-gcp.cjs",
    "rag:test:gcp": "node scripts/test-gcp-rag.cjs"
  },
  "keywords": [
    "claude-opera",
    "opera-methodology",
    "anthropic-mcp",
    "claude-agents",
    "ai-native-sdlc",
    "mcp-servers",
    "zero-context-loss",
    "rag-memory",
    "proactive-agents",
    "cursor-integration",
    "claude-desktop",
    "sdlc-automation",
    "quality-assurance",
    "maria-qa",
    "james-frontend",
    "marcus-backend",
    "sarah-pm",
    "alex-ba",
    "dr-ai-ml",
    "playwright-mcp",
    "github-mcp",
    "vertex-ai-mcp",
    "supabase-mcp",
    "autonomous-execution",
    "enterprise-ready",
    "typescript",
    "nodejs",
    "testing-automation",
    "security-scanning",
    "performance-monitoring",
    "open-source"
  ],
  "author": "Claude Opera by VERSATIL Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Nissimmiracles/versatil-sdlc-framework.git"
  },
  "bugs": {
    "url": "https://github.com/Nissimmiracles/versatil-sdlc-framework/issues"
  },
  "homepage": "https://github.com/Nissimmiracles/versatil-sdlc-framework#readme",
  "dependencies": {
    "@anthropic-ai/claude-agent-sdk": "^0.1.10",
    "@anthropic-ai/sdk": "^0.65.0",
    "@google-cloud/firestore": "^7.11.6",
    "@modelcontextprotocol/sdk": "^1.19.1",
    "@modelcontextprotocol/server-github": "^2025.4.8",
    "@octokit/graphql": "^7.1.1",
    "@octokit/rest": "^20.1.2",
    "@playwright/mcp": "^0.0.41",
    "@supabase/supabase-js": "^2.39.0",
    "@types/express": "^4.17.23",
    "@types/node-cron": "^3.0.11",
    "@xenova/transformers": "^2.17.1",
    "axios": "^1.6.0",
    "blessed": "^0.1.81",
    "blessed-contrib": "^4.11.0",
    "chalk": "^5.3.0",
    "chokidar": "^3.5.3",
    "commander": "^11.1.0",
    "concurrently": "^8.2.2",
    "dotenv": "^16.3.1",
    "exa-mcp-server": "^3.0.5",
    "express": "^4.21.2",
    "fs-extra": "^11.1.1",
    "glob": "^10.4.5",
    "inquirer": "^9.2.12",
    "node-cron": "^4.2.1",
    "openai": "^4.24.0",
    "semver": "^7.5.4",
    "tar": "^6.2.0",
    "ts-morph": "^21.0.1",
    "typescript": "^5.0.0",
    "ws": "^8.16.0"
  },
  "optionalDependencies": {
    "@google-cloud/aiplatform": "^3.35.0",
    "@google-cloud/vertexai": "^1.10.0",
    "@sentry/node": "^8.0.0",
    "n8n": "^1.0.0",
    "semgrep": "^1.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.35.0",
    "@percy/cli": "^1.31.4",
    "@percy/playwright": "^1.0.9",
    "@playwright/test": "^1.55.0",
    "@types/fs-extra": "^11.0.4",
    "@types/jest": "^29.5.0",
    "@types/node": "^24.5.2",
    "@types/tar": "^6.1.10",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "axe-playwright": "^2.2.2",
    "eslint": "^8.57.1",
    "globals": "^16.4.0",
    "husky": "^9.1.7",
    "jest": "^29.6.0",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "playwright": "^1.55.0",
    "playwright-extra": "^4.3.6",
    "prettier": "^3.0.0",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "ts-jest": "^29.1.0",
    "typescript-eslint": "^8.44.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "files": [
    ".claude/",
    ".claude-plugin/",
    "dist/",
    "src/",
    "scripts/",
    "templates/",
    "docs/",
    "examples/",
    ".cursor/",
    ".vscode/",
    "tests/",
    "playwright.config.ts",
    ".cursorrules",
    ".pre-commit-config.yaml",
    "CLAUDE.md",
    "README.md",
    "SECURITY.md",
    "CONTRIBUTING.md",
    "LICENSE",
    "tsconfig.json",
    "jest.config.js",
    "init-opera-mcp.js",
    "test-opera-mcp.js",
    "OPERA_MCP_DOCUMENTATION.md"
  ]
}
