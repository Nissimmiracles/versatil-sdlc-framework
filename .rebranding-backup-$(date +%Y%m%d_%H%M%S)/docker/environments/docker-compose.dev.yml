version: '3.8'

name: versatil-sdlc-development

services:
  # üöÄ VERSATIL SDLC Framework - Development Environment
  versatil-app:
    build:
      context: ../..
      dockerfile: docker/Dockerfile.dev
    container_name: versatil-dev-app
    ports:
      - "3000:3000"
      - "9229:9229" # Node.js debugging port
    environment:
      - NODE_ENV=development
      - VERSATIL_ENV=development
      - DEBUG=versatil:*
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ../../:/app
      - /app/node_modules
      - dev-logs:/app/logs
    networks:
      - versatil-dev
    depends_on:
      - redis-dev
      - postgres-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üìä PostgreSQL Database - Development
  postgres-dev:
    image: postgres:15-alpine
    container_name: versatil-dev-db
    environment:
      - POSTGRES_DB=versatil_dev
      - POSTGRES_USER=versatil
      - POSTGRES_PASSWORD=dev_password_123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ../../scripts/db/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - versatil-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U versatil -d versatil_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üîÑ Redis Cache - Development
  redis-dev:
    image: redis:7-alpine
    container_name: versatil-dev-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
      - ../../config/redis/redis-dev.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - versatil-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # üîç Supabase Local Development
  supabase-dev:
    image: supabase/supabase:latest
    container_name: versatil-dev-supabase
    ports:
      - "54321:8000"
      - "54322:5432"
    environment:
      - POSTGRES_PASSWORD=supabase_dev_123
      - JWT_SECRET=your-super-secret-jwt-token-dev
      - ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOuoJy13RBRX5I2Qd0_c8t_k5X3QK6CqkCPQ
      - SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.DaYlNEoUrrEn2Ig7tqibS-PHK5vGuGuQqhNnUz7_v0o
    volumes:
      - supabase-dev-data:/var/lib/postgresql/data
    networks:
      - versatil-dev
    restart: unless-stopped

  # üìä Development Monitoring Stack
  prometheus-dev:
    image: prom/prometheus:latest
    container_name: versatil-dev-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../../config/monitoring/prometheus-dev.yml:/etc/prometheus/prometheus.yml
      - prometheus-dev-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - versatil-dev
    restart: unless-stopped

  grafana-dev:
    image: grafana/grafana:latest
    container_name: versatil-dev-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-dev-data:/var/lib/grafana
      - ../../config/grafana/provisioning:/etc/grafana/provisioning
      - ../../config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - versatil-dev
    restart: unless-stopped
    depends_on:
      - prometheus-dev

  # üîç Development Tools
  mailhog-dev:
    image: mailhog/mailhog:latest
    container_name: versatil-dev-mailhog
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - versatil-dev
    restart: unless-stopped

  # üéØ Agent Development Environment
  agent-playground:
    build:
      context: ../..
      dockerfile: docker/Dockerfile.agent-dev
    container_name: versatil-dev-agents
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - VERSATIL_ENV=development
      - AGENT_MODE=development
    volumes:
      - ../../src/agents:/app/src/agents
      - ../../.versatil:/app/.versatil
    networks:
      - versatil-dev
    depends_on:
      - versatil-app
    restart: unless-stopped

  # üß™ Testing Environment
  test-runner:
    build:
      context: ../..
      dockerfile: docker/Dockerfile.test
    container_name: versatil-dev-tests
    environment:
      - NODE_ENV=test
      - VERSATIL_ENV=testing
    volumes:
      - ../../:/app
      - /app/node_modules
      - test-reports:/app/test-reports
    networks:
      - versatil-dev
    depends_on:
      - postgres-dev
      - redis-dev
    profiles:
      - testing
    command: npm run test:watch

networks:
  versatil-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-dev-data:
    driver: local
  redis-dev-data:
    driver: local
  supabase-dev-data:
    driver: local
  prometheus-dev-data:
    driver: local
  grafana-dev-data:
    driver: local
  dev-logs:
    driver: local
  test-reports:
    driver: local

# üöÄ Development Quick Commands
# Start full development environment:
#   docker-compose -f docker/environments/docker-compose.dev.yml up -d
#
# Start only core services:
#   docker-compose -f docker/environments/docker-compose.dev.yml up -d versatil-app postgres-dev redis-dev
#
# Start with testing:
#   docker-compose -f docker/environments/docker-compose.dev.yml --profile testing up -d
#
# View logs:
#   docker-compose -f docker/environments/docker-compose.dev.yml logs -f versatil-app
#
# Rebuild and restart:
#   docker-compose -f docker/environments/docker-compose.dev.yml up -d --build
#
# Clean up:
#   docker-compose -f docker/environments/docker-compose.dev.yml down -v